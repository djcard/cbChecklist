{"version":3,"file":"static/js/1495.0f2ee00d.chunk.js","mappings":"qMAyCA,WAAeA,EAAAA,EAAAA,KANS,SAACC,GACrB,MAAO,CACHC,YAAYD,EAAMC,YAE1B,GAEuC,CACnCC,kBAAkBA,EAAAA,mBADtB,EAjCmB,WACf,IAAIC,EAAYC,EAAAA,QAAMC,YACtBC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,0BACAC,EAAAA,EAAAA,uBAEJ,GAAE,KAEFF,EAAAA,EAAAA,YAAU,WACHH,EAAUF,YAAYQ,0BACrBC,EAAAA,EAAAA,YAAWP,EAAUF,YAAYQ,yBAAwB,SAACE,GAAM,OAAGP,EAAAA,QAAMQ,UAASC,EAAAA,EAAAA,iBAAgB,CAACC,uBAAuBH,EAAOI,UAAU,GAEnJ,GAAE,CAACZ,EAAUF,YAAYQ,2BAEzBH,EAAAA,EAAAA,YAAU,WACHH,EAAUF,YAAYe,4BACrBN,EAAAA,EAAAA,YAAWP,EAAUF,YAAYe,2BAA0B,SAACL,GAAM,OAAGP,EAAAA,QAAMQ,UAASC,EAAAA,EAAAA,iBAAgB,CAACI,yBAAyBN,EAAOI,UAAU,GAEvJ,GAAE,CAACZ,EAAUF,YAAYe,4BACzB,IAAIE,EAAYf,EAAUgB,UAAUL,wBAAyBM,EAAAA,EAAAA,KAACjB,EAAUgB,UAAUL,uBAAsB,IAAM,KAC1GO,EAAclB,EAAUgB,UAAUF,0BAA2BG,EAAAA,EAAAA,KAACjB,EAAUgB,UAAUF,yBAAwB,IAAM,KACpHK,QAAQC,IAAIL,GACZ,IAAIM,EAASrB,EAAUF,YAAYwB,eAAiBP,EAAYG,EAChE,OAAOD,EAAAA,EAAAA,KAAA,OAAKM,GAAG,oBAAoBC,MAAM,8BAA8BC,MAAO,CAACC,UAAU,kBAAkBC,QAAQ,gBAAgBC,SAAEP,GACzI,G,iFCdA,UAbuB,SAACQ,GAEpB,OACIC,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACIE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACIX,EAAAA,EAAAA,KAAA,UAAQM,GAAG,UAAUQ,QAAS,kBAAI9B,EAAAA,QAAMQ,UAASV,EAAAA,EAAAA,mBAAkB,CAACuB,gBAAe,IAAO,EAACM,SAAC,aAC5FX,EAAAA,EAAAA,KAAA,UAAQM,GAAG,aAAaQ,QAAS,kBAAI9B,EAAAA,QAAMQ,UAASV,EAAAA,EAAAA,mBAAkB,CAACuB,gBAAe,IAAQ,EAACM,SAAC,mBAEpGX,EAAAA,EAAAA,KAACe,EAAAA,QAAU,MAGvB,C","sources":["components/states/Connection/Connection.js","components/states/Connection/tests/ConnectionTest.js"],"sourcesContent":["import React,{useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {updateAppSettings, updateDataStore} from \"src/actions/foundationActions\";\r\n//import CheckMark from 'src/components/icons/CheckMark'\r\nimport {createConnectionTimer, loadConnectionConsts} from \"src/containers/foundation/foundationFunctions\";\r\nimport store from 'src/store';\r\nimport {loadNewMod} from \"src/utilities/utilityFunctions\";\r\n\r\nconst Connection = () => {\r\n    let stateData = store.getState();\r\n    useEffect(()=>{\r\n        createConnectionTimer();\r\n        loadConnectionConsts();\r\n        //eslint-disable-next-line\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(stateData.appSettings.connectionActiveModName){\r\n            loadNewMod(stateData.appSettings.connectionActiveModName,(module)=>store.dispatch(updateDataStore({connectionActiveModule:module.default})));\r\n        }\r\n    },[stateData.appSettings.connectionActiveModName])\r\n\r\n    useEffect(()=>{\r\n        if(stateData.appSettings.connectionInActiveModName){\r\n            loadNewMod(stateData.appSettings.connectionInActiveModName,(module)=>store.dispatch(updateDataStore({connectionInActiveModule:module.default})));\r\n        }\r\n    },[stateData.appSettings.connectionInActiveModName])\r\n    let activeMod = stateData.dataStore.connectionActiveModule ? <stateData.dataStore.connectionActiveModule /> : null;\r\n    let inActiveMod = stateData.dataStore.connectionInActiveModule ? <stateData.dataStore.connectionInActiveModule /> : null;\r\n    console.dir(activeMod);\r\n    let texter = stateData.appSettings.connectionLive ? activeMod : inActiveMod;\r\n    return <div id=\"connectionWrapper\" title=\"Connection to Server Status\" style={{transform:\"translateY(3px)\",display:\"inline-block\"}}>{texter}</div>\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        appSettings:state.appSettings\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{\r\n    updateAppSettings:updateAppSettings\r\n})(Connection);\r\n","import React from 'react';\r\nimport Connection from \"../Connection\";\r\nimport {updateAppSettings} from \"src/actions/foundationActions\";\r\nimport store from 'src/store';\r\n\r\nconst ConnectionTest = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <button id=\"connect\" onClick={()=>store.dispatch(updateAppSettings({connectionLive:true}))}>Connect</button>\r\n                <button id=\"disconnect\" onClick={()=>store.dispatch(updateAppSettings({connectionLive:false}))}>Disconnect</button>\r\n            </div>\r\n            <Connection/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ConnectionTest;\r\n"],"names":["connect","state","appSettings","updateAppSettings","stateData","store","getState","useEffect","createConnectionTimer","loadConnectionConsts","connectionActiveModName","loadNewMod","module","dispatch","updateDataStore","connectionActiveModule","default","connectionInActiveModName","connectionInActiveModule","activeMod","dataStore","_jsx","inActiveMod","console","dir","texter","connectionLive","id","title","style","transform","display","children","props","_jsxs","onClick","Connection"],"sourceRoot":""}