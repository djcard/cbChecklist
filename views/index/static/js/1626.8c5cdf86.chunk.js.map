{"version":3,"file":"static/js/1626.8c5cdf86.chunk.js","mappings":"+MA8CA,WAAeA,EAAAA,EAAAA,KANS,SAACC,GACrB,MAAQ,CACJC,YAAYD,EAAMC,YAE1B,GAEuC,CAAC,EAAxC,EAtC6B,SAACC,GAAW,IAADC,EAChCC,EAAYC,EAAAA,QAAMC,WAClBC,EAAgBH,EAAUH,YAAYO,iBAC1CC,EAAAA,EAAAA,YAAU,WACHF,IACCG,EAAAA,EAAAA,YAAWH,GAAe,SAACI,GAAM,OAAGN,EAAAA,QAAMO,UAASC,EAAAA,EAAAA,mBAAkB,CAACC,YAAYH,EAAOI,UAAU,GAE3G,GAAE,CAACR,IAEH,IAAIS,EAAiC,QAArBb,EAAAC,EAAUH,mBAAW,IAAAE,GAArBA,EAAuBa,WAAaZ,EAAUH,YAAYe,WAAa,KACnFC,EAAOb,EAAUH,YAAYa,aAAcI,EAAAA,EAAAA,KAACd,EAAUH,YAAYa,YAAW,IAAM,KAEhFK,EAAU,CAAC,EAEd,OADAA,EAAUjB,EAAMkB,cAAa,GAEzBC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,GAAG,eAAeC,KAAMtB,EAAMD,YAAYC,EAAMkB,aAAcK,OAAQ,kBAAMpB,EAAAA,QAAMO,UAASC,EAAAA,EAAAA,mBAAkBM,GAAW,EAAEO,KAAK,KAAIC,SAAA,EACtIT,EAAAA,EAAAA,KAACI,EAAAA,EAAMM,OAAM,CAACC,aAAW,EAAAF,UACrBT,EAAAA,EAAAA,KAACI,EAAAA,EAAMQ,MAAK,CAAAH,SAAEX,OAElBE,EAAAA,EAAAA,KAACI,EAAAA,EAAMS,KAAI,CAAAJ,SACNV,KAELC,EAAAA,EAAAA,KAACI,EAAAA,EAAMU,OAAM,CAAAL,UACTT,EAAAA,EAAAA,KAACe,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QAAS,WAAM9B,EAAAA,QAAMO,UAASC,EAAAA,EAAAA,mBAAkBM,GAAW,EAAEQ,SAAC,cAO9G,G,6FCRA,WAAe5B,EAAAA,EAAAA,KAPS,SAACC,GACrB,MAAQ,CACJC,YAAYD,EAAMC,YAClBmC,QAAQpC,EAAMoC,QAEtB,GAEuC,CACnCvB,kBAAAA,EAAAA,kBACAwB,cAAAA,EAAAA,eAFJ,EAvBgC,SAACnC,GAK7B,OAJAO,EAAAA,EAAAA,YAAU,WACNP,EAAMmC,cAAc,CAACrB,WAAW,oBAEpC,GAAE,KAEEK,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACIN,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACIT,EAAAA,EAAAA,KAAA,UAAQiB,QAAS,kBAAKjC,EAAMW,kBAAkB,CAACyB,YAAW,GAAM,EAAEf,GAAG,eAAcI,SAAC,gBACpFT,EAAAA,EAAAA,KAAA,UAAQiB,QAAS,eAAAI,EAAA,OAAKrC,EAAMW,kBAAkB,CAACG,WAAwB,QAAduB,EAACrC,EAAMkC,eAAO,IAAAG,OAAA,EAAbA,EAAevB,YAAY,EAAEO,GAAG,WAAUI,SAAC,kBAEzGT,EAAAA,EAAAA,KAACsB,EAAAA,QAAmB,CAACpB,YAAY,iBAG7C,G","sources":["components/supporting/GenericModal/GenericModalDefault.js","components/supporting/GenericModal/tests/GenericModalDefaultTest.js"],"sourcesContent":["import React, {useEffect} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {connect} from \"react-redux\";\r\nimport {updateAppSettings} from \"src/actions/foundationActions\";\r\nimport {loadNewMod} from \"src/utilities/utilityFunctions\";\r\nimport store from 'src/store';\r\n\r\nconst GenericModalDefault  = (props) => {\r\n    let stateData = store.getState();\r\n    let currentModName =stateData.appSettings.modalModuleName;\r\n    useEffect(()=>{\r\n        if(currentModName){\r\n            loadNewMod(currentModName,(module)=>store.dispatch(updateAppSettings({modalModule:module.default})));\r\n        }\r\n    },[currentModName])\r\n\r\n    let modalTitle= stateData.appSettings?.modalTitle ? stateData.appSettings.modalTitle : null;\r\n    let modMod=stateData.appSettings.modalModule ? <stateData.appSettings.modalModule /> : null;\r\n\r\n       let dismisser={};\r\n        dismisser[props.triggerName]=false;\r\n        return(\r\n            <Modal id=\"genericModal\" show={props.appSettings[props.triggerName]} onHide={() => store.dispatch(updateAppSettings(dismisser))} size='xl'>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{modalTitle}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {modMod}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() =>{store.dispatch(updateAppSettings(dismisser))}}>\r\n                        Close\r\n                    </Button>\r\n\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n};\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return  {\r\n        appSettings:state.appSettings,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(GenericModalDefault);\r\n","import React,{useEffect} from 'react';\r\nimport GenericModalDefault from \"../GenericModalDefault\";\r\nimport {connect} from \"react-redux\";\r\nimport {updateAppSettings} from \"src/actions/foundationActions\";\r\nimport {updateTesting} from \"src/actions/testingActions\";\r\n\r\n\r\nconst GenericModalDefaultTest = (props) => {\r\n    useEffect(()=>{\r\n        props.updateTesting({modalTitle:\"My awesome Title\"})\r\n        //eslint-disable-next-line\r\n    },[]);\r\n    return (\r\n        <div>\r\n            <div>\r\n                <button onClick={()=> props.updateAppSettings({showTestMe:true})} id=\"showTheModal\">Show Modal</button>\r\n                <button onClick={()=> props.updateAppSettings({modalTitle:props.testing?.modalTitle})} id=\"addTitle\">Add Title</button>\r\n            </div>\r\n            <GenericModalDefault triggerName=\"showTestMe\" />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return  {\r\n        appSettings:state.appSettings,\r\n        testing:state.testing\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{\r\n    updateAppSettings,\r\n    updateTesting\r\n})(GenericModalDefaultTest);\r\n"],"names":["connect","state","appSettings","props","_stateData$appSetting","stateData","store","getState","currentModName","modalModuleName","useEffect","loadNewMod","module","dispatch","updateAppSettings","modalModule","default","modalTitle","modMod","_jsx","dismisser","triggerName","_jsxs","Modal","id","show","onHide","size","children","Header","closeButton","Title","Body","Footer","Button","variant","onClick","testing","updateTesting","showTestMe","_props$testing","GenericModalDefault"],"sourceRoot":""}