{"version":3,"file":"static/js/256.9152178b.chunk.js","mappings":"odAEO,IAAMA,EAAoB,SAACC,GAC9B,MAAO,CACHC,KAAK,uBACLC,QAAQF,EAEhB,EAEaG,EAAyB,SAACH,GACnC,MAAO,CACHC,KAAK,4BACLC,QAAQF,EAEhB,EAGaI,EAAc,SAACC,GACxB,MAAO,CACHJ,KAAK,gBACLC,QAAQG,EAEhB,EAEaC,EAAiB,SAACC,GAC3B,MAAO,CACHN,KAAK,mBACLC,QAAQK,EAEhB,EAEaC,EAAgB,SAACC,GAC1B,MAAO,CACHR,KAAK,mBACLC,QAAQO,EAEhB,EAEaC,EAAqB,SAACC,EAAUC,GACzC,MAAO,CACHX,KAAK,wBACLC,QAAS,CAACS,UAAUA,EAAUC,QAAQA,GAE9C,EAEaC,EAAY,SAACF,EAAUG,GAChC,MAAO,CACHb,KAAK,aACLC,QAAQ,CAACS,UAAUA,EAAUG,IAAIA,GAEzC,EAEaC,EAAmB,SAACJ,GAC7B,MAAO,CACHV,KAAK,sBACLC,QAAQS,EAEhB,EAEaK,EAAgB,SAACC,GAC1B,MAAO,CACHhB,KAAK,eACLC,QAAQe,EAEhB,C,iFCtCA,WAAeC,EAAAA,EAAAA,KANS,SAACC,GACrB,MAAO,CACHC,UAAUD,EAAMC,UAExB,GAEuC,CAAC,EAAxC,EArBY,SAACC,GACT,IAAIC,EAAYC,EAAAA,QAAMC,WAClBnB,EAAuB,OAATiB,QAAS,IAATA,GAAAA,EAAWF,UAAUK,eAAeJ,EAAMV,WAAaW,EAAUF,UAAUC,EAAMV,WAAa,CAAC,EAC7Ge,EAAaL,EAAMM,YAActB,EAAauB,wBAA2BvB,EAAawB,kBACtFC,EAAiBT,EAAMU,SAAWV,EAAMU,SAAW,GACnDC,EAAcX,EAAMM,YAAc,SAAW,GAEjD,OACQM,EAAAA,EAAAA,KAAA,MAAIC,UAAW,mBAAqBR,EAAa,IAAMI,EAAgBK,MAAOC,OAAOC,OAAO,CAAC,EAAEhC,EAAaiC,cAAcjB,EAAMkB,UAC3HC,QAAS,WAAKjB,EAAAA,QAAMkB,UAAS5B,EAAAA,EAAAA,WAAUQ,EAAMV,UAAUU,EAAMqB,QAAQ,EAAEC,UACpEV,EAAAA,EAAAA,KAAA,KAAGC,UAAW,wBAA0BF,EAAYW,SAAEtB,EAAMuB,SAGhF,G,kFCbMC,EAAa,SAACC,GAChB,IAAIxB,EAAWC,EAAAA,QAAMC,WACrB,OACIF,EAAUyB,SAAStB,eAAeqB,GAAYxB,EAAUyB,SAASD,GAAUE,KAAI,SAACC,GAC5E,OAAOhB,EAAAA,EAAAA,KAACiB,EAAAA,QAAG,CAACN,MAAOK,EAAKL,MACZjC,UAAWsC,EAAKtC,UAEhBwC,WAAYF,EAAKE,WACjBpB,SAAUkB,EAAKlB,SACfQ,SAAUU,EAAKV,SACfG,OAAQO,EAAKnC,IACba,YAAesB,EAAKtB,aALfsB,EAAKnC,IAO1B,IAAK,IAEb,EAEMqB,EAAM,CAAC,EAsBb,WAAejB,EAAAA,EAAAA,KANS,SAACC,GACrB,MAAO,CACH4B,SAAS5B,EAAM4B,SAEvB,GAEuC,CAAC,EAAxC,EApBiB,SAAC1B,GAQd,OAPA+B,EAAAA,EAAAA,YAAU,WAEN,IADA,IAAIC,EAAQC,SAASC,uBAAuB,kBACpCC,EAAE,EAAEA,EAAEH,EAAMI,OAAOD,IACvBH,EAAMJ,KAAKO,GAAGrB,MAAMuB,oBAAsB,EAC1CL,EAAMJ,KAAKO,GAAGrB,MAAMwB,qBAAuB,CAEnD,KAEI1B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAeC,MAAOC,OAAOC,OAAO,CAAC,EAAEF,EAAM,CAACyB,SAASvC,EAAMuC,SAAWvC,EAAMuC,SAAW,MAAMjB,SACzGE,EAAWxB,EAAMyB,WAE9B,G","sources":["actions/uiActions.js","components/supporting/Tab.js","components/supporting/TabBlock.js"],"sourcesContent":["\r\n//Control Blocks\r\nexport const addToControlBlock = (status) =>{\r\n    return {\r\n        type:\"ADD_TO_CONTROL_BLOCK\",\r\n        payload:status\r\n    }\r\n};\r\n\r\nexport const removeFromControlBlock = (status) =>{\r\n    return {\r\n        type:\"REMOVE_FROM_CONTROL_BLOCK\",\r\n        payload:status\r\n    }\r\n};\r\n\r\n//Tabs\r\nexport const addTabGroup = (tabGroupData)=>{\r\n    return {\r\n        type:\"ADD_TAB_GROUP\",\r\n        payload:tabGroupData\r\n    }\r\n};\r\n\r\nexport const removeTabGroup = (tabGroupName)=>{\r\n    return {\r\n        type:\"REMOVE_TAB_GROUP\",\r\n        payload:tabGroupName\r\n    }\r\n};\r\n\r\nexport const addTabToGroup = (tabData) => {\r\n    return {\r\n        type:\"ADD_TAB_TO_GROUP\",\r\n        payload:tabData\r\n    }\r\n};\r\n\r\nexport const removeTabFromGroup = (groupName,keyName) => {\r\n    return {\r\n        type:\"REMOVE_TAB_FROM_GROUP\",\r\n        payload: {groupName:groupName,keyName:keyName}\r\n    }\r\n};\r\n\r\nexport const toggleTab = (groupName,key) => {\r\n    return {\r\n        type:\"TOGGLE_TAB\",\r\n        payload:{groupName:groupName,key:key}\r\n    }\r\n};\r\n\r\nexport const addTabPanelGroup = (groupName) =>{\r\n    return {\r\n        type:\"ADD_TAB_PANEL_GROUP\",\r\n        payload:groupName\r\n    }\r\n}\r\n\r\nexport const addControlSet = (controls) => {\r\n    return {\r\n        type:\"ADD_CONTROLS\",\r\n        payload:controls\r\n    }\r\n};","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {toggleTab} from \"src/actions/uiActions\";\r\nimport store from 'src/store';\r\n\r\nconst Tab = (props) => {\r\n    let stateData = store.getState();\r\n    let tabGroupData=(stateData?.tabGroups.hasOwnProperty(props.groupName) ? stateData.tabGroups[props.groupName] : {});\r\n    let groupClass = props.isActiveTab ? tabGroupData.groupTabActiveClassName  : tabGroupData.groupTabClassName\r\n    let propsClassName = props.tabClass ? props.tabClass : \"\";\r\n    let activeClass = props.isActiveTab ? \"active\" : \"\";\r\n\r\n    return (\r\n            <li className={\"nav-item kimTab \" + groupClass + \" \" + propsClassName} style={Object.assign({},tabGroupData.groupTabStyle,props.tabStyle)}\r\n                 onClick={()=>{store.dispatch(toggleTab(props.groupName,props.tabKey))}}>\r\n                    <a className={\"nav-link kimTabLabel \" + activeClass}>{props.label}</a>\r\n            </li>\r\n        )\r\n};\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        tabGroups:state.tabGroups\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(Tab);\r\n","import React,{useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Tab from './Tab'\r\nimport store from 'src/store';\r\n\r\nconst renderTabs = (tabGroup) => {\r\n    let stateData =store.getState();\r\n    return (\r\n        stateData.tabStore.hasOwnProperty(tabGroup) ? stateData.tabStore[tabGroup].map((item)=>{\r\n            return <Tab label={item.label}\r\n                        groupName={item.groupName}\r\n                        key={item.key}\r\n                        tabVisible={item.tabVisible}\r\n                        tabClass={item.tabClass}\r\n                        tabStyle={item.tabStyle}\r\n                        tabKey={item.key}\r\n                        isActiveTab = {item.isActiveTab}\r\n            />\r\n        }) : null\r\n    )\r\n};\r\n\r\nconst style={};\r\n//\r\nconst TabBlock = (props) => {\r\n    useEffect(()=>{\r\n        let hldrs = document.getElementsByClassName(\"tabContentHldr\");\r\n        for(var i=0;i<hldrs.length;i++){\r\n            hldrs.item(i).style.borderTopLeftRadius = 0;\r\n            hldrs.item(i).style.borderTopRightRadius = 0;\r\n        }\r\n    })\r\n    return (\r\n        <nav className=\"nav tabBlock\" style={Object.assign({},style,{minWidth:props.minWidth ? props.minWidth : 125})}>\r\n            {renderTabs(props.tabGroup)}\r\n        </nav>);\r\n};\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        tabStore:state.tabStore\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(TabBlock);\r\n"],"names":["addToControlBlock","status","type","payload","removeFromControlBlock","addTabGroup","tabGroupData","removeTabGroup","tabGroupName","addTabToGroup","tabData","removeTabFromGroup","groupName","keyName","toggleTab","key","addTabPanelGroup","addControlSet","controls","connect","state","tabGroups","props","stateData","store","getState","hasOwnProperty","groupClass","isActiveTab","groupTabActiveClassName","groupTabClassName","propsClassName","tabClass","activeClass","_jsx","className","style","Object","assign","groupTabStyle","tabStyle","onClick","dispatch","tabKey","children","label","renderTabs","tabGroup","tabStore","map","item","Tab","tabVisible","useEffect","hldrs","document","getElementsByClassName","i","length","borderTopLeftRadius","borderTopRightRadius","minWidth"],"sourceRoot":""}