{"version":3,"file":"static/js/2642.a7688ac6.chunk.js","mappings":"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","sources":["actions/uiActions.js","components/cbChecklist/ChecklistMonitor.js","components/cbChecklist/Choose.js","components/cbChecklist/ChooseRow.js","components/cbChecklist/CreateEditChildButton.js","components/cbChecklist/Details.js","components/cbChecklist/EditGoalRow.js","components/cbChecklist/EditTargetRow.js","components/cbChecklist/Goals.js","components/cbChecklist/MakeChecklistInactive.js","components/cbChecklist/Manage.js","components/cbChecklist/NewChecklistButton.js","components/cbChecklist/OpenChecklist.js","components/cbChecklist/StatusDrop.js","components/cbChecklist/Targets.js","components/cbChecklist/Welcome.js","components/supporting/Tab.js","components/supporting/TabBlock.js"],"sourcesContent":["\r\n//Control Blocks\r\nexport const addToControlBlock = (status) =>{\r\n    return {\r\n        type:\"ADD_TO_CONTROL_BLOCK\",\r\n        payload:status\r\n    }\r\n};\r\n\r\nexport const removeFromControlBlock = (status) =>{\r\n    return {\r\n        type:\"REMOVE_FROM_CONTROL_BLOCK\",\r\n        payload:status\r\n    }\r\n};\r\n\r\n//Tabs\r\nexport const addTabGroup = (tabGroupData)=>{\r\n    return {\r\n        type:\"ADD_TAB_GROUP\",\r\n        payload:tabGroupData\r\n    }\r\n};\r\n\r\nexport const removeTabGroup = (tabGroupName)=>{\r\n    return {\r\n        type:\"REMOVE_TAB_GROUP\",\r\n        payload:tabGroupName\r\n    }\r\n};\r\n\r\nexport const addTabToGroup = (tabData) => {\r\n    return {\r\n        type:\"ADD_TAB_TO_GROUP\",\r\n        payload:tabData\r\n    }\r\n};\r\n\r\nexport const removeTabFromGroup = (groupName,keyName) => {\r\n    return {\r\n        type:\"REMOVE_TAB_FROM_GROUP\",\r\n        payload: {groupName:groupName,keyName:keyName}\r\n    }\r\n};\r\n\r\nexport const toggleTab = (groupName,key) => {\r\n    return {\r\n        type:\"TOGGLE_TAB\",\r\n        payload:{groupName:groupName,key:key}\r\n    }\r\n};\r\n\r\nexport const addTabPanelGroup = (groupName) =>{\r\n    return {\r\n        type:\"ADD_TAB_PANEL_GROUP\",\r\n        payload:groupName\r\n    }\r\n}\r\n\r\nexport const addControlSet = (controls) => {\r\n    return {\r\n        type:\"ADD_CONTROLS\",\r\n        payload:controls\r\n    }\r\n};","import {connect} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {\r\n    checkWindow,\r\n    obtainChecklists,\r\n    obtainGoals,\r\n    obtainResults,\r\n    obtainTargets\r\n} from \"../../containers/cbChecklist/checkListMethods\";\r\nimport store from \"../../store\";\r\nimport {addTabGroup, addTabToGroup, toggleTab} from \"../../actions/uiActions\";\r\nimport {createTabGroupObject,createTabModel} from \"../../datamodels/foundation\";\r\nimport Choose from \"./Choose\";\r\nimport Manage from \"./Manage\";\r\nimport ExecuteChecklist from \"./ExecuteChecklist\";\r\nimport { addTabPanelGroup } from \"../../actions/uiActions\";\r\nimport Details from \"./Details\";\r\nimport Targets from \"./Targets\";\r\nimport Goals from \"./Goals\";\r\n\r\nconst checkDetails = [\r\n    {\r\n        groupName: \"checkTabs\",\r\n        key: \"choose\",\r\n        content: <Choose />\r\n    },\r\n    {\r\n        groupName: \"checkTabs\",\r\n        key: \"manage\",\r\n        content: <Manage />\r\n    },\r\n    {\r\n        groupName: \"checkTabs\",\r\n        key: \"execute\",\r\n        content: <ExecuteChecklist />\r\n    }\r\n];\r\n/*\r\nconst manageDetails = [\r\n    {\r\n        groupName: \"manageTabs\",\r\n        key: \"details\",\r\n        content: <Details />\r\n    },\r\n    {\r\n        groupName: \"manageTabs\",\r\n        key: \"targets\",\r\n        content: <Targets />\r\n    },\r\n    {\r\n        groupName: \"manageTabs\",\r\n        key: \"goals\",\r\n        content: <Goals />\r\n    }\r\n]*/\r\n\r\n\r\nconst ChecklistMonitor = () => {\r\n    useEffect(()=>{\r\n        store.dispatch(addTabGroup(createTabGroupObject(\"checkTabs\", \"tabMuted\", {}, \"\", {}, \"kimTabActive\")));\r\n        store.dispatch(addTabToGroup(createTabModel(\"Choose\", \"checkTabs\", \"choose\", true, true, {}, \"\")));\r\n        //store.dispatch(addTabToGroup(createTabModel(\"Manage\", \"checkTabs\", \"manage\", true, false, {}, \"\")));\r\n        store.dispatch(addTabToGroup(createTabModel(\"Execute\", \"checkTabs\", \"execute\", true, false, {}, \"\")));\r\n\r\n        //store.dispatch(addTabGroup(createTabGroupObject(\"manageTabs\", \"tabMuted\", {}, \"\", {}, \"kimTabActive\")));\r\n        //store.dispatch(addTabToGroup(createTabModel(\"Details\", \"manageTabs\", \"details\", true, true, {}, \"\")));\r\n        //store.dispatch(addTabToGroup(createTabModel(\"Targets\", \"manageTabs\", \"targets\", true, false, {}, \"\")));\r\n        //store.dispatch(addTabToGroup(createTabModel(\"Goals\", \"manageTabs\", \"goals\", true, false, {}, \"\")));\r\n\r\n        store.dispatch(addTabPanelGroup({blockName:\"checkTabs\",data:checkDetails}))\r\n        //store.dispatch(addTabPanelGroup({blockName:\"manageTabs\",data:manageDetails}))\r\n\r\n\r\n    },[]);\r\n\r\n\r\n    useEffect(()=>{\r\n        obtainChecklists();\r\n    },[])\r\n\r\n    let checklistId = store.getState().siteModelChecklist?.currentChecklist?.id;\r\n\r\n    useEffect(()=>{\r\n        if(checklistId) {\r\n            obtainTargets(checklistId);\r\n            obtainGoals(checklistId);\r\n            obtainResults(checklistId);\r\n        }\r\n    },[checklistId])\r\n\r\n    return <div style={{display:\"none\"}}>Monitor</div>\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        siteModelChecklist:state.siteModelChecklist\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(ChecklistMonitor);","import {connect} from \"react-redux\";\r\nimport store from \"../../store\";\r\nimport ChooseRow from \"./ChooseRow\";\r\n\r\n\r\nconst Choose = () => {\r\n    let allCheckLists = store.getState().siteModelChecklist?.allChecklists ? store.getState().siteModelChecklist.allChecklists : [];\r\n    return <div>\r\n        <div className={\"row\"}>\r\n            <div className={\"col-6\"}><h3>Choose</h3></div>\r\n            <div className={\"col-6\"} style={{textAlign:\"right\"}}></div>\r\n        </div>\r\n        <table className={\"table table-striped table-bordered\"}>\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>Name</th>\r\n                    <th>Description</th>\r\n                    <th>Display</th>\r\n                    <th>Status</th>\r\n                    <th> </th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {allCheckLists.map((item,idx)=>{\r\n                return <ChooseRow item={item} idx={idx} key={item.id} />\r\n            })}\r\n            <ChooseRow item={{}} idx={allCheckLists.length+1} />\r\n            </tbody>\r\n        </table>\r\n\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        siteModelChecklist:state.siteModelChecklist,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(Choose);","import OpenChecklist from \"./OpenChecklist\";\r\nimport MakeCheckListInactive from \"./MakeChecklistInactive\";\r\nimport { useEffect, useState } from \"react\";\r\nimport store from \"../../store\";\r\nimport { updateSiteModelChecklist } from \"../../actions/cbChecklist_Actions\";\r\nimport { updateCheckList } from \"../../containers/cbChecklist/checkListMethods\";\r\nimport { connect } from \"react-redux\";\r\nimport DisplayOrderChooser from \"./DisplayOrderChooser\";\r\nimport StatusDrop from \"./StatusDrop\";\r\n\r\nconst updateChecklistItem = (property, value) => {\r\n    let checklist = store.getState().siteModelChecklist?.currentChecklist ? store.getState().siteModelChecklist.currentChecklist : {};\r\n    checklist[property]=value;\r\n    if(property===\"displayorder\"){\r\n        checklist[\"updateOrder\"]=1;\r\n    }\r\n    store.dispatch(updateSiteModelChecklist({currentChecklist:checklist}));\r\n}\r\n\r\n\r\nconst ChooseRow = ({item,idx}) => {\r\n\r\n    let [isEditMode,setIsEditMode] = useState(!item.id?.length);\r\n    let allCheckLists = store.getState().siteModelChecklist?.allChecklists ? store.getState().siteModelChecklist.allChecklists : [];\r\n    let checklist = store.getState().siteModelChecklist?.currentChecklist ? store.getState().siteModelChecklist.currentChecklist : {};\r\n\r\n    let checklistid = checklist.id;\r\n\r\n    useEffect(()=>{\r\n        if(checklistid!==item.id){\r\n            setIsEditMode(0);\r\n        }\r\n    },[checklistid,item.id])\r\n\r\n    const saveChecklist = () =>{\r\n        setIsEditMode(0);\r\n        updateCheckList(Object.assign({},checklist));\r\n    }\r\n    let status = <StatusDrop val={checklist.statusName} action={()=>{}} />\r\n    let nameInput = <input type=\"text\" className=\"form-control\" value={checklist.name} onChange={(evt)=>updateChecklistItem(\"name\",evt.target.value)} />\r\n    let descInput = <input type=\"text\" className=\"form-control\" value={checklist.description} onChange={(evt)=>updateChecklistItem(\"description\",evt.target.value)} />\r\n\r\n    let saveButton = isEditMode\r\n        ? <button className=\"btn btn-primary\" onClick={()=>saveChecklist(0)}>Save</button>\r\n        : <button className=\"btn btn-info\" onClick={()=>{setIsEditMode(1);store.dispatch(updateSiteModelChecklist({currentChecklist:item}))}}>Edit</button>\r\n\r\n    let dispOrder = isEditMode\r\n        ? <DisplayOrderChooser length={allCheckLists.length} val={item.displayorder} action={(newVal)=>{updateChecklistItem(\"displayorder\",newVal)}} />\r\n        : item.displayorder +1;  \r\n    \r\n    let statusColors=[\r\n        \"\",\r\n        \"green\",\r\n        \"Aqua\",\r\n        \"GreenYellow\",\r\n        \"DarkOrange\",\r\n        \"black\"\r\n    ]\r\n\r\n    return !item.id?.length && !isEditMode\r\n        ? <tr><td colSpan={7}><button onClick={()=>{setIsEditMode(1);store.dispatch(updateSiteModelChecklist({currentChecklist:{id:\"\",displayorder:1000}}))}}>New</button></td></tr>\r\n        : <tr>\r\n        <td style={{backgroundColor:statusColors[item?.status ? item.status : 0]}}>{parseInt(idx)+1}</td>\r\n        <td>{isEditMode ? nameInput : item.name}</td>\r\n        <td>{isEditMode ? descInput : item.description}</td>\r\n        <td>{dispOrder}</td>\r\n        <td>{isEditMode ? status : item.statusname}</td>\r\n        <td><OpenChecklist item={item} /></td>\r\n        <td><MakeCheckListInactive id={item.id}/> </td>\r\n        <td> {saveButton}</td>\r\n    </tr>\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        siteModelChecklist:state.siteModelChecklist\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(ChooseRow);","import store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\n\r\nconst addChild = (checklistuuid,parentid,displayOrder) => {\r\n    let allTargets = store.getState().siteModelChecklist?.currentChecklistTargets ? store.getState().siteModelChecklist?.currentChecklistTargets : [];\r\n    allTargets.push({checklistuuid:checklistuuid,displayOrder:displayOrder,parentid:parentid,isDirty:true});\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistTargets:allTargets}));\r\n}\r\n\r\nconst CreateEditChildButton = ({checklistuuid,parentid,displayOrder}) => {\r\n    return <button onClick={()=>addChild(checklistuuid,parentid,displayOrder)}> Add Child </button>\r\n}\r\n\r\nexport default CreateEditChildButton;","import {connect} from \"react-redux\";\r\nimport store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\nimport {updateCheckList} from \"../../containers/cbChecklist/checkListMethods\";\r\n\r\n\r\nconst updateChecklist = (property, value) => {\r\n    let checklist = store.getState().siteModelChecklist?.currentChecklist ? store.getState().siteModelChecklist.currentChecklist : {};\r\n    checklist[property]=value;\r\n    store.dispatch(updateSiteModelChecklist({currentChecklist:checklist}));\r\n}\r\nconst EditChecklistDetails = () => {\r\n    let checklist = store.getState().siteModelChecklist?.currentChecklist ? store.getState().siteModelChecklist.currentChecklist : {};\r\n    return <div>\r\n        <form>\r\n            <div>\r\n                Name: <input type={\"text\"} value={checklist.name} onChange={(evt)=>updateChecklist(\"name\", evt.currentTarget.value)} /><br/>\r\n                Description: <input type={\"text\"} value={checklist.description} onChange={(evt)=>updateChecklist(\"description\", evt.currentTarget.value)} /><br/>\r\n                Active <input type={\"checkbox\"} checked={checklist.active} onChange={(evt)=>updateChecklist(\"active\", evt.currentTarget.checked)} /><br/>\r\n                <button type=\"button\" onClick={()=>updateCheckList(Object.assign({},checklist))}>Save</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n\r\n    return {\r\n        siteModelChecklist:state.siteModelChecklist,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(EditChecklistDetails);","import {useState} from \"react\";\r\nimport {saveChecklistGoal} from \"../../containers/cbChecklist/checkListMethods\";\r\n\r\nconst EditGoalRow = ({item,idx}) => {\r\n    item[\"displayorder\"]=isNaN(item.displayorder) ? idx+1 : item.displayorder;\r\n    let [goal,setGoal] = useState(item);\r\n    let bgcolor = goal.hasOwnProperty(\"isDirty\") && goal.isDirty ? \"yellow\" : \"none\";\r\n\r\n    let saveButton = goal?.isDirty ? <button className={\"btn btn-sm btn-secondary\"} onClick={()=>{setGoal(Object.assign({},goal,{\"isDirty\":false})); saveChecklistGoal(goal)}}>Save</button> : null;\r\n\r\n    return <tr style={{backgroundColor:bgcolor}}>\r\n        <td>{idx+1}</td>\r\n        <td><input type={\"text\"} value={goal.label} onChange={(evt)=>setGoal(Object.assign({},goal,{\"label\":evt.currentTarget.value,isDirty:true}))} /></td>\r\n        <td><input type={\"checkbox\"} checked={goal.active} onChange={(evt)=>setGoal(Object.assign({},goal,{\"active\":evt.currentTarget.checked,isDirty:true}))} /> </td>\r\n        <td>{saveButton} </td>\r\n    </tr>\r\n}\r\n\r\nexport default EditGoalRow;","import {useState} from \"react\";\r\nimport { saveChecklistTarget} from \"../../containers/cbChecklist/checkListMethods\";\r\nimport CreateEditChildButton from \"./CreateEditChildButton\";\r\nimport store from \"../../store\";\r\n\r\n\r\n\r\nconst EditTargetRow = ({item,idx,indent=0}) => {\r\n    item.displayorder = item.hasOwnProperty(\"displayorder\") && isNaN(item.displayorder) ? item.displayorder : idx+1;\r\n    let [checkItem,setCheckItem] = useState(item);\r\n    let bgcolor = checkItem.hasOwnProperty(\"isDirty\") && checkItem.isDirty ? \"yellow\" : \"none\";\r\n    let saveButton = checkItem?.isDirty ? <button className={\"btn btn-sm btn-secondary\"} onClick={()=>{setCheckItem(Object.assign({},checkItem,{\"isDirty\":false})); saveChecklistTarget(checkItem)}}>Save</button> : null;\r\n    let allTargets = store.getState().siteModelChecklist?.currentChecklistTargets ? store.getState().siteModelChecklist?.currentChecklistTargets : [];\r\n    let childs = allTargets.filter((target)=>{\r\n        return target.parentid===item.id;\r\n    });\r\n    let indentTypes = [\r\n      \"left\",\r\n      \"center\",\r\n      \"right\"\r\n    ];\r\n    return (\r\n        <>\r\n        <tr style={{backgroundColor:bgcolor}}>\r\n            <td style={{textAlign:indentTypes[indent]}}>{idx+1}</td>\r\n            <td>\r\n                <input type={\"text\"} value={checkItem.testpackage}\r\n                       onChange={(evt)=>setCheckItem(Object.assign({},checkItem,{\"testpackage\":evt.currentTarget.value,isDirty:true}))}\r\n                       style={{paddingLeft:(indent*10) + \"%\", width:\"100%\"}} />\r\n            </td>\r\n            <td>{saveButton}</td>\r\n            <td><CreateEditChildButton checklistuuid={item.checklistuuid} parentid={item.id} displayOrder={childs.length+1}  /></td>\r\n        </tr>\r\n            {childs.map((child,idx)=>{\r\n                return <EditTargetRow item={child} idx={idx} key={child.parentid + child.diplayOrder} indent={indent+1} />\r\n            })}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditTargetRow;","import {connect} from \"react-redux\";\r\nimport store from \"../../store\";\r\nimport EditGoalRow from \"./EditGoalRow\";\r\nimport {saveChecklistTarget} from \"../../containers/cbChecklist/checkListMethods\";\r\n\r\nconst Goals = () => {\r\n    let allGoals = store.getState().siteModelChecklist.currentChecklistGoals ? store.getState().siteModelChecklist.currentChecklistGoals : [];\r\n    let currentChecklist = store.getState().siteModelChecklist?.currentChecklist;\r\n    allGoals.push({checklistuuid:currentChecklist?.id,active:1});\r\n\r\n\r\n\r\n    return <div>\r\n        <h4>Goals</h4>\r\n        <table className={\"table table-bordered\"}>\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>Goal</th>\r\n                    <th>Active</th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {allGoals.map((item,idx)=>{\r\n                return <EditGoalRow item={item} idx={idx} />\r\n            })}\r\n            </tbody>\r\n        </table>\r\n\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        siteModelChecklist:state.siteModelChecklist,\r\n        dataStore:state.dataStore,\r\n        tabStore:state.tabStore\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(Goals);","import {makeCheckListInactive, updateCheckList} from \"../../containers/cbChecklist/checkListMethods\";\r\n\r\nconst MakeCheckListInactive = ({id}) => {\r\n    return <button onClick={()=>updateCheckList({id:id,active:0})} className={\"btn btn-danger\"}>Inactive</button>\r\n}\r\n\r\nexport default MakeCheckListInactive;","import {connect} from \"react-redux\";\r\nimport TabBlock from \"../supporting/TabBlock\";\r\n\r\nimport {renderPanels} from \"../../containers/foundation/foundationFunctions\";\r\nimport NewChecklistButton from \"./NewChecklistButton\";\r\nimport store from \"../../store\";\r\n\r\n\r\n\r\nconst Manage = () => {\r\n    let panelDetails = store.getState().tabStore?.manageTabs;\r\n    let panelData = panelDetails?.length ? renderPanels(panelDetails) : null;\r\n\r\n\r\n    return <div>\r\n        <div className={\"row\"}>\r\n            <div className={\"col-6\"}><h3>Manage</h3></div>\r\n            <div className={\"col-6\"} style={{textAlign:\"right\"}}><NewChecklistButton /></div>\r\n        </div>\r\n\r\n        <TabBlock tabGroup=\"manageTabs\"/>\r\n        {renderPanels(panelDetails)}\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        siteModelChecklist:state.siteModelChecklist,\r\n        dataStore:state.dataStore,\r\n        tabStore:state.tabStore\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(Manage);","import store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\n\r\nconst addChecklist = () => {\r\n  let allChecklists = store.getState().siteModelChecklist?.allChecklists ? store.getState().siteModelChecklist.allChecklists : [];\r\n  allChecklists.push(({active:1,name:\"\",description:\"\"}));\r\n        store.dispatch(updateSiteModelChecklist({allChecklists:allChecklists}));\r\n};\r\n\r\nconst NewChecklistButton = () => {\r\n    return <button onClick={()=>addChecklist()}>New Checklist</button>\r\n}\r\n\r\nexport default NewChecklistButton;","import store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\nimport { toggleTab } from \"../../actions/uiActions\";\r\n\r\nconst OpenChecklist = ({item}) => {\r\n    return <button onClick={()=>{store.dispatch(updateSiteModelChecklist({currentChecklist:Object.assign({},item)}));store.dispatch(toggleTab(\"checkTabs\",\"execute\"));}} className={\"btn btn-info\"}>Open</button>\r\n}\r\n\r\nexport default OpenChecklist;","const StatusDrop = ({val,action}) => {\r\n    return <select></select>\r\n}\r\n\r\nexport default StatusDrop;","import {connect} from \"react-redux\";\r\nimport store from \"../../store\";\r\nimport EditTargetRow from \"./EditTargetRow\";\r\n\r\nconst Targets = () => {\r\n    let targets = store.getState().siteModelChecklist?.currentChecklistTargets ? store.getState().siteModelChecklist?.currentChecklistTargets : [];\r\n    let currentChecklist = store.getState().siteModelChecklist?.currentChecklist;\r\n    targets.push({checklistuuid:currentChecklist?.id,parentid:0,active:1});\r\n    return currentChecklist?.id ? <div>\r\n        <table className={\"table table-bordered\"}>\r\n            <thead>\r\n                <th></th>\r\n                <th>Name</th>\r\n                <th></th>\r\n            </thead>\r\n            <tbody>\r\n            {targets.filter((item)=>{\r\n               return item.parentid===0\r\n            }).map((item,idx)=>{\r\n                return <EditTargetRow item={item} idx={idx} key={item.checklistuuid + item.id} />\r\n            }) }\r\n\r\n            </tbody>\r\n        </table>\r\n    </div> : <div> Please Choose a checklist to view.</div>\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        siteModelChecklist:state.siteModelChecklist,\r\n        dataStore:state.dataStore,\r\n        tabStore:state.tabStore\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(Targets);","import {connect} from \"react-redux\";\r\nimport ChecklistMonitor from \"./ChecklistMonitor\";\r\nimport TabBlock from \"../supporting/TabBlock\";\r\n\r\nimport {renderPanels} from \"../../containers/foundation/foundationFunctions\";\r\n\r\nimport store from \"../../store\";\r\n\r\n\r\n\r\nconst Welcome = () => {\r\n    let panelDetails = store.getState().tabStore?.checkTabs;\r\n    let panelData = panelDetails?.length ? renderPanels(panelDetails) : null;\r\n\r\n    return <div>\r\n        <ChecklistMonitor />\r\n        <TabBlock tabGroup=\"checkTabs\"/>\r\n        <div>\r\n            {panelData}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        siteModelChecklist:state.siteModelChecklist,\r\n        dataStore:state.dataStore,\r\n        tabStore:state.tabStore\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(Welcome);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {toggleTab} from \"src/actions/uiActions\";\r\nimport store from 'src/store';\r\n\r\nconst Tab = (props) => {\r\n    let stateData = store.getState();\r\n    let tabGroupData=(stateData?.tabGroups.hasOwnProperty(props.groupName) ? stateData.tabGroups[props.groupName] : {});\r\n    let groupClass = props.isActiveTab ? tabGroupData.groupTabActiveClassName  : tabGroupData.groupTabClassName\r\n    let propsClassName = props.tabClass ? props.tabClass : \"\";\r\n    let activeClass = props.isActiveTab ? \"active\" : \"\";\r\n\r\n    return (\r\n            <li className={\"nav-item kimTab \" + groupClass + \" \" + propsClassName} style={Object.assign({},tabGroupData.groupTabStyle,props.tabStyle)}\r\n                 onClick={()=>{store.dispatch(toggleTab(props.groupName,props.tabKey))}}>\r\n                    <a className={\"nav-link kimTabLabel \" + activeClass}>{props.label}</a>\r\n            </li>\r\n        )\r\n};\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        tabGroups:state.tabGroups\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(Tab);\r\n","import React,{useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Tab from './Tab'\r\nimport store from 'src/store';\r\n\r\nconst renderTabs = (tabGroup) => {\r\n    let stateData =store.getState();\r\n    return (\r\n        stateData.tabStore.hasOwnProperty(tabGroup) ? stateData.tabStore[tabGroup].map((item)=>{\r\n            return <Tab label={item.label}\r\n                        groupName={item.groupName}\r\n                        key={item.key}\r\n                        tabVisible={item.tabVisible}\r\n                        tabClass={item.tabClass}\r\n                        tabStyle={item.tabStyle}\r\n                        tabKey={item.key}\r\n                        isActiveTab = {item.isActiveTab}\r\n            />\r\n        }) : null\r\n    )\r\n};\r\n\r\nconst style={};\r\n//\r\nconst TabBlock = (props) => {\r\n    useEffect(()=>{\r\n        let hldrs = document.getElementsByClassName(\"tabContentHldr\");\r\n        for(var i=0;i<hldrs.length;i++){\r\n            hldrs.item(i).style.borderTopLeftRadius = 0;\r\n            hldrs.item(i).style.borderTopRightRadius = 0;\r\n        }\r\n    })\r\n    return (\r\n        <nav className=\"nav nav-tabs tabBlock\" style={Object.assign({},style,{minWidth:props.minWidth ? props.minWidth : 125})}>\r\n            {renderTabs(props.tabGroup)}\r\n        </nav>);\r\n};\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        tabStore:state.tabStore\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(TabBlock);\r\n"],"names":["addToControlBlock","status","type","payload","removeFromControlBlock","addTabGroup","tabGroupData","removeTabGroup","tabGroupName","addTabToGroup","tabData","removeTabFromGroup","groupName","keyName","toggleTab","key","addTabPanelGroup","addControlSet","controls","checkDetails","content","_jsx","Choose","Manage","ExecuteChecklist","connect","state","siteModelChecklist","_store$getState$siteM","_store$getState$siteM2","useEffect","store","dispatch","createTabGroupObject","createTabModel","blockName","data","obtainChecklists","checklistId","getState","currentChecklist","id","obtainTargets","obtainGoals","obtainResults","style","display","children","allCheckLists","allChecklists","_jsxs","className","textAlign","map","item","idx","ChooseRow","length","updateChecklistItem","property","value","checklist","updateSiteModelChecklist","_ref","_item$id","_store$getState$siteM3","_item$id2","_useState","useState","_useState2","_slicedToArray","isEditMode","setIsEditMode","checklistid","StatusDrop","val","statusName","action","nameInput","name","onChange","evt","target","descInput","description","saveButton","onClick","updateCheckList","Object","assign","dispOrder","DisplayOrderChooser","displayorder","newVal","backgroundColor","parseInt","statusname","OpenChecklist","MakeCheckListInactive","colSpan","checklistuuid","parentid","displayOrder","allTargets","currentChecklistTargets","push","isDirty","addChild","updateChecklist","currentTarget","checked","active","isNaN","goal","setGoal","bgcolor","hasOwnProperty","saveChecklistGoal","label","EditTargetRow","_ref$indent","indent","checkItem","setCheckItem","saveChecklistTarget","childs","filter","_Fragment","testpackage","paddingLeft","width","CreateEditChildButton","child","diplayOrder","dataStore","tabStore","allGoals","currentChecklistGoals","EditGoalRow","_store$getState$tabSt","panelDetails","manageTabs","renderPanels","NewChecklistButton","TabBlock","tabGroup","addChecklist","targets","checkTabs","panelData","ChecklistMonitor","tabGroups","props","stateData","groupClass","isActiveTab","groupTabActiveClassName","groupTabClassName","propsClassName","tabClass","activeClass","groupTabStyle","tabStyle","tabKey","renderTabs","Tab","tabVisible","hldrs","document","getElementsByClassName","i","borderTopLeftRadius","borderTopRightRadius","minWidth"],"sourceRoot":""}