{"version":3,"file":"static/js/3050.06168f83.chunk.js","mappings":"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","sources":["actions/cbChecklist_Actions.js","components/cbChecklist/Choose.js","components/cbChecklist/ChooseRow.js","components/cbChecklist/MakeChecklistInactive.js","components/cbChecklist/NewChecklistButton.js","components/cbChecklist/OpenChecklist.js","containers/cbChecklist/checkListMethods.js","services/cbChecklist/ApiServices.js"],"sourcesContent":["export const updateSiteModelChecklist = (status) =>{\r\n    return {\r\n        type:\"UPDATE_SITE_MODEL_CHECKLIST\",\r\n        payload:status\r\n    }\r\n};\r\n","import {connect} from \"react-redux\";\r\nimport store from \"../../store\";\r\nimport ChooseRow from \"./ChooseRow\";\r\nimport NewChecklistButton from \"./NewChecklistButton\";\r\n\r\nconst Choose = () => {\r\n    let allCheckLists = store.getState().siteModelChecklist?.allChecklists ? store.getState().siteModelChecklist.allChecklists : [];\r\n    return <div>\r\n        <div className={\"row\"}>\r\n            <div className={\"col-6\"}><h3>Choose</h3></div>\r\n            <div className={\"col-6\"} style={{textAlign:\"right\"}}><NewChecklistButton /></div>\r\n        </div>\r\n        <table className={\"table table-striped table-bordered\"}>\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>Name</th>\r\n                    <th></th>\r\n                    <th> </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {allCheckLists.map((item,idx)=>{\r\n                return <ChooseRow item={item} idx={idx} />\r\n            })}\r\n            </tbody>\r\n        </table>\r\n\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        siteModelChecklist:state.siteModelChecklist,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(Choose);","import OpenChecklist from \"./OpenChecklist\";\r\nimport MakeCheckListInactive from \"./MakeChecklistInactive\";\r\n\r\nconst ChooseRow = ({item,idx}) => {\r\n    return <tr>\r\n        <td>{idx+1}</td>\r\n        <td>{item.name}</td>\r\n        <td>{item.description}</td>\r\n        <td><OpenChecklist item={item} /></td>\r\n        <td><MakeCheckListInactive id={item.id}/> </td>\r\n    </tr>\r\n}\r\n\r\nexport default ChooseRow;","import {makeCheckListInactive, updateCheckList} from \"../../containers/cbChecklist/checkListMethods\";\r\n\r\nconst MakeCheckListInactive = ({id}) => {\r\n    return <button onClick={()=>updateCheckList({id:id,active:0})} className={\"btn btn-danger\"}>Inactive</button>\r\n}\r\n\r\nexport default MakeCheckListInactive;","import store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\n\r\nconst addChecklist = () => {\r\n  let allChecklists = store.getState().siteModelChecklist?.allChecklists ? store.getState().siteModelChecklist.allChecklists : [];\r\n  allChecklists.push(({active:1,name:\"\",description:\"\"}));\r\n        store.dispatch(updateSiteModelChecklist({allChecklists:allChecklists}));\r\n};\r\n\r\nconst NewChecklistButton = () => {\r\n    return <button onClick={()=>addChecklist()}>New Checklist</button>\r\n}\r\n\r\nexport default NewChecklistButton;","import store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\n\r\nconst OpenChecklist = ({item}) => {\r\n    return <button onClick={()=>store.dispatch(updateSiteModelChecklist({currentChecklist:Object.assign({},item)}))} className={\"btn btn-info\"}>Open</button>\r\n}\r\n\r\nexport default OpenChecklist;","import {\r\n    doObtainChecklistDetails,\r\n    doObtainChecklists,\r\n    doObtainGoals,\r\n    doObtainResults,\r\n    doObtainTargets, doSaveChecklistGoal, doSaveChecklistItem, doSaveChecklistTarget, doUpdateChecklist, doUpdateResult\r\n} from \"../../services/cbChecklist/ApiServices\";\r\nimport store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\nimport {lowerCaseKeys} from \"../../utilities/utilityFunctions\";\r\nlet findNum=0;\r\n\r\nexport const checkWindow = () => {\r\n    let exists = false;\r\n    let checker = setInterval(()=>{\r\n        if(window.SITEMODEL?.exists() || findNum===3){\r\n            store.dispatch(updateSiteModelChecklist({windowSetup:true}));\r\n            clearInterval(checker);\r\n        }\r\n        findNum++;\r\n    },3000);\r\n}\r\n\r\nexport const updateCheckList = (item) => {\r\n    doUpdateChecklist(item, processObtainChecklists, failUpdateChecklist);\r\n}\r\n\r\nconst processUpdateChecklist = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nconst failUpdateChecklist = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nexport const saveChecklistTarget = (item) => {\r\n    doSaveChecklistTarget(item, processObtainTargets, failSaveChecklistTarget);\r\n}\r\n\r\nconst processSaveChecklistTarget = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nconst failSaveChecklistTarget = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nexport const makeCheckListInactive = (id) => {\r\n    console.dir(\"Making inactive\");\r\n}\r\n\r\nexport const obtainChecklists = () =>{\r\n    doObtainChecklists(processObtainChecklists, failObtainChecklists)\r\n}\r\n\r\nconst processObtainChecklists = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({allChecklists:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainChecklists = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainChecklistDetails = ( id ) =>{\r\n    doObtainChecklistDetails(id, processObtainChecklistDetails, failObtainChecklistDetails)\r\n}\r\n\r\nconst processObtainChecklistDetails = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklist:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainChecklistDetails = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainTargets = (id) =>{\r\n    doObtainTargets(id, processObtainTargets, failObtainTargets)\r\n}\r\n\r\nconst processObtainTargets = (evt) => {\r\n    console.dir(\"Processing target return\")\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistTargets:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainTargets = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainGoals = (id) =>{\r\n    doObtainGoals(id, processObtainGoals, failObtainGoals)\r\n}\r\n\r\nconst processObtainGoals = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistGoals:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainGoals = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainResults = (id) =>{\r\n    doObtainResults(id, processObtainResults, failObtainResults)\r\n}\r\n\r\nconst processObtainResults = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistResults:createResultDictionary(lowerCaseKeys(evt.data.data))}))\r\n}\r\n\r\nconst createResultDictionary = (data) => {\r\n    let returnMe = {};\r\n    data.forEach((item)=>{\r\n        returnMe[item.testpackage] = returnMe.hasOwnProperty(item.testpackage) ? returnMe[item.testpackage] : {};\r\n        returnMe[item.testpackage][item.goaluuid] = item.result;\r\n    })\r\n\r\n    return returnMe;\r\n}\r\n\r\nconst failObtainResults = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const updateResult = (checklistuuid, target,goal,result) =>{\r\n    doUpdateResult(checklistuuid, target,goal,result, (evt)=>processUpdateResult(checklistuuid,evt), failUpdateResult)\r\n}\r\n\r\nconst processUpdateResult = (checklistuuid,evt) => {\r\n    obtainResults(checklistuuid)\r\n}\r\n\r\nconst failUpdateResult = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\n\r\nexport const saveChecklistGoal = (item) =>{\r\n    doSaveChecklistGoal(item, processObtainGoals, failSaveChecklistGoal)\r\n}\r\n\r\n\r\nconst failSaveChecklistGoal = (evt) => {\r\n    console.dir(evt);\r\n}","import axios from \"axios\";\r\nimport {apiURL} from \"../../utilities/utilityFunctions\";\r\n\r\nexport const doObtainChecklists = ( callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/\").then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainChecklistDetails = ( id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainTargets = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/targets/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainGoals = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/goals/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainResults = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/results/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doUpdateResult = (checklistuuid, target,goal,result, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/results/\" + checklistuuid,{goal:goal,target:target,result:result}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doSaveChecklistTarget = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/targets\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doUpdateChecklist = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doSaveChecklistGoal = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/goals\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\n"],"names":["updateSiteModelChecklist","status","type","payload","connect","state","siteModelChecklist","_store$getState$siteM","allCheckLists","store","getState","allChecklists","_jsxs","children","className","_jsx","style","textAlign","NewChecklistButton","map","item","idx","ChooseRow","_ref","name","description","OpenChecklist","MakeCheckListInactive","id","onClick","updateCheckList","active","push","dispatch","addChecklist","currentChecklist","Object","assign","findNum","checkWindow","checker","setInterval","_window$SITEMODEL","window","SITEMODEL","exists","windowSetup","clearInterval","doUpdateChecklist","processObtainChecklists","failUpdateChecklist","evt","console","dir","saveChecklistTarget","doSaveChecklistTarget","processObtainTargets","failSaveChecklistTarget","makeCheckListInactive","obtainChecklists","doObtainChecklists","failObtainChecklists","lowerCaseKeys","data","obtainChecklistDetails","doObtainChecklistDetails","processObtainChecklistDetails","failObtainChecklistDetails","obtainTargets","doObtainTargets","failObtainTargets","currentChecklistTargets","obtainGoals","doObtainGoals","processObtainGoals","failObtainGoals","currentChecklistGoals","obtainResults","doObtainResults","processObtainResults","failObtainResults","currentChecklistResults","createResultDictionary","returnMe","forEach","testpackage","hasOwnProperty","goaluuid","result","updateResult","checklistuuid","target","goal","doUpdateResult","processUpdateResult","failUpdateResult","saveChecklistGoal","doSaveChecklistGoal","failSaveChecklistGoal","callBack","Fail","axios","apiURL","then","catch"],"sourceRoot":""}