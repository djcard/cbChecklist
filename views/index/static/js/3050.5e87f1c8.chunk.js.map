{"version":3,"file":"static/js/3050.5e87f1c8.chunk.js","mappings":"0NAAO,IAAMA,EAA2B,SAACC,GACrC,MAAO,CACHC,KAAK,8BACLC,QAAQF,EAEhB,C,kXCHO,IAAMG,EAAoB,SAACH,GAC9B,MAAO,CACHC,KAAK,uBACLC,QAAQF,EAEhB,EAEaI,EAAyB,SAACJ,GACnC,MAAO,CACHC,KAAK,4BACLC,QAAQF,EAEhB,EAGaK,EAAc,SAACC,GACxB,MAAO,CACHL,KAAK,gBACLC,QAAQI,EAEhB,EAEaC,EAAiB,SAACC,GAC3B,MAAO,CACHP,KAAK,mBACLC,QAAQM,EAEhB,EAEaC,EAAgB,SAACC,GAC1B,MAAO,CACHT,KAAK,mBACLC,QAAQQ,EAEhB,EAEaC,EAAqB,SAACC,EAAUC,GACzC,MAAO,CACHZ,KAAK,wBACLC,QAAS,CAACU,UAAUA,EAAUC,QAAQA,GAE9C,EAEaC,EAAY,SAACF,EAAUG,GAChC,MAAO,CACHd,KAAK,aACLC,QAAQ,CAACU,UAAUA,EAAUG,IAAIA,GAEzC,EAEaC,EAAmB,SAACJ,GAC7B,MAAO,CACHX,KAAK,sBACLC,QAAQU,EAEhB,EAEaK,EAAgB,SAACC,GAC1B,MAAO,CACHjB,KAAK,eACLC,QAAQgB,EAEhB,C,wECvBA,WAAeC,EAAAA,EAAAA,KANS,SAACC,GACrB,MAAO,CACHC,mBAAmBD,EAAMC,mBAEjC,GAEuC,CAAC,EAAxC,EApCe,WAAO,IAADC,EACbC,EAAmD,QAAnCD,EAAAE,EAAAA,QAAMC,WAAWJ,0BAAkB,IAAAC,GAAnCA,EAAqCI,cAAgBF,EAAAA,QAAMC,WAAWJ,mBAAmBK,cAAgB,GAC7H,OAAOC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACHD,EAAAA,EAAAA,MAAA,OAAKE,UAAW,MAAMD,SAAA,EAClBE,EAAAA,EAAAA,KAAA,OAAKD,UAAW,QAAQD,UAACE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,cAC7BE,EAAAA,EAAAA,KAAA,OAAKD,UAAW,QAASE,MAAO,CAACC,UAAU,eAE/CL,EAAAA,EAAAA,MAAA,SAAOE,UAAW,qCAAqCD,SAAA,EACnDE,EAAAA,EAAAA,KAAA,SAAAF,UACID,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACIE,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,MAAAF,SAAI,UACJE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,iBACJE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,aACJE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,YACJE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,OACJE,EAAAA,EAAAA,KAAA,eAGRH,EAAAA,EAAAA,MAAA,SAAAC,SAAA,CACCL,EAAcU,KAAI,SAACC,EAAKC,GACrB,OAAOL,EAAAA,EAAAA,KAACM,EAAAA,QAAS,CAACF,KAAMA,EAAMC,IAAKA,GAAUD,EAAKG,GACtD,KACAP,EAAAA,EAAAA,KAACM,EAAAA,QAAS,CAACF,KAAM,CAAC,EAAGC,IAAKZ,EAAce,OAAO,YAK3D,G,6ICvBMC,EAAsB,SAACC,EAAUC,GAAW,IAADnB,EACzCoB,EAA+C,QAAnCpB,EAAAE,EAAAA,QAAMC,WAAWJ,0BAAkB,IAAAC,GAAnCA,EAAqCqB,iBAAmBnB,EAAAA,QAAMC,WAAWJ,mBAAmBsB,iBAAmB,CAAC,EAChID,EAAUF,GAAUC,EACN,iBAAXD,IACCE,EAAuB,YAAE,GAE7BlB,EAAAA,QAAMoB,UAAS7C,EAAAA,EAAAA,0BAAyB,CAAC4C,iBAAiBD,IAC9D,EA8DA,WAAevB,EAAAA,EAAAA,KANS,SAACC,GACrB,MAAO,CACHC,mBAAmBD,EAAMC,mBAEjC,GAEuC,CAAC,EAAxC,EA3DkB,SAAHwB,GAAoB,IAADC,EAAAC,EAAAC,EAAAC,EAAdf,EAAIW,EAAJX,KAAKC,EAAGU,EAAHV,IAErBe,GAAiCC,EAAAA,EAAAA,YAAiB,QAARL,EAACZ,EAAKG,UAAE,IAAAS,GAAPA,EAASR,SAAOc,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtDI,EAAUF,EAAA,GAACG,EAAaH,EAAA,GACzB7B,EAAmD,QAAnCwB,EAAAvB,EAAAA,QAAMC,WAAWJ,0BAAkB,IAAA0B,GAAnCA,EAAqCrB,cAAgBF,EAAAA,QAAMC,WAAWJ,mBAAmBK,cAAgB,GACzHgB,EAA+C,QAAnCM,EAAAxB,EAAAA,QAAMC,WAAWJ,0BAAkB,IAAA2B,GAAnCA,EAAqCL,iBAAmBnB,EAAAA,QAAMC,WAAWJ,mBAAmBsB,iBAAmB,CAAC,EAE5Ha,EAAcd,EAAUL,IAE5BoB,EAAAA,EAAAA,YAAU,WACHD,IAActB,EAAKG,IAClBkB,EAAc,EAEtB,GAAE,CAACC,EAAYtB,EAAKG,KAEpB,IAIIrC,GAAS8B,EAAAA,EAAAA,KAAC4B,EAAAA,QAAU,CAACC,IAAKjB,EAAUkB,WAAYC,OAAQ,WAAK,IAC7DC,GAAYhC,EAAAA,EAAAA,KAAA,SAAO7B,KAAK,OAAO4B,UAAU,eAAeY,MAAOC,EAAUqB,KAAMC,SAAU,SAACC,GAAG,OAAG1B,EAAoB,OAAO0B,EAAIC,OAAOzB,MAAM,IAC5I0B,GAAYrC,EAAAA,EAAAA,KAAA,SAAO7B,KAAK,OAAO4B,UAAU,eAAeY,MAAOC,EAAU0B,YAAaJ,SAAU,SAACC,GAAG,OAAG1B,EAAoB,cAAc0B,EAAIC,OAAOzB,MAAM,IAE1J4B,EAAaf,GACXxB,EAAAA,EAAAA,KAAA,UAAQD,UAAU,kBAAkByC,QAAS,kBAR/Cf,EAAc,QACdgB,EAAAA,EAAAA,iBAAgBC,OAAOC,OAAO,CAAC,EAAE/B,GAOkC,EAACd,SAAC,UACnEE,EAAAA,EAAAA,KAAA,UAAQD,UAAU,eAAeyC,QAAS,WAAKf,EAAc,GAAG/B,EAAAA,QAAMoB,UAAS7C,EAAAA,EAAAA,0BAAyB,CAAC4C,iBAAiBT,IAAO,EAAEN,SAAC,SAEtI8C,EAAYpB,GACVxB,EAAAA,EAAAA,KAAC6C,EAAAA,QAAmB,CAACrC,OAAQf,EAAce,OAAQqB,IAAKzB,EAAK0C,aAAcf,OAAQ,SAACgB,GAAUtC,EAAoB,eAAesC,EAAO,IACxI3C,EAAK0C,aAAc,EAWzB,OAAe,QAAR3B,EAACf,EAAKG,UAAE,IAAAY,GAAPA,EAASX,QAAWgB,GAEtB3B,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACFE,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAC+C,gBAZC,CACb,GACA,QACA,OACA,cACA,aACA,SAM6C,OAAJ5C,QAAI,IAAJA,GAAAA,EAAMlC,OAASkC,EAAKlC,OAAS,IAAI4B,SAAEmD,SAAS5C,GAAK,KAC1FL,EAAAA,EAAAA,KAAA,MAAAF,SAAK0B,EAAaQ,EAAY5B,EAAK6B,QACnCjC,EAAAA,EAAAA,KAAA,MAAAF,SAAK0B,EAAaa,EAAYjC,EAAKkC,eACnCtC,EAAAA,EAAAA,KAAA,MAAAF,SAAK8C,KACL5C,EAAAA,EAAAA,KAAA,MAAAF,SAAK0B,EAAatD,EAASkC,EAAK8C,cAChClD,EAAAA,EAAAA,KAAA,MAAAF,UAAIE,EAAAA,EAAAA,KAACmD,EAAAA,QAAa,CAAC/C,KAAMA,OACzBP,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EAAIE,EAAAA,EAAAA,KAACoD,EAAAA,QAAqB,CAAC7C,GAAIH,EAAKG,KAAK,QACzCV,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,IAAEyC,SATJvC,EAAAA,EAAAA,KAAA,MAAAF,UAAIE,EAAAA,EAAAA,KAAA,MAAIqD,QAAS,EAAEvD,UAACE,EAAAA,EAAAA,KAAA,UAAQwC,QAAS,WAAKf,EAAc,GAAG/B,EAAAA,QAAMoB,UAAS7C,EAAAA,EAAAA,0BAAyB,CAAC4C,iBAAiB,CAACN,GAAG,GAAGuC,aAAa,OAAQ,EAAEhD,SAAC,WAW9J,G,2CC7DA,UAV4B,SAAHiB,GAA6B,IAAxBP,EAAMO,EAANP,OAAOqB,EAAGd,EAAHc,IAAIE,EAAMhB,EAANgB,OACjCuB,EAAUC,MAAMC,MAAM,KAAMD,MAAM/C,IAASL,KAAI,SAAUsD,EAAGC,GAAK,OAAOA,CAAG,IAChF,OAAQ7D,EAAAA,EAAAA,MAAA,UAAQc,MAAOkB,EAAKK,SAAU,SAACC,GAAOJ,EAAOI,EAAIC,OAAOzB,MAAM,EAAEb,SAAA,EACnEE,EAAAA,EAAAA,KAAA,UAAQW,MAAM,KACb2C,EAAQnD,KAAI,SAACC,GACV,OAAOJ,EAAAA,EAAAA,KAAA,UAAQW,MAAOP,EAAKN,SAAEM,EAAK,GACtC,MAER,C,qDCFA,UAJ8B,SAAHW,GAAc,IAATR,EAAEQ,EAAFR,GAC5B,OAAOP,EAAAA,EAAAA,KAAA,UAAQwC,QAAS,kBAAIC,EAAAA,EAAAA,iBAAgB,CAAClC,GAAGA,EAAGoD,OAAO,GAAG,EAAE5D,UAAW,iBAAiBD,SAAC,YAChG,C,yECIA,UAJsB,SAAHiB,GAAgB,IAAXX,EAAIW,EAAJX,KACpB,OAAOJ,EAAAA,EAAAA,KAAA,UAAQwC,QAAS,WAAK9C,EAAAA,QAAMoB,UAAS7C,EAAAA,EAAAA,0BAAyB,CAAC4C,iBAAiB6B,OAAOC,OAAO,CAAC,EAAEvC,MAASV,EAAAA,QAAMoB,UAAS9B,EAAAA,EAAAA,WAAU,YAAY,WAAY,EAAGe,UAAW,eAAeD,SAAC,QACpM,C,2CCFA,UAJmB,SAAHiB,GAAQA,EAAHc,IAAUd,EAANgB,OACrB,OAAO/B,EAAAA,EAAAA,KAAA,YACX,C,+eCQI4D,EAAQ,EAECC,EAAc,WACvB,IAAIC,EAAUC,aAAY,WAAK,IAADC,GACP,QAAhBA,EAAAC,OAAOC,iBAAS,IAAAF,GAAhBA,EAAkBG,UAAsB,IAAVP,KAC7BlE,EAAAA,QAAMoB,UAAS7C,EAAAA,EAAAA,0BAAyB,CAACmG,aAAY,KACrDC,cAAcP,IAElBF,GACJ,GAAE,IACN,EAEanB,EAAkB,SAACrC,IAC5BkE,EAAAA,EAAAA,mBAAkBlE,EAAMmE,EAAyBC,EACrD,EAMMA,EAAsB,SAACrC,GACzBsC,QAAQC,IAAIvC,EAChB,EAEawC,EAAsB,SAACvE,GAChCqE,QAAQC,IAAItE,UACLA,EAAKwE,YACZC,EAAAA,EAAAA,uBAAsBzE,EAAM0E,EAAsBC,EACtD,EAMMA,EAA0B,SAAC5C,GAC7BsC,QAAQC,IAAIvC,EAChB,EAEa6C,EAAwB,SAACzE,GAClCkE,QAAQC,IAAI,kBAChB,EAEaO,EAAmB,YAC5BC,EAAAA,EAAAA,oBAAmBX,EAAyBY,EAChD,EAEMZ,EAA0B,SAACpC,GAC7BzC,EAAAA,QAAMoB,UAAS7C,EAAAA,EAAAA,0BAAyB,CAAC2B,eAAcwF,EAAAA,EAAAA,eAAcjD,EAAIkD,KAAKA,QAClF,EAEMF,EAAuB,SAAChD,GAC1BsC,QAAQC,IAAIvC,EAChB,EAEamD,EAAyB,SAAE/E,IACpCgF,EAAAA,EAAAA,0BAAyBhF,EAAIiF,EAA+BC,EAChE,EAEMD,EAAgC,SAACrD,GACnCzC,EAAAA,QAAMoB,UAAS7C,EAAAA,EAAAA,0BAAyB,CAAC4C,kBAAiBuE,EAAAA,EAAAA,eAAcjD,EAAIkD,KAAKA,QACrF,EAEMI,EAA6B,SAACtD,GAChCsC,QAAQC,IAAIvC,EAChB,EAEauD,EAAgB,SAACnF,IAC1BoF,EAAAA,EAAAA,iBAAgBpF,EAAIuE,EAAsBc,EAC9C,EAEMd,EAAuB,SAAC3C,GAC1BzC,EAAAA,QAAMoB,UAAS7C,EAAAA,EAAAA,0BAAyB,CAAC4H,yBAAwBT,EAAAA,EAAAA,eAAcjD,EAAIkD,KAAKA,QAC5F,EAEMO,EAAoB,SAACzD,GACvBsC,QAAQC,IAAIvC,EAChB,EAEa2D,EAAc,SAACvF,IACxBwF,EAAAA,EAAAA,eAAcxF,EAAIyF,EAAoBC,EAC1C,EAEMD,EAAqB,SAAC7D,GACxBzC,EAAAA,QAAMoB,UAAS7C,EAAAA,EAAAA,0BAAyB,CAACiI,uBAAsBd,EAAAA,EAAAA,eAAcjD,EAAIkD,KAAKA,QAC1F,EAEMY,EAAkB,SAAC9D,GACrBsC,QAAQC,IAAIvC,EAChB,EAEagE,EAAgB,SAAC5F,IAC1B6F,EAAAA,EAAAA,iBAAgB7F,EAAI8F,EAAsBC,EAC9C,EAEMD,EAAuB,SAAClE,GAC1BzC,EAAAA,QAAMoB,UAAS7C,EAAAA,EAAAA,0BAAyB,CAACsI,wBAAwBC,GAAuBpB,EAAAA,EAAAA,eAAcjD,EAAIkD,KAAKA,SACnH,EAEMmB,EAAyB,SAACnB,GAC5B,IAAIoB,EAAW,CAAC,EAMhB,OALApB,EAAKqB,SAAQ,SAACtG,GACVqG,EAASrG,EAAKuG,UAAYF,EAASG,eAAexG,EAAKuG,UAAYF,EAASrG,EAAKuG,UAAY,CAAC,EAC9FF,EAASrG,EAAKuG,UAAUvG,EAAKyG,QAAUzG,EAAK0G,MAChD,IAEOL,CACX,EAEMH,EAAoB,SAACnE,GACvBsC,QAAQC,IAAIvC,EAChB,EAEa4E,EAAe,SAACC,EAAe5E,EAAO6E,EAAKH,IACpDI,EAAAA,EAAAA,gBAAeF,EAAe5E,EAAO6E,EAAKH,GAAQ,SAAC3E,GAAG,OAAGgF,EAAoBH,EAAc7E,EAAI,GAAEiF,EACrG,EAEMD,EAAsB,SAACH,EAAc7E,GACvCgE,EAAca,EAClB,EAEMI,EAAmB,SAACjF,GACtBsC,QAAQC,IAAIvC,EAChB,EAGakF,EAAoB,SAACjH,IAC9BkH,EAAAA,EAAAA,qBAAoBlH,EAAM4F,EAAoBuB,EAClD,EAGMA,EAAwB,SAACpF,GAC3BsC,QAAQC,IAAIvC,EAChB,C,0aC3Ia+C,EAAqB,SAAEsC,EAASC,GAEzCC,IAAAA,KAAUC,EAAAA,EAAAA,UAAY,iBAAiBC,MAAK,SAACzF,GAAG,OAAGqF,EAASrF,EAAI,IAAE0F,OAAM,SAAC1F,GAAG,OAAGsF,EAAKtF,EAAI,GAC5F,EAEaoD,EAA2B,SAAEhF,EAAIiH,EAASC,GAEnDC,IAAAA,KAAUC,EAAAA,EAAAA,UAAY,gBAAkBpH,GAAIqH,MAAK,SAACzF,GAAG,OAAGqF,EAASrF,EAAI,IAAE0F,OAAM,SAAC1F,GAAG,OAAGsF,EAAKtF,EAAI,GACjG,EAEawD,EAAkB,SAACpF,EAAIiH,EAASC,GAEzCC,IAAAA,KAAUC,EAAAA,EAAAA,UAAY,wBAA0BpH,GAAIqH,MAAK,SAACzF,GAAG,OAAGqF,EAASrF,EAAI,IAAE0F,OAAM,SAAC1F,GAAG,OAAGsF,EAAKtF,EAAI,GACzG,EAEa4D,EAAgB,SAACxF,EAAIiH,EAASC,GAEvCC,IAAAA,KAAUC,EAAAA,EAAAA,UAAY,sBAAwBpH,GAAIqH,MAAK,SAACzF,GAAG,OAAGqF,EAASrF,EAAI,IAAE0F,OAAM,SAAC1F,GAAG,OAAGsF,EAAKtF,EAAI,GACvG,EAEaiE,EAAkB,SAAC7F,EAAIiH,EAASC,GAEzCC,IAAAA,KAAUC,EAAAA,EAAAA,UAAY,wBAA0BpH,GAAIqH,MAAK,SAACzF,GAAG,OAAGqF,EAASrF,EAAI,IAAE0F,OAAM,SAAC1F,GAAG,OAAGsF,EAAKtF,EAAI,GACzG,EAEa+E,EAAiB,SAACF,EAAe5E,EAAO6E,EAAKH,EAAQU,EAASC,GAEvEC,IAAAA,MAAWC,EAAAA,EAAAA,UAAY,wBAA0BX,EAAc,CAACC,KAAKA,EAAK7E,OAAOA,EAAO0E,OAAOA,IAASc,MAAK,SAACzF,GAAG,OAAGqF,EAASrF,EAAI,IAAE0F,OAAM,SAAC1F,GAAG,OAAGsF,EAAKtF,EAAI,GAC7J,EAEa0C,EAAwB,SAACzE,EAAMoH,EAASC,GAEjDC,IAAAA,MAAWC,EAAAA,EAAAA,UAAY,uBAAuB,CAACvH,KAAAA,IAAOwH,MAAK,SAACzF,GAAG,OAAGqF,EAASrF,EAAI,IAAE0F,OAAM,SAAC1F,GAAG,OAAGsF,EAAKtF,EAAI,GAC3G,EAEamC,EAAoB,SAAClE,EAAMoH,EAASC,GAE7CC,IAAAA,MAAWC,EAAAA,EAAAA,UAAY,gBAAgB,CAACvH,KAAAA,IAAOwH,MAAK,SAACzF,GAAG,OAAGqF,EAASrF,EAAI,IAAE0F,OAAM,SAAC1F,GAAG,OAAGsF,EAAKtF,EAAI,GACpG,EAEamF,EAAsB,SAAClH,EAAMoH,EAASC,GAE/CC,IAAAA,MAAWC,EAAAA,EAAAA,UAAY,qBAAqB,CAACvH,KAAAA,IAAOwH,MAAK,SAACzF,GAAG,OAAGqF,EAASrF,EAAI,IAAE0F,OAAM,SAAC1F,GAAG,OAAGsF,EAAKtF,EAAI,GACzG,C","sources":["actions/cbChecklist_Actions.js","actions/uiActions.js","components/cbChecklist/Choose.js","components/cbChecklist/ChooseRow.js","components/cbChecklist/DisplayOrderChooser.js","components/cbChecklist/MakeChecklistInactive.js","components/cbChecklist/OpenChecklist.js","components/cbChecklist/StatusDrop.js","containers/cbChecklist/checkListMethods.js","services/cbChecklist/ApiServices.js"],"sourcesContent":["export const updateSiteModelChecklist = (status) =>{\r\n    return {\r\n        type:\"UPDATE_SITE_MODEL_CHECKLIST\",\r\n        payload:status\r\n    }\r\n};\r\n","\r\n//Control Blocks\r\nexport const addToControlBlock = (status) =>{\r\n    return {\r\n        type:\"ADD_TO_CONTROL_BLOCK\",\r\n        payload:status\r\n    }\r\n};\r\n\r\nexport const removeFromControlBlock = (status) =>{\r\n    return {\r\n        type:\"REMOVE_FROM_CONTROL_BLOCK\",\r\n        payload:status\r\n    }\r\n};\r\n\r\n//Tabs\r\nexport const addTabGroup = (tabGroupData)=>{\r\n    return {\r\n        type:\"ADD_TAB_GROUP\",\r\n        payload:tabGroupData\r\n    }\r\n};\r\n\r\nexport const removeTabGroup = (tabGroupName)=>{\r\n    return {\r\n        type:\"REMOVE_TAB_GROUP\",\r\n        payload:tabGroupName\r\n    }\r\n};\r\n\r\nexport const addTabToGroup = (tabData) => {\r\n    return {\r\n        type:\"ADD_TAB_TO_GROUP\",\r\n        payload:tabData\r\n    }\r\n};\r\n\r\nexport const removeTabFromGroup = (groupName,keyName) => {\r\n    return {\r\n        type:\"REMOVE_TAB_FROM_GROUP\",\r\n        payload: {groupName:groupName,keyName:keyName}\r\n    }\r\n};\r\n\r\nexport const toggleTab = (groupName,key) => {\r\n    return {\r\n        type:\"TOGGLE_TAB\",\r\n        payload:{groupName:groupName,key:key}\r\n    }\r\n};\r\n\r\nexport const addTabPanelGroup = (groupName) =>{\r\n    return {\r\n        type:\"ADD_TAB_PANEL_GROUP\",\r\n        payload:groupName\r\n    }\r\n}\r\n\r\nexport const addControlSet = (controls) => {\r\n    return {\r\n        type:\"ADD_CONTROLS\",\r\n        payload:controls\r\n    }\r\n};","import {connect} from \"react-redux\";\r\nimport store from \"../../store\";\r\nimport ChooseRow from \"./ChooseRow\";\r\n\r\n\r\nconst Choose = () => {\r\n    let allCheckLists = store.getState().siteModelChecklist?.allChecklists ? store.getState().siteModelChecklist.allChecklists : [];\r\n    return <div>\r\n        <div className={\"row\"}>\r\n            <div className={\"col-6\"}><h3>Choose</h3></div>\r\n            <div className={\"col-6\"} style={{textAlign:\"right\"}}></div>\r\n        </div>\r\n        <table className={\"table table-striped table-bordered\"}>\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>Name</th>\r\n                    <th>Description</th>\r\n                    <th>Display</th>\r\n                    <th>Status</th>\r\n                    <th> </th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {allCheckLists.map((item,idx)=>{\r\n                return <ChooseRow item={item} idx={idx} key={item.id} />\r\n            })}\r\n            <ChooseRow item={{}} idx={allCheckLists.length+1} />\r\n            </tbody>\r\n        </table>\r\n\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        siteModelChecklist:state.siteModelChecklist,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(Choose);","import OpenChecklist from \"./OpenChecklist\";\r\nimport MakeCheckListInactive from \"./MakeChecklistInactive\";\r\nimport { useEffect, useState } from \"react\";\r\nimport store from \"../../store\";\r\nimport { updateSiteModelChecklist } from \"../../actions/cbChecklist_Actions\";\r\nimport { updateCheckList } from \"../../containers/cbChecklist/checkListMethods\";\r\nimport { connect } from \"react-redux\";\r\nimport DisplayOrderChooser from \"./DisplayOrderChooser\";\r\nimport StatusDrop from \"./StatusDrop\";\r\n\r\nconst updateChecklistItem = (property, value) => {\r\n    let checklist = store.getState().siteModelChecklist?.currentChecklist ? store.getState().siteModelChecklist.currentChecklist : {};\r\n    checklist[property]=value;\r\n    if(property===\"displayorder\"){\r\n        checklist[\"updateOrder\"]=1;\r\n    }\r\n    store.dispatch(updateSiteModelChecklist({currentChecklist:checklist}));\r\n}\r\n\r\n\r\nconst ChooseRow = ({item,idx}) => {\r\n\r\n    let [isEditMode,setIsEditMode] = useState(!item.id?.length);\r\n    let allCheckLists = store.getState().siteModelChecklist?.allChecklists ? store.getState().siteModelChecklist.allChecklists : [];\r\n    let checklist = store.getState().siteModelChecklist?.currentChecklist ? store.getState().siteModelChecklist.currentChecklist : {};\r\n\r\n    let checklistid = checklist.id;\r\n\r\n    useEffect(()=>{\r\n        if(checklistid!==item.id){\r\n            setIsEditMode(0);\r\n        }\r\n    },[checklistid,item.id])\r\n\r\n    const saveChecklist = () =>{\r\n        setIsEditMode(0);\r\n        updateCheckList(Object.assign({},checklist));\r\n    }\r\n    let status = <StatusDrop val={checklist.statusName} action={()=>{}} />\r\n    let nameInput = <input type=\"text\" className=\"form-control\" value={checklist.name} onChange={(evt)=>updateChecklistItem(\"name\",evt.target.value)} />\r\n    let descInput = <input type=\"text\" className=\"form-control\" value={checklist.description} onChange={(evt)=>updateChecklistItem(\"description\",evt.target.value)} />\r\n\r\n    let saveButton = isEditMode\r\n        ? <button className=\"btn btn-primary\" onClick={()=>saveChecklist(0)}>Save</button>\r\n        : <button className=\"btn btn-info\" onClick={()=>{setIsEditMode(1);store.dispatch(updateSiteModelChecklist({currentChecklist:item}))}}>Edit</button>\r\n\r\n    let dispOrder = isEditMode\r\n        ? <DisplayOrderChooser length={allCheckLists.length} val={item.displayorder} action={(newVal)=>{updateChecklistItem(\"displayorder\",newVal)}} />\r\n        : item.displayorder +1;  \r\n    \r\n    let statusColors=[\r\n        \"\",\r\n        \"green\",\r\n        \"Aqua\",\r\n        \"GreenYellow\",\r\n        \"DarkOrange\",\r\n        \"black\"\r\n    ]\r\n\r\n    return !item.id?.length && !isEditMode\r\n        ? <tr><td colSpan={7}><button onClick={()=>{setIsEditMode(1);store.dispatch(updateSiteModelChecklist({currentChecklist:{id:\"\",displayorder:1000}}))}}>New</button></td></tr>\r\n        : <tr>\r\n        <td style={{backgroundColor:statusColors[item?.status ? item.status : 0]}}>{parseInt(idx)+1}</td>\r\n        <td>{isEditMode ? nameInput : item.name}</td>\r\n        <td>{isEditMode ? descInput : item.description}</td>\r\n        <td>{dispOrder}</td>\r\n        <td>{isEditMode ? status : item.statusname}</td>\r\n        <td><OpenChecklist item={item} /></td>\r\n        <td><MakeCheckListInactive id={item.id}/> </td>\r\n        <td> {saveButton}</td>\r\n    </tr>\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        siteModelChecklist:state.siteModelChecklist\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(ChooseRow);","const DisplayOrderChooser = ({length,val,action}) => {\r\n    let options = Array.apply(null, Array(length)).map(function (x, i) { return i; });\r\n   return  <select value={val} onChange={(evt)=>{action(evt.target.value)}}>\r\n        <option value=\"\"></option>\r\n        {options.map((item)=>{\r\n            return <option value={item}>{item+1}</option>\r\n        })}\r\n    </select>\r\n}\r\n\r\nexport default DisplayOrderChooser;","import {makeCheckListInactive, updateCheckList} from \"../../containers/cbChecklist/checkListMethods\";\r\n\r\nconst MakeCheckListInactive = ({id}) => {\r\n    return <button onClick={()=>updateCheckList({id:id,active:0})} className={\"btn btn-danger\"}>Inactive</button>\r\n}\r\n\r\nexport default MakeCheckListInactive;","import store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\nimport { toggleTab } from \"../../actions/uiActions\";\r\n\r\nconst OpenChecklist = ({item}) => {\r\n    return <button onClick={()=>{store.dispatch(updateSiteModelChecklist({currentChecklist:Object.assign({},item)}));store.dispatch(toggleTab(\"checkTabs\",\"execute\"));}} className={\"btn btn-info\"}>Open</button>\r\n}\r\n\r\nexport default OpenChecklist;","const StatusDrop = ({val,action}) => {\r\n    return <select></select>\r\n}\r\n\r\nexport default StatusDrop;","import {\r\n    doObtainChecklistDetails,\r\n    doObtainChecklists,\r\n    doObtainGoals,\r\n    doObtainResults,\r\n    doObtainTargets, doSaveChecklistGoal, doSaveChecklistTarget, doUpdateChecklist, doUpdateResult\r\n} from \"../../services/cbChecklist/ApiServices\";\r\nimport store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\nimport {lowerCaseKeys} from \"../../utilities/utilityFunctions\";\r\nlet findNum=0;\r\n\r\nexport const checkWindow = () => {\r\n    let checker = setInterval(()=>{\r\n        if(window.SITEMODEL?.exists() || findNum===3){\r\n            store.dispatch(updateSiteModelChecklist({windowSetup:true}));\r\n            clearInterval(checker);\r\n        }\r\n        findNum++;\r\n    },3000);\r\n}\r\n\r\nexport const updateCheckList = (item) => {\r\n    doUpdateChecklist(item, processObtainChecklists, failUpdateChecklist);\r\n}\r\n\r\n/*const processUpdateChecklist = (evt)=>{\r\n    console.dir(evt);\r\n}*/\r\n\r\nconst failUpdateChecklist = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nexport const saveChecklistTarget = (item) => {\r\n    console.dir(item);\r\n    delete item.numOptions;\r\n    doSaveChecklistTarget(item, processObtainTargets, failSaveChecklistTarget);\r\n}\r\n\r\n/*const processSaveChecklistTarget = (evt)=>{\r\n    console.dir(evt);\r\n}*/\r\n\r\nconst failSaveChecklistTarget = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nexport const makeCheckListInactive = (id) => {\r\n    console.dir(\"Making inactive\");\r\n}\r\n\r\nexport const obtainChecklists = () =>{\r\n    doObtainChecklists(processObtainChecklists, failObtainChecklists)\r\n}\r\n\r\nconst processObtainChecklists = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({allChecklists:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainChecklists = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainChecklistDetails = ( id ) =>{\r\n    doObtainChecklistDetails(id, processObtainChecklistDetails, failObtainChecklistDetails)\r\n}\r\n\r\nconst processObtainChecklistDetails = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklist:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainChecklistDetails = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainTargets = (id) =>{\r\n    doObtainTargets(id, processObtainTargets, failObtainTargets)\r\n}\r\n\r\nconst processObtainTargets = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistTargets:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainTargets = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainGoals = (id) =>{\r\n    doObtainGoals(id, processObtainGoals, failObtainGoals)\r\n}\r\n\r\nconst processObtainGoals = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistGoals:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainGoals = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainResults = (id) =>{\r\n    doObtainResults(id, processObtainResults, failObtainResults)\r\n}\r\n\r\nconst processObtainResults = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistResults:createResultDictionary(lowerCaseKeys(evt.data.data))}))\r\n}\r\n\r\nconst createResultDictionary = (data) => {\r\n    let returnMe = {};\r\n    data.forEach((item)=>{\r\n        returnMe[item.targetid] = returnMe.hasOwnProperty(item.targetid) ? returnMe[item.targetid] : {};\r\n        returnMe[item.targetid][item.goalid] = item.result;\r\n    })\r\n\r\n    return returnMe;\r\n}\r\n\r\nconst failObtainResults = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const updateResult = (checklistuuid, target,goal,result) =>{\r\n    doUpdateResult(checklistuuid, target,goal,result, (evt)=>processUpdateResult(checklistuuid,evt), failUpdateResult)\r\n}\r\n\r\nconst processUpdateResult = (checklistuuid,evt) => {\r\n    obtainResults(checklistuuid)\r\n}\r\n\r\nconst failUpdateResult = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\n\r\nexport const saveChecklistGoal = (item) =>{\r\n    doSaveChecklistGoal(item, processObtainGoals, failSaveChecklistGoal)\r\n}\r\n\r\n\r\nconst failSaveChecklistGoal = (evt) => {\r\n    console.dir(evt);\r\n}","import axios from \"axios\";\r\nimport {apiURL} from \"../../utilities/utilityFunctions\";\r\n\r\nexport const doObtainChecklists = ( callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/\").then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainChecklistDetails = ( id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainTargets = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/targets/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainGoals = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/goals/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainResults = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/results/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doUpdateResult = (checklistuuid, target,goal,result, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/results/\" + checklistuuid,{goal:goal,target:target,result:result}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doSaveChecklistTarget = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/targets\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doUpdateChecklist = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doSaveChecklistGoal = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/goals\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\n"],"names":["updateSiteModelChecklist","status","type","payload","addToControlBlock","removeFromControlBlock","addTabGroup","tabGroupData","removeTabGroup","tabGroupName","addTabToGroup","tabData","removeTabFromGroup","groupName","keyName","toggleTab","key","addTabPanelGroup","addControlSet","controls","connect","state","siteModelChecklist","_store$getState$siteM","allCheckLists","store","getState","allChecklists","_jsxs","children","className","_jsx","style","textAlign","map","item","idx","ChooseRow","id","length","updateChecklistItem","property","value","checklist","currentChecklist","dispatch","_ref","_item$id","_store$getState$siteM2","_store$getState$siteM3","_item$id2","_useState","useState","_useState2","_slicedToArray","isEditMode","setIsEditMode","checklistid","useEffect","StatusDrop","val","statusName","action","nameInput","name","onChange","evt","target","descInput","description","saveButton","onClick","updateCheckList","Object","assign","dispOrder","DisplayOrderChooser","displayorder","newVal","backgroundColor","parseInt","statusname","OpenChecklist","MakeCheckListInactive","colSpan","options","Array","apply","x","i","active","findNum","checkWindow","checker","setInterval","_window$SITEMODEL","window","SITEMODEL","exists","windowSetup","clearInterval","doUpdateChecklist","processObtainChecklists","failUpdateChecklist","console","dir","saveChecklistTarget","numOptions","doSaveChecklistTarget","processObtainTargets","failSaveChecklistTarget","makeCheckListInactive","obtainChecklists","doObtainChecklists","failObtainChecklists","lowerCaseKeys","data","obtainChecklistDetails","doObtainChecklistDetails","processObtainChecklistDetails","failObtainChecklistDetails","obtainTargets","doObtainTargets","failObtainTargets","currentChecklistTargets","obtainGoals","doObtainGoals","processObtainGoals","failObtainGoals","currentChecklistGoals","obtainResults","doObtainResults","processObtainResults","failObtainResults","currentChecklistResults","createResultDictionary","returnMe","forEach","targetid","hasOwnProperty","goalid","result","updateResult","checklistuuid","goal","doUpdateResult","processUpdateResult","failUpdateResult","saveChecklistGoal","doSaveChecklistGoal","failSaveChecklistGoal","callBack","Fail","axios","apiURL","then","catch"],"sourceRoot":""}