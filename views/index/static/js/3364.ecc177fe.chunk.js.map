{"version":3,"file":"static/js/3364.ecc177fe.chunk.js","mappings":"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","sources":["actions/uiActions.js","components/supporting/Tab.js","components/supporting/tests/TabTest.js"],"sourcesContent":["\r\n//Control Blocks\r\nexport const addToControlBlock = (status) =>{\r\n    return {\r\n        type:\"ADD_TO_CONTROL_BLOCK\",\r\n        payload:status\r\n    }\r\n};\r\n\r\nexport const removeFromControlBlock = (status) =>{\r\n    return {\r\n        type:\"REMOVE_FROM_CONTROL_BLOCK\",\r\n        payload:status\r\n    }\r\n};\r\n\r\n//Tabs\r\nexport const addTabGroup = (tabGroupData)=>{\r\n    return {\r\n        type:\"ADD_TAB_GROUP\",\r\n        payload:tabGroupData\r\n    }\r\n};\r\n\r\nexport const removeTabGroup = (tabGroupName)=>{\r\n    return {\r\n        type:\"REMOVE_TAB_GROUP\",\r\n        payload:tabGroupName\r\n    }\r\n};\r\n\r\nexport const addTabToGroup = (tabData) => {\r\n    return {\r\n        type:\"ADD_TAB_TO_GROUP\",\r\n        payload:tabData\r\n    }\r\n};\r\n\r\nexport const removeTabFromGroup = (groupName,keyName) => {\r\n    return {\r\n        type:\"REMOVE_TAB_FROM_GROUP\",\r\n        payload: {groupName:groupName,keyName:keyName}\r\n    }\r\n};\r\n\r\nexport const toggleTab = (groupName,key) => {\r\n    return {\r\n        type:\"TOGGLE_TAB\",\r\n        payload:{groupName:groupName,key:key}\r\n    }\r\n};\r\n\r\nexport const addTabPanelGroup = (groupName) =>{\r\n    return {\r\n        type:\"ADD_TAB_PANEL_GROUP\",\r\n        payload:groupName\r\n    }\r\n}\r\n\r\nexport const addControlSet = (controls) => {\r\n    return {\r\n        type:\"ADD_CONTROLS\",\r\n        payload:controls\r\n    }\r\n};","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {toggleTab} from \"src/actions/uiActions\";\r\nimport store from 'src/store';\r\n\r\nconst Tab = (props) => {\r\n    let stateData = store.getState();\r\n    let tabGroupData=(stateData?.tabGroups.hasOwnProperty(props.groupName) ? stateData.tabGroups[props.groupName] : {});\r\n    let groupClass = props.isActiveTab ? tabGroupData.groupTabActiveClassName  : tabGroupData.groupTabClassName\r\n    let propsClassName = props.tabClass ? props.tabClass : \"\";\r\n    let activeClass = props.isActiveTab ? \"active\" : \"\";\r\n\r\n    return (\r\n            <li className={\"nav-item kimTab \" + groupClass + \" \" + propsClassName} style={Object.assign({},tabGroupData.groupTabStyle,props.tabStyle)}\r\n                 onClick={()=>{store.dispatch(toggleTab(props.groupName,props.tabKey))}}>\r\n                    <a className={\"nav-link kimTabLabel \" + activeClass}>{props.label}</a>\r\n            </li>\r\n        )\r\n};\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        tabGroups:state.tabGroups\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(Tab);\r\n","import React,{useEffect,useState} from 'react';\r\nimport Tab from \"../Tab\";\r\nimport {updateTesting} from \"src/actions/testingActions\";\r\nimport store from 'src/store';\r\nimport {addTabToGroup} from \"src/actions/uiActions\";\r\n\r\nconst testData = {\r\n    label: \"YOYO\",\r\n    group: \"threeAmigos\",\r\n    key: \"key1\",\r\n    tabVisible: true,\r\n    panelVisible:true,\r\n    tabStyle: {backgroundColor:\"blue\",text:\"white\"}\r\n}\r\n\r\nconst TabTest = ()=>{\r\n    useEffect(()=>{\r\n        store.dispatch(updateTesting({testData:testData}));\r\n        store.dispatch(addTabToGroup(testData));\r\n    },[])\r\n\r\n    let [tabStyle,setTabStyle] = useState(testData.tabStyle);\r\n    let [tabVisible,settabVisible] = useState(testData.tabVisible);\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <button onClick={()=>setTabStyle({color:\"green\"})} id=\"changeStyle\">Change Style</button>\r\n                <button onClick={()=>settabVisible(false)} id=\"changeVisible\">Change Visible</button>\r\n            </div>\r\n            <Tab label={testData.label} group={testData.group} key={testData.key} tabVisible={tabVisible} tabStyle={tabStyle} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TabTest;\r\n"],"names":["addToControlBlock","status","type","payload","removeFromControlBlock","addTabGroup","tabGroupData","removeTabGroup","tabGroupName","addTabToGroup","tabData","removeTabFromGroup","groupName","keyName","toggleTab","key","addTabPanelGroup","addControlSet","controls","connect","state","tabGroups","props","stateData","store","getState","hasOwnProperty","groupClass","isActiveTab","groupTabActiveClassName","groupTabClassName","propsClassName","tabClass","activeClass","_jsx","className","style","Object","assign","groupTabStyle","tabStyle","onClick","dispatch","tabKey","children","label","testData","group","tabVisible","panelVisible","backgroundColor","text","useEffect","updateTesting","_useState","useState","_useState2","_slicedToArray","setTabStyle","_useState3","_useState4","settabVisible","_jsxs","color","id","Tab"],"sourceRoot":""}