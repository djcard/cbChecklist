{"version":3,"file":"static/js/3469.681caaa6.chunk.js","mappings":"8LAGaA,EAAc,SAACC,GAAQ,IAADC,EAC3BC,EAAoC,QAAxBD,EAAAE,EAAAA,QAAMC,WAAWC,eAAO,IAAAJ,GAAxBA,EAA0BK,OAASH,EAAAA,QAAMC,WAAWC,QAAQC,OAAS,CAAC,EAClFC,EAAQL,EAAUM,eAAeR,GAAQE,EAAUF,GAAQ,EAC/DE,EAAUF,GAAMO,EAAM,EACtBJ,EAAAA,QAAMM,UAASC,EAAAA,EAAAA,eAAc,CAACJ,OAAOJ,IACzC,C,mFCFMS,EAAW,uBAYjB,UAV6B,WAKzB,OAJAC,EAAAA,EAAAA,YAAU,WACNT,EAAAA,QAAMM,UAASC,EAAAA,EAAAA,eAAc,CAACG,QAAQC,OAAOC,KAAKC,GAASC,OAAON,SAASA,MAC5EZ,EAAAA,EAAAA,aAAYY,EACf,GAAE,KACMO,EAAAA,EAAAA,KAAA,OAAAC,UACJD,EAAAA,EAAAA,KAAA,WAER,C","sources":["containers/testing/testingFunctions.js","containers/testing/tests/TestingFunctionsTest.js"],"sourcesContent":["import store from \"src/store\";\r\nimport {updateTesting} from \"src/actions/testingActions\";\r\n\r\nexport const functionRun = (name)=>{\r\n    let allCounts = store.getState().testing?.counts ? store.getState().testing.counts : {};\r\n    let count = allCounts.hasOwnProperty(name) ? allCounts[name] : 0;\r\n    allCounts[name]=count+1;\r\n    store.dispatch(updateTesting({counts:allCounts}));\r\n};\r\n","import React,{useEffect} from 'react';\r\nimport {functionRun} from \"../testingFunctions\";\r\nimport * as allTest from '../testingFunctions';\r\nimport store from 'src/store';\r\nimport {updateTesting} from \"src/actions/testingActions\";\r\n\r\nconst funcname = \"dafgdgfshdfghdfghgfh\";\r\n\r\nconst TestingFunctionsTest = () => {\r\n    useEffect(()=>{\r\n        store.dispatch(updateTesting({testNum:Object.keys(allTest).length,funcname:funcname}))\r\n       functionRun(funcname)\r\n    },[])\r\n    return (<div>\r\n        <div></div>\r\n    </div>)\r\n}\r\n\r\nexport default TestingFunctionsTest;\r\n"],"names":["functionRun","name","_store$getState$testi","allCounts","store","getState","testing","counts","count","hasOwnProperty","dispatch","updateTesting","funcname","useEffect","testNum","Object","keys","allTest","length","_jsx","children"],"sourceRoot":""}