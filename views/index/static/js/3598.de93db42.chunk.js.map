{"version":3,"file":"static/js/3598.de93db42.chunk.js","mappings":"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","sources":["actions/cbChecklist_Actions.js","components/cbChecklist/CreateEditChildButton.js","components/cbChecklist/EditTargetRow.js","containers/cbChecklist/checkListMethods.js","services/cbChecklist/ApiServices.js"],"sourcesContent":["export const updateSiteModelChecklist = (status) =>{\r\n    return {\r\n        type:\"UPDATE_SITE_MODEL_CHECKLIST\",\r\n        payload:status\r\n    }\r\n};\r\n","import store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\n\r\nconst addChild = (checklistuuid,parentid,displayOrder) => {\r\n    let allTargets = store.getState().siteModelChecklist?.currentChecklistTargets ? store.getState().siteModelChecklist?.currentChecklistTargets : [];\r\n    allTargets.push({checklistuuid:checklistuuid,displayOrder:displayOrder,parentid:parentid,isDirty:true});\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistTargets:allTargets}));\r\n}\r\n\r\nconst CreateEditChildButton = ({checklistuuid,parentid,displayOrder}) => {\r\n    return <button onClick={()=>addChild(checklistuuid,parentid,displayOrder)}> Add Child </button>\r\n}\r\n\r\nexport default CreateEditChildButton;","import {useEffect, useState} from \"react\";\r\nimport {doSaveChecklistItem} from \"../../services/cbChecklist/ApiServices\";\r\nimport {saveChecklistItem, saveChecklistTarget} from \"../../containers/cbChecklist/checkListMethods\";\r\nimport CreateEditChildButton from \"./CreateEditChildButton\";\r\nimport store from \"../../store\";\r\n\r\n\r\n\r\nconst EditTargetRow = ({item,idx,indent=0}) => {\r\n    item.displayorder = item.hasOwnProperty(\"displayorder\") && isNaN(item.displayorder) ? item.displayorder : idx+1;\r\n    let [checkItem,setCheckItem] = useState(item);\r\n    let bgcolor = checkItem.hasOwnProperty(\"isDirty\") && checkItem.isDirty ? \"yellow\" : \"none\";\r\n    let saveButton = checkItem?.isDirty ? <button className={\"btn btn-sm btn-secondary\"} onClick={()=>{setCheckItem(Object.assign({},checkItem,{\"isDirty\":false})); saveChecklistTarget(checkItem)}}>Save</button> : null;\r\n    let allTargets = store.getState().siteModelChecklist?.currentChecklistTargets ? store.getState().siteModelChecklist?.currentChecklistTargets : [];\r\n    let childs = allTargets.filter((target)=>{\r\n        return target.parentid===item.id;\r\n    });\r\n    let indentTypes = [\r\n      \"left\",\r\n      \"center\",\r\n      \"right\"\r\n    ];\r\n    return (\r\n        <>\r\n        <tr style={{backgroundColor:bgcolor}}>\r\n            <td style={{textAlign:indentTypes[indent]}}>{idx+1}</td>\r\n            <td>\r\n                <input type={\"text\"} value={checkItem.testpackage}\r\n                       onChange={(evt)=>setCheckItem(Object.assign({},checkItem,{\"testpackage\":evt.currentTarget.value,isDirty:true}))}\r\n                       style={{paddingLeft:(indent*10) + \"%\", width:\"100%\"}} />\r\n            </td>\r\n            <td>{saveButton}</td>\r\n            <td><CreateEditChildButton checklistuuid={item.checklistuuid} parentid={item.id} displayOrder={childs.length+1}  /></td>\r\n        </tr>\r\n            {childs.map((child,idx)=>{\r\n                return <EditTargetRow item={child} idx={idx} key={child.parentid + child.diplayOrder} indent={indent+1} />\r\n            })}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditTargetRow;","import {\r\n    doObtainChecklistDetails,\r\n    doObtainChecklists,\r\n    doObtainGoals,\r\n    doObtainResults,\r\n    doObtainTargets, doSaveChecklistGoal, doSaveChecklistItem, doSaveChecklistTarget, doUpdateChecklist, doUpdateResult\r\n} from \"../../services/cbChecklist/ApiServices\";\r\nimport store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\nimport {lowerCaseKeys} from \"../../utilities/utilityFunctions\";\r\nlet findNum=0;\r\n\r\nexport const checkWindow = () => {\r\n    let exists = false;\r\n    let checker = setInterval(()=>{\r\n        if(window.SITEMODEL?.exists() || findNum===3){\r\n            store.dispatch(updateSiteModelChecklist({windowSetup:true}));\r\n            clearInterval(checker);\r\n        }\r\n        findNum++;\r\n    },3000);\r\n}\r\n\r\nexport const updateCheckList = (item) => {\r\n    doUpdateChecklist(item, processObtainChecklists, failUpdateChecklist);\r\n}\r\n\r\nconst processUpdateChecklist = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nconst failUpdateChecklist = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nexport const saveChecklistTarget = (item) => {\r\n    doSaveChecklistTarget(item, processObtainTargets, failSaveChecklistTarget);\r\n}\r\n\r\nconst processSaveChecklistTarget = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nconst failSaveChecklistTarget = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nexport const makeCheckListInactive = (id) => {\r\n    console.dir(\"Making inactive\");\r\n}\r\n\r\nexport const obtainChecklists = () =>{\r\n    doObtainChecklists(processObtainChecklists, failObtainChecklists)\r\n}\r\n\r\nconst processObtainChecklists = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({allChecklists:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainChecklists = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainChecklistDetails = ( id ) =>{\r\n    doObtainChecklistDetails(id, processObtainChecklistDetails, failObtainChecklistDetails)\r\n}\r\n\r\nconst processObtainChecklistDetails = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklist:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainChecklistDetails = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainTargets = (id) =>{\r\n    doObtainTargets(id, processObtainTargets, failObtainTargets)\r\n}\r\n\r\nconst processObtainTargets = (evt) => {\r\n    console.dir(\"Processing target return\")\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistTargets:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainTargets = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainGoals = (id) =>{\r\n    doObtainGoals(id, processObtainGoals, failObtainGoals)\r\n}\r\n\r\nconst processObtainGoals = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistGoals:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainGoals = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainResults = (id) =>{\r\n    doObtainResults(id, processObtainResults, failObtainResults)\r\n}\r\n\r\nconst processObtainResults = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistResults:createResultDictionary(lowerCaseKeys(evt.data.data))}))\r\n}\r\n\r\nconst createResultDictionary = (data) => {\r\n    let returnMe = {};\r\n    data.forEach((item)=>{\r\n        returnMe[item.testpackage] = returnMe.hasOwnProperty(item.testpackage) ? returnMe[item.testpackage] : {};\r\n        returnMe[item.testpackage][item.goaluuid] = item.result;\r\n    })\r\n\r\n    return returnMe;\r\n}\r\n\r\nconst failObtainResults = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const updateResult = (checklistuuid, target,goal,result) =>{\r\n    doUpdateResult(checklistuuid, target,goal,result, (evt)=>processUpdateResult(checklistuuid,evt), failUpdateResult)\r\n}\r\n\r\nconst processUpdateResult = (checklistuuid,evt) => {\r\n    obtainResults(checklistuuid)\r\n}\r\n\r\nconst failUpdateResult = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\n\r\nexport const saveChecklistGoal = (item) =>{\r\n    doSaveChecklistGoal(item, processObtainGoals, failSaveChecklistGoal)\r\n}\r\n\r\n\r\nconst failSaveChecklistGoal = (evt) => {\r\n    console.dir(evt);\r\n}","import axios from \"axios\";\r\nimport {apiURL} from \"../../utilities/utilityFunctions\";\r\n\r\nexport const doObtainChecklists = ( callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/\").then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainChecklistDetails = ( id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainTargets = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/targets/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainGoals = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/goals/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainResults = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/results/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doUpdateResult = (checklistuuid, target,goal,result, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/results/\" + checklistuuid,{goal:goal,target:target,result:result}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doSaveChecklistTarget = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/targets\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doUpdateChecklist = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doSaveChecklistGoal = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/goals\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\n"],"names":["updateSiteModelChecklist","status","type","payload","_ref","checklistuuid","parentid","displayOrder","_jsx","onClick","_store$getState$siteM","_store$getState$siteM2","allTargets","store","getState","siteModelChecklist","currentChecklistTargets","push","isDirty","dispatch","addChild","children","EditTargetRow","item","idx","_ref$indent","indent","displayorder","hasOwnProperty","isNaN","_useState","useState","_useState2","_slicedToArray","checkItem","setCheckItem","bgcolor","saveButton","className","Object","assign","saveChecklistTarget","childs","filter","target","id","_jsxs","_Fragment","style","backgroundColor","textAlign","value","testpackage","onChange","evt","currentTarget","paddingLeft","width","CreateEditChildButton","length","map","child","diplayOrder","findNum","checkWindow","checker","setInterval","_window$SITEMODEL","window","SITEMODEL","exists","windowSetup","clearInterval","updateCheckList","doUpdateChecklist","processObtainChecklists","failUpdateChecklist","console","dir","doSaveChecklistTarget","processObtainTargets","failSaveChecklistTarget","makeCheckListInactive","obtainChecklists","doObtainChecklists","failObtainChecklists","allChecklists","lowerCaseKeys","data","obtainChecklistDetails","doObtainChecklistDetails","processObtainChecklistDetails","failObtainChecklistDetails","currentChecklist","obtainTargets","doObtainTargets","failObtainTargets","obtainGoals","doObtainGoals","processObtainGoals","failObtainGoals","currentChecklistGoals","obtainResults","doObtainResults","processObtainResults","failObtainResults","currentChecklistResults","createResultDictionary","returnMe","forEach","goaluuid","result","updateResult","goal","doUpdateResult","processUpdateResult","failUpdateResult","saveChecklistGoal","doSaveChecklistGoal","failSaveChecklistGoal","callBack","Fail","axios","apiURL","then","catch"],"sourceRoot":""}