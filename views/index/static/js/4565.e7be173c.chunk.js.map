{"version":3,"file":"static/js/4565.e7be173c.chunk.js","mappings":"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","sources":["actions/cbChecklist_Actions.js","containers/cbChecklist/checkListMethods.js","services/cbChecklist/ApiServices.js"],"sourcesContent":["export const updateSiteModelChecklist = (status) =>{\r\n    return {\r\n        type:\"UPDATE_SITE_MODEL_CHECKLIST\",\r\n        payload:status\r\n    }\r\n};\r\n","import {\r\n    doObtainChecklistDetails,\r\n    doObtainChecklists,\r\n    doObtainGoals,\r\n    doObtainResults,\r\n    doObtainTargets, doSaveChecklistGoal, doSaveChecklistTarget, doUpdateChecklist, doUpdateResult\r\n} from \"../../services/cbChecklist/ApiServices\";\r\nimport store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\nimport {lowerCaseKeys} from \"../../utilities/utilityFunctions\";\r\nlet findNum=0;\r\n\r\nexport const checkWindow = () => {\r\n    let checker = setInterval(()=>{\r\n        if(window.SITEMODEL?.exists() || findNum===3){\r\n            store.dispatch(updateSiteModelChecklist({windowSetup:true}));\r\n            clearInterval(checker);\r\n        }\r\n        findNum++;\r\n    },3000);\r\n}\r\n\r\nexport const updateCheckList = (item) => {\r\n    doUpdateChecklist(item, processObtainChecklists, failUpdateChecklist);\r\n}\r\n\r\n/*const processUpdateChecklist = (evt)=>{\r\n    console.dir(evt);\r\n}*/\r\n\r\nconst failUpdateChecklist = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nexport const saveChecklistTarget = (item) => {\r\n    console.dir(item);\r\n    delete item.numOptions;\r\n    doSaveChecklistTarget(item, processObtainTargets, failSaveChecklistTarget);\r\n}\r\n\r\n/*const processSaveChecklistTarget = (evt)=>{\r\n    console.dir(evt);\r\n}*/\r\n\r\nconst failSaveChecklistTarget = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nexport const makeCheckListInactive = (id) => {\r\n    console.dir(\"Making inactive\");\r\n}\r\n\r\nexport const obtainChecklists = () =>{\r\n    doObtainChecklists(processObtainChecklists, failObtainChecklists)\r\n}\r\n\r\nconst processObtainChecklists = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({allChecklists:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainChecklists = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainChecklistDetails = ( id ) =>{\r\n    doObtainChecklistDetails(id, processObtainChecklistDetails, failObtainChecklistDetails)\r\n}\r\n\r\nconst processObtainChecklistDetails = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklist:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainChecklistDetails = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainTargets = (id) =>{\r\n    doObtainTargets(id, processObtainTargets, failObtainTargets)\r\n}\r\n\r\nconst processObtainTargets = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistTargets:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainTargets = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainGoals = (id) =>{\r\n    doObtainGoals(id, processObtainGoals, failObtainGoals)\r\n}\r\n\r\nconst processObtainGoals = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistGoals:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainGoals = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainResults = (id) =>{\r\n    doObtainResults(id, processObtainResults, failObtainResults)\r\n}\r\n\r\nconst processObtainResults = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistResults:createResultDictionary(lowerCaseKeys(evt.data.data))}))\r\n}\r\n\r\nconst createResultDictionary = (data) => {\r\n    let returnMe = {};\r\n    data.forEach((item)=>{\r\n        returnMe[item.targetid] = returnMe.hasOwnProperty(item.targetid) ? returnMe[item.targetid] : {};\r\n        returnMe[item.targetid][item.goalid] = item.result;\r\n    })\r\n\r\n    return returnMe;\r\n}\r\n\r\nconst failObtainResults = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const updateResult = (checklistuuid, target,goal,result) =>{\r\n    doUpdateResult(checklistuuid, target,goal,result, (evt)=>processUpdateResult(checklistuuid,evt), failUpdateResult)\r\n}\r\n\r\nconst processUpdateResult = (checklistuuid,evt) => {\r\n    obtainResults(checklistuuid)\r\n}\r\n\r\nconst failUpdateResult = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\n\r\nexport const saveChecklistGoal = (item) =>{\r\n    doSaveChecklistGoal(item, processObtainGoals, failSaveChecklistGoal)\r\n}\r\n\r\n\r\nconst failSaveChecklistGoal = (evt) => {\r\n    console.dir(evt);\r\n}","import axios from \"axios\";\r\nimport {apiURL} from \"../../utilities/utilityFunctions\";\r\n\r\nexport const doObtainChecklists = ( callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/\").then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainChecklistDetails = ( id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainTargets = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/targets/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainGoals = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/goals/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainResults = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/results/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doUpdateResult = (checklistuuid, target,goal,result, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/results/\" + checklistuuid,{goal:goal,target:target,result:result}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doSaveChecklistTarget = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/targets\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doUpdateChecklist = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doSaveChecklistGoal = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/goals\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\n"],"names":["updateSiteModelChecklist","status","type","payload","findNum","checkWindow","checker","setInterval","_window$SITEMODEL","window","SITEMODEL","exists","store","dispatch","windowSetup","clearInterval","updateCheckList","item","doUpdateChecklist","processObtainChecklists","failUpdateChecklist","evt","console","dir","saveChecklistTarget","numOptions","doSaveChecklistTarget","processObtainTargets","failSaveChecklistTarget","makeCheckListInactive","id","obtainChecklists","doObtainChecklists","failObtainChecklists","allChecklists","lowerCaseKeys","data","obtainChecklistDetails","doObtainChecklistDetails","processObtainChecklistDetails","failObtainChecklistDetails","currentChecklist","obtainTargets","doObtainTargets","failObtainTargets","currentChecklistTargets","obtainGoals","doObtainGoals","processObtainGoals","failObtainGoals","currentChecklistGoals","obtainResults","doObtainResults","processObtainResults","failObtainResults","currentChecklistResults","createResultDictionary","returnMe","forEach","targetid","hasOwnProperty","goalid","result","updateResult","checklistuuid","target","goal","doUpdateResult","processUpdateResult","failUpdateResult","saveChecklistGoal","doSaveChecklistGoal","failSaveChecklistGoal","callBack","Fail","axios","apiURL","then","catch"],"sourceRoot":""}