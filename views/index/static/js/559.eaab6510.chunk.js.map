{"version":3,"file":"static/js/559.eaab6510.chunk.js","mappings":"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","sources":["actions/cbChecklist_Actions.js","actions/uiActions.js","components/cbChecklist/ChooseRow.js","components/cbChecklist/DisplayOrderChooser.js","components/cbChecklist/MakeChecklistInactive.js","components/cbChecklist/OpenChecklist.js","components/cbChecklist/StatusDrop.js","containers/cbChecklist/checkListMethods.js","services/cbChecklist/ApiServices.js"],"sourcesContent":["export const updateSiteModelChecklist = (status) =>{\r\n    return {\r\n        type:\"UPDATE_SITE_MODEL_CHECKLIST\",\r\n        payload:status\r\n    }\r\n};\r\n","\r\n//Control Blocks\r\nexport const addToControlBlock = (status) =>{\r\n    return {\r\n        type:\"ADD_TO_CONTROL_BLOCK\",\r\n        payload:status\r\n    }\r\n};\r\n\r\nexport const removeFromControlBlock = (status) =>{\r\n    return {\r\n        type:\"REMOVE_FROM_CONTROL_BLOCK\",\r\n        payload:status\r\n    }\r\n};\r\n\r\n//Tabs\r\nexport const addTabGroup = (tabGroupData)=>{\r\n    return {\r\n        type:\"ADD_TAB_GROUP\",\r\n        payload:tabGroupData\r\n    }\r\n};\r\n\r\nexport const removeTabGroup = (tabGroupName)=>{\r\n    return {\r\n        type:\"REMOVE_TAB_GROUP\",\r\n        payload:tabGroupName\r\n    }\r\n};\r\n\r\nexport const addTabToGroup = (tabData) => {\r\n    return {\r\n        type:\"ADD_TAB_TO_GROUP\",\r\n        payload:tabData\r\n    }\r\n};\r\n\r\nexport const removeTabFromGroup = (groupName,keyName) => {\r\n    return {\r\n        type:\"REMOVE_TAB_FROM_GROUP\",\r\n        payload: {groupName:groupName,keyName:keyName}\r\n    }\r\n};\r\n\r\nexport const toggleTab = (groupName,key) => {\r\n    return {\r\n        type:\"TOGGLE_TAB\",\r\n        payload:{groupName:groupName,key:key}\r\n    }\r\n};\r\n\r\nexport const addTabPanelGroup = (groupName) =>{\r\n    return {\r\n        type:\"ADD_TAB_PANEL_GROUP\",\r\n        payload:groupName\r\n    }\r\n}\r\n\r\nexport const addControlSet = (controls) => {\r\n    return {\r\n        type:\"ADD_CONTROLS\",\r\n        payload:controls\r\n    }\r\n};","import OpenChecklist from \"./OpenChecklist\";\r\nimport MakeCheckListInactive from \"./MakeChecklistInactive\";\r\nimport { useEffect, useState } from \"react\";\r\nimport store from \"../../store\";\r\nimport { updateSiteModelChecklist } from \"../../actions/cbChecklist_Actions\";\r\nimport { updateCheckList } from \"../../containers/cbChecklist/checkListMethods\";\r\nimport { connect } from \"react-redux\";\r\nimport DisplayOrderChooser from \"./DisplayOrderChooser\";\r\nimport StatusDrop from \"./StatusDrop\";\r\n\r\nconst updateChecklistItem = (property, value) => {\r\n    let checklist = store.getState().siteModelChecklist?.currentChecklist ? store.getState().siteModelChecklist.currentChecklist : {};\r\n    checklist[property]=value;\r\n    if(property===\"displayorder\"){\r\n        checklist[\"updateOrder\"]=1;\r\n    }\r\n    store.dispatch(updateSiteModelChecklist({currentChecklist:checklist}));\r\n}\r\n\r\n\r\nconst ChooseRow = ({item,idx}) => {\r\n\r\n    let [isEditMode,setIsEditMode] = useState(!item.id?.length);\r\n    let allCheckLists = store.getState().siteModelChecklist?.allChecklists ? store.getState().siteModelChecklist.allChecklists : [];\r\n    let checklist = store.getState().siteModelChecklist?.currentChecklist ? store.getState().siteModelChecklist.currentChecklist : {};\r\n\r\n    let checklistid = checklist.id;\r\n\r\n    useEffect(()=>{\r\n        if(checklistid!==item.id){\r\n            setIsEditMode(0);\r\n        }\r\n    },[checklistid,item.id])\r\n\r\n    const saveChecklist = () =>{\r\n        setIsEditMode(0);\r\n        updateCheckList(Object.assign({},checklist));\r\n    }\r\n    let status = <StatusDrop val={checklist.statusName} action={()=>{}} />\r\n    let nameInput = <input type=\"text\" className=\"form-control\" value={checklist.name} onChange={(evt)=>updateChecklistItem(\"name\",evt.target.value)} />\r\n    let descInput = <input type=\"text\" className=\"form-control\" value={checklist.description} onChange={(evt)=>updateChecklistItem(\"description\",evt.target.value)} />\r\n\r\n    let saveButton = isEditMode\r\n        ? <button className=\"btn btn-primary\" onClick={()=>saveChecklist(0)}>Save</button>\r\n        : <button className=\"btn btn-info\" onClick={()=>{setIsEditMode(1);store.dispatch(updateSiteModelChecklist({currentChecklist:item}))}}>Edit</button>\r\n\r\n    let dispOrder = isEditMode\r\n        ? <DisplayOrderChooser length={allCheckLists.length} val={item.displayorder} action={(newVal)=>{updateChecklistItem(\"displayorder\",newVal)}} />\r\n        : item.displayorder +1;  \r\n    \r\n    let statusColors=[\r\n        \"\",\r\n        \"green\",\r\n        \"Aqua\",\r\n        \"GreenYellow\",\r\n        \"DarkOrange\",\r\n        \"black\"\r\n    ]\r\n\r\n    return !item.id?.length && !isEditMode\r\n        ? <tr><td colSpan={7}><button onClick={()=>{setIsEditMode(1);store.dispatch(updateSiteModelChecklist({currentChecklist:{id:\"\",displayorder:1000}}))}}>New</button></td></tr>\r\n        : <tr>\r\n        <td style={{backgroundColor:statusColors[item?.status ? item.status : 0]}}>{parseInt(idx)+1}</td>\r\n        <td>{isEditMode ? nameInput : item.name}</td>\r\n        <td>{isEditMode ? descInput : item.description}</td>\r\n        <td>{dispOrder}</td>\r\n        <td>{isEditMode ? status : item.statusname}</td>\r\n        <td><OpenChecklist item={item} /></td>\r\n        <td><MakeCheckListInactive id={item.id}/> </td>\r\n        <td> {saveButton}</td>\r\n    </tr>\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        siteModelChecklist:state.siteModelChecklist\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(ChooseRow);","const DisplayOrderChooser = ({length,val,action}) => {\r\n    let options = Array.apply(null, Array(length)).map(function (x, i) { return i; });\r\n   return  <select value={val} onChange={(evt)=>{action(evt.target.value)}}>\r\n        <option value=\"\"></option>\r\n        {options.map((item)=>{\r\n            return <option value={item}>{item+1}</option>\r\n        })}\r\n    </select>\r\n}\r\n\r\nexport default DisplayOrderChooser;","import {makeCheckListInactive, updateCheckList} from \"../../containers/cbChecklist/checkListMethods\";\r\n\r\nconst MakeCheckListInactive = ({id}) => {\r\n    return <button onClick={()=>updateCheckList({id:id,active:0})} className={\"btn btn-danger\"}>Inactive</button>\r\n}\r\n\r\nexport default MakeCheckListInactive;","import store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\nimport { toggleTab } from \"../../actions/uiActions\";\r\n\r\nconst OpenChecklist = ({item}) => {\r\n    return <button onClick={()=>{store.dispatch(updateSiteModelChecklist({currentChecklist:Object.assign({},item)}));store.dispatch(toggleTab(\"checkTabs\",\"execute\"));}} className={\"btn btn-info\"}>Open</button>\r\n}\r\n\r\nexport default OpenChecklist;","const StatusDrop = ({val,action}) => {\r\n    return <select></select>\r\n}\r\n\r\nexport default StatusDrop;","import {\r\n    doObtainChecklistDetails,\r\n    doObtainChecklists,\r\n    doObtainGoals,\r\n    doObtainResults,\r\n    doObtainTargets, doSaveChecklistGoal, doSaveChecklistTarget, doUpdateChecklist, doUpdateResult\r\n} from \"../../services/cbChecklist/ApiServices\";\r\nimport store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\nimport {lowerCaseKeys} from \"../../utilities/utilityFunctions\";\r\nlet findNum=0;\r\n\r\nexport const checkWindow = () => {\r\n    let checker = setInterval(()=>{\r\n        if(window.SITEMODEL?.exists() || findNum===3){\r\n            store.dispatch(updateSiteModelChecklist({windowSetup:true}));\r\n            clearInterval(checker);\r\n        }\r\n        findNum++;\r\n    },3000);\r\n}\r\n\r\nexport const updateCheckList = (item) => {\r\n    doUpdateChecklist(item, processObtainChecklists, failUpdateChecklist);\r\n}\r\n\r\n/*const processUpdateChecklist = (evt)=>{\r\n    console.dir(evt);\r\n}*/\r\n\r\nconst failUpdateChecklist = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nexport const saveChecklistTarget = (item) => {\r\n    console.dir(item);\r\n    delete item.numOptions;\r\n    doSaveChecklistTarget(item, processObtainTargets, failSaveChecklistTarget);\r\n}\r\n\r\n/*const processSaveChecklistTarget = (evt)=>{\r\n    console.dir(evt);\r\n}*/\r\n\r\nconst failSaveChecklistTarget = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nexport const makeCheckListInactive = (id) => {\r\n    console.dir(\"Making inactive\");\r\n}\r\n\r\nexport const obtainChecklists = () =>{\r\n    doObtainChecklists(processObtainChecklists, failObtainChecklists)\r\n}\r\n\r\nconst processObtainChecklists = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({allChecklists:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainChecklists = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainChecklistDetails = ( id ) =>{\r\n    doObtainChecklistDetails(id, processObtainChecklistDetails, failObtainChecklistDetails)\r\n}\r\n\r\nconst processObtainChecklistDetails = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklist:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainChecklistDetails = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainTargets = (id) =>{\r\n    doObtainTargets(id, processObtainTargets, failObtainTargets)\r\n}\r\n\r\nconst processObtainTargets = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistTargets:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainTargets = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainGoals = (id) =>{\r\n    doObtainGoals(id, processObtainGoals, failObtainGoals)\r\n}\r\n\r\nconst processObtainGoals = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistGoals:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainGoals = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainResults = (id) =>{\r\n    doObtainResults(id, processObtainResults, failObtainResults)\r\n}\r\n\r\nconst processObtainResults = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistResults:createResultDictionary(lowerCaseKeys(evt.data.data))}))\r\n}\r\n\r\nconst createResultDictionary = (data) => {\r\n    let returnMe = {};\r\n    data.forEach((item)=>{\r\n        returnMe[item.targetid] = returnMe.hasOwnProperty(item.targetid) ? returnMe[item.targetid] : {};\r\n        returnMe[item.targetid][item.goalid] = item.result;\r\n    })\r\n\r\n    return returnMe;\r\n}\r\n\r\nconst failObtainResults = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const updateResult = (checklistuuid, target,goal,result) =>{\r\n    doUpdateResult(checklistuuid, target,goal,result, (evt)=>processUpdateResult(checklistuuid,evt), failUpdateResult)\r\n}\r\n\r\nconst processUpdateResult = (checklistuuid,evt) => {\r\n    obtainResults(checklistuuid)\r\n}\r\n\r\nconst failUpdateResult = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\n\r\nexport const saveChecklistGoal = (item) =>{\r\n    doSaveChecklistGoal(item, processObtainGoals, failSaveChecklistGoal)\r\n}\r\n\r\n\r\nconst failSaveChecklistGoal = (evt) => {\r\n    console.dir(evt);\r\n}","import axios from \"axios\";\r\nimport {apiURL} from \"../../utilities/utilityFunctions\";\r\n\r\nexport const doObtainChecklists = ( callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/\").then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainChecklistDetails = ( id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainTargets = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/targets/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainGoals = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/goals/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainResults = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/results/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doUpdateResult = (checklistuuid, target,goal,result, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/results/\" + checklistuuid,{goal:goal,target:target,result:result}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doSaveChecklistTarget = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/targets\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doUpdateChecklist = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doSaveChecklistGoal = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/goals\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\n"],"names":["updateSiteModelChecklist","status","type","payload","addToControlBlock","removeFromControlBlock","addTabGroup","tabGroupData","removeTabGroup","tabGroupName","addTabToGroup","tabData","removeTabFromGroup","groupName","keyName","toggleTab","key","addTabPanelGroup","addControlSet","controls","updateChecklistItem","property","value","_store$getState$siteM","checklist","store","getState","siteModelChecklist","currentChecklist","dispatch","connect","state","_ref","_item$id","_store$getState$siteM2","_store$getState$siteM3","_item$id2","item","idx","_useState","useState","id","length","_useState2","_slicedToArray","isEditMode","setIsEditMode","allCheckLists","allChecklists","checklistid","useEffect","_jsx","StatusDrop","val","statusName","action","nameInput","className","name","onChange","evt","target","descInput","description","saveButton","onClick","updateCheckList","Object","assign","children","dispOrder","DisplayOrderChooser","displayorder","newVal","_jsxs","style","backgroundColor","parseInt","statusname","OpenChecklist","MakeCheckListInactive","colSpan","options","Array","apply","map","x","i","active","findNum","checkWindow","checker","setInterval","_window$SITEMODEL","window","SITEMODEL","exists","windowSetup","clearInterval","doUpdateChecklist","processObtainChecklists","failUpdateChecklist","console","dir","saveChecklistTarget","numOptions","doSaveChecklistTarget","processObtainTargets","failSaveChecklistTarget","makeCheckListInactive","obtainChecklists","doObtainChecklists","failObtainChecklists","lowerCaseKeys","data","obtainChecklistDetails","doObtainChecklistDetails","processObtainChecklistDetails","failObtainChecklistDetails","obtainTargets","doObtainTargets","failObtainTargets","currentChecklistTargets","obtainGoals","doObtainGoals","processObtainGoals","failObtainGoals","currentChecklistGoals","obtainResults","doObtainResults","processObtainResults","failObtainResults","currentChecklistResults","createResultDictionary","returnMe","forEach","targetid","hasOwnProperty","goalid","result","updateResult","checklistuuid","goal","doUpdateResult","processUpdateResult","failUpdateResult","saveChecklistGoal","doSaveChecklistGoal","failSaveChecklistGoal","callBack","Fail","axios","apiURL","then","catch"],"sourceRoot":""}