{"version":3,"file":"static/js/663.cc3988b1.chunk.js","mappings":"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","sources":["actions/cbChecklist_Actions.js","components/cbChecklist/EditGoalRow.js","components/cbChecklist/Goals.js","containers/cbChecklist/checkListMethods.js","services/cbChecklist/ApiServices.js"],"sourcesContent":["export const updateSiteModelChecklist = (status) =>{\r\n    return {\r\n        type:\"UPDATE_SITE_MODEL_CHECKLIST\",\r\n        payload:status\r\n    }\r\n};\r\n","import {useState} from \"react\";\r\nimport {saveChecklistGoal} from \"../../containers/cbChecklist/checkListMethods\";\r\n\r\nconst EditGoalRow = ({item,idx}) => {\r\n    item[\"displayorder\"]=isNaN(item.displayorder) ? idx+1 : item.displayorder;\r\n    let [goal,setGoal] = useState(item);\r\n    let bgcolor = goal.hasOwnProperty(\"isDirty\") && goal.isDirty ? \"yellow\" : \"none\";\r\n\r\n    let saveButton = goal?.isDirty ? <button className={\"btn btn-sm btn-secondary\"} onClick={()=>{setGoal(Object.assign({},goal,{\"isDirty\":false})); saveChecklistGoal(goal)}}>Save</button> : null;\r\n\r\n    return <tr style={{backgroundColor:bgcolor}}>\r\n        <td>{idx+1}</td>\r\n        <td><input type={\"text\"} value={goal.label} onChange={(evt)=>setGoal(Object.assign({},goal,{\"label\":evt.currentTarget.value,isDirty:true}))} /></td>\r\n        <td><input type={\"checkbox\"} checked={goal.active} onChange={(evt)=>setGoal(Object.assign({},goal,{\"active\":evt.currentTarget.checked,isDirty:true}))} /> </td>\r\n        <td>{saveButton} </td>\r\n    </tr>\r\n}\r\n\r\nexport default EditGoalRow;","import {connect} from \"react-redux\";\r\nimport store from \"../../store\";\r\nimport EditGoalRow from \"./EditGoalRow\";\r\nimport {saveChecklistTarget} from \"../../containers/cbChecklist/checkListMethods\";\r\n\r\nconst Goals = () => {\r\n    let allGoals = store.getState().siteModelChecklist.currentChecklistGoals ? store.getState().siteModelChecklist.currentChecklistGoals : [];\r\n    let currentChecklist = store.getState().siteModelChecklist?.currentChecklist;\r\n    allGoals.push({checklistuuid:currentChecklist?.id,active:1});\r\n\r\n\r\n\r\n    return <div>\r\n        <h4>Goals</h4>\r\n        <table className={\"table table-bordered\"}>\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>Goal</th>\r\n                    <th>Active</th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {allGoals.map((item,idx)=>{\r\n                return <EditGoalRow item={item} idx={idx} />\r\n            })}\r\n            </tbody>\r\n        </table>\r\n\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        siteModelChecklist:state.siteModelChecklist,\r\n        dataStore:state.dataStore,\r\n        tabStore:state.tabStore\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(Goals);","import {\r\n    doObtainChecklistDetails,\r\n    doObtainChecklists,\r\n    doObtainGoals,\r\n    doObtainResults,\r\n    doObtainTargets, doSaveChecklistGoal, doSaveChecklistTarget, doUpdateChecklist, doUpdateResult\r\n} from \"../../services/cbChecklist/ApiServices\";\r\nimport store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\nimport {lowerCaseKeys} from \"../../utilities/utilityFunctions\";\r\nlet findNum=0;\r\n\r\nexport const checkWindow = () => {\r\n    let checker = setInterval(()=>{\r\n        if(window.SITEMODEL?.exists() || findNum===3){\r\n            store.dispatch(updateSiteModelChecklist({windowSetup:true}));\r\n            clearInterval(checker);\r\n        }\r\n        findNum++;\r\n    },3000);\r\n}\r\n\r\nexport const updateCheckList = (item) => {\r\n    doUpdateChecklist(item, processObtainChecklists, failUpdateChecklist);\r\n}\r\n\r\n/*const processUpdateChecklist = (evt)=>{\r\n    console.dir(evt);\r\n}*/\r\n\r\nconst failUpdateChecklist = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nexport const saveChecklistTarget = (item) => {\r\n    console.dir(item);\r\n    delete item.numOptions;\r\n    doSaveChecklistTarget(item, processObtainTargets, failSaveChecklistTarget);\r\n}\r\n\r\n/*const processSaveChecklistTarget = (evt)=>{\r\n    console.dir(evt);\r\n}*/\r\n\r\nconst failSaveChecklistTarget = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nexport const makeCheckListInactive = (id) => {\r\n    console.dir(\"Making inactive\");\r\n}\r\n\r\nexport const obtainChecklists = () =>{\r\n    doObtainChecklists(processObtainChecklists, failObtainChecklists)\r\n}\r\n\r\nconst processObtainChecklists = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({allChecklists:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainChecklists = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainChecklistDetails = ( id ) =>{\r\n    doObtainChecklistDetails(id, processObtainChecklistDetails, failObtainChecklistDetails)\r\n}\r\n\r\nconst processObtainChecklistDetails = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklist:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainChecklistDetails = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainTargets = (id) =>{\r\n    doObtainTargets(id, processObtainTargets, failObtainTargets)\r\n}\r\n\r\nconst processObtainTargets = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistTargets:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainTargets = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainGoals = (id) =>{\r\n    doObtainGoals(id, processObtainGoals, failObtainGoals)\r\n}\r\n\r\nconst processObtainGoals = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistGoals:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainGoals = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainResults = (id) =>{\r\n    doObtainResults(id, processObtainResults, failObtainResults)\r\n}\r\n\r\nconst processObtainResults = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistResults:createResultDictionary(lowerCaseKeys(evt.data.data))}))\r\n}\r\n\r\nconst createResultDictionary = (data) => {\r\n    let returnMe = {};\r\n    data.forEach((item)=>{\r\n        returnMe[item.targetid] = returnMe.hasOwnProperty(item.targetid) ? returnMe[item.targetid] : {};\r\n        returnMe[item.targetid][item.goalid] = item.result;\r\n    })\r\n\r\n    return returnMe;\r\n}\r\n\r\nconst failObtainResults = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const updateResult = (checklistuuid, target,goal,result) =>{\r\n    doUpdateResult(checklistuuid, target,goal,result, (evt)=>processUpdateResult(checklistuuid,evt), failUpdateResult)\r\n}\r\n\r\nconst processUpdateResult = (checklistuuid,evt) => {\r\n    obtainResults(checklistuuid)\r\n}\r\n\r\nconst failUpdateResult = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\n\r\nexport const saveChecklistGoal = (item) =>{\r\n    doSaveChecklistGoal(item, processObtainGoals, failSaveChecklistGoal)\r\n}\r\n\r\n\r\nconst failSaveChecklistGoal = (evt) => {\r\n    console.dir(evt);\r\n}","import axios from \"axios\";\r\nimport {apiURL} from \"../../utilities/utilityFunctions\";\r\n\r\nexport const doObtainChecklists = ( callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/\").then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainChecklistDetails = ( id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainTargets = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/targets/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainGoals = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/goals/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainResults = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/results/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doUpdateResult = (checklistuuid, target,goal,result, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/results/\" + checklistuuid,{goal:goal,target:target,result:result}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doSaveChecklistTarget = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/targets\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doUpdateChecklist = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doSaveChecklistGoal = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/goals\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\n"],"names":["updateSiteModelChecklist","status","type","payload","_ref","item","idx","isNaN","displayorder","_useState","useState","_useState2","_slicedToArray","goal","setGoal","bgcolor","hasOwnProperty","isDirty","saveButton","_jsx","className","onClick","Object","assign","saveChecklistGoal","children","_jsxs","style","backgroundColor","value","label","onChange","evt","currentTarget","checked","active","connect","state","siteModelChecklist","dataStore","tabStore","_store$getState$siteM","allGoals","store","getState","currentChecklistGoals","currentChecklist","push","checklistuuid","id","map","EditGoalRow","findNum","checkWindow","checker","setInterval","_window$SITEMODEL","window","SITEMODEL","exists","dispatch","windowSetup","clearInterval","updateCheckList","doUpdateChecklist","processObtainChecklists","failUpdateChecklist","console","dir","saveChecklistTarget","numOptions","doSaveChecklistTarget","processObtainTargets","failSaveChecklistTarget","makeCheckListInactive","obtainChecklists","doObtainChecklists","failObtainChecklists","allChecklists","lowerCaseKeys","data","obtainChecklistDetails","doObtainChecklistDetails","processObtainChecklistDetails","failObtainChecklistDetails","obtainTargets","doObtainTargets","failObtainTargets","currentChecklistTargets","obtainGoals","doObtainGoals","processObtainGoals","failObtainGoals","obtainResults","doObtainResults","processObtainResults","failObtainResults","currentChecklistResults","createResultDictionary","returnMe","forEach","targetid","goalid","result","updateResult","target","doUpdateResult","processUpdateResult","failUpdateResult","doSaveChecklistGoal","failSaveChecklistGoal","callBack","Fail","axios","apiURL","then","catch"],"sourceRoot":""}