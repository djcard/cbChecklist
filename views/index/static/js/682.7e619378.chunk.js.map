{"version":3,"file":"static/js/682.7e619378.chunk.js","mappings":"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","sources":["actions/cbChecklist_Actions.js","components/cbChecklist/Details.js","containers/cbChecklist/checkListMethods.js","services/cbChecklist/ApiServices.js"],"sourcesContent":["export const updateSiteModelChecklist = (status) =>{\r\n    return {\r\n        type:\"UPDATE_SITE_MODEL_CHECKLIST\",\r\n        payload:status\r\n    }\r\n};\r\n","import {connect} from \"react-redux\";\r\nimport store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\nimport {updateCheckList} from \"../../containers/cbChecklist/checkListMethods\";\r\n\r\n\r\nconst updateChecklist = (property, value) => {\r\n    let checklist = store.getState().siteModelChecklist?.currentChecklist ? store.getState().siteModelChecklist.currentChecklist : {};\r\n    checklist[property]=value;\r\n    store.dispatch(updateSiteModelChecklist({currentChecklist:checklist}));\r\n}\r\nconst EditChecklistDetails = () => {\r\n    let checklist = store.getState().siteModelChecklist?.currentChecklist ? store.getState().siteModelChecklist.currentChecklist : {};\r\n    return <div>\r\n        <form>\r\n            <div>\r\n                Name: <input type={\"text\"} value={checklist.name} onChange={(evt)=>updateChecklist(\"name\", evt.currentTarget.value)} /><br/>\r\n                Description: <input type={\"text\"} value={checklist.description} onChange={(evt)=>updateChecklist(\"description\", evt.currentTarget.value)} /><br/>\r\n                Active <input type={\"checkbox\"} checked={checklist.active} onChange={(evt)=>updateChecklist(\"active\", evt.currentTarget.checked)} /><br/>\r\n                <button type=\"button\" onClick={()=>updateCheckList(Object.assign({},checklist))}>Save</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n\r\n    return {\r\n        siteModelChecklist:state.siteModelChecklist,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(EditChecklistDetails);","import {\r\n    doObtainChecklistDetails,\r\n    doObtainChecklists,\r\n    doObtainGoals,\r\n    doObtainResults,\r\n    doObtainTargets, doSaveChecklistGoal, doSaveChecklistItem, doSaveChecklistTarget, doUpdateChecklist, doUpdateResult\r\n} from \"../../services/cbChecklist/ApiServices\";\r\nimport store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\nimport {lowerCaseKeys} from \"../../utilities/utilityFunctions\";\r\nlet findNum=0;\r\n\r\nexport const checkWindow = () => {\r\n    let exists = false;\r\n    let checker = setInterval(()=>{\r\n        if(window.SITEMODEL?.exists() || findNum===3){\r\n            store.dispatch(updateSiteModelChecklist({windowSetup:true}));\r\n            clearInterval(checker);\r\n        }\r\n        findNum++;\r\n    },3000);\r\n}\r\n\r\nexport const updateCheckList = (item) => {\r\n    doUpdateChecklist(item, processObtainChecklists, failUpdateChecklist);\r\n}\r\n\r\nconst processUpdateChecklist = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nconst failUpdateChecklist = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nexport const saveChecklistTarget = (item) => {\r\n    doSaveChecklistTarget(item, processObtainTargets, failSaveChecklistTarget);\r\n}\r\n\r\nconst processSaveChecklistTarget = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nconst failSaveChecklistTarget = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nexport const makeCheckListInactive = (id) => {\r\n    console.dir(\"Making inactive\");\r\n}\r\n\r\nexport const obtainChecklists = () =>{\r\n    doObtainChecklists(processObtainChecklists, failObtainChecklists)\r\n}\r\n\r\nconst processObtainChecklists = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({allChecklists:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainChecklists = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainChecklistDetails = ( id ) =>{\r\n    doObtainChecklistDetails(id, processObtainChecklistDetails, failObtainChecklistDetails)\r\n}\r\n\r\nconst processObtainChecklistDetails = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklist:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainChecklistDetails = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainTargets = (id) =>{\r\n    doObtainTargets(id, processObtainTargets, failObtainTargets)\r\n}\r\n\r\nconst processObtainTargets = (evt) => {\r\n    console.dir(\"Processing target return\")\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistTargets:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainTargets = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainGoals = (id) =>{\r\n    doObtainGoals(id, processObtainGoals, failObtainGoals)\r\n}\r\n\r\nconst processObtainGoals = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistGoals:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainGoals = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainResults = (id) =>{\r\n    doObtainResults(id, processObtainResults, failObtainResults)\r\n}\r\n\r\nconst processObtainResults = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistResults:createResultDictionary(lowerCaseKeys(evt.data.data))}))\r\n}\r\n\r\nconst createResultDictionary = (data) => {\r\n    let returnMe = {};\r\n    data.forEach((item)=>{\r\n        returnMe[item.testpackage] = returnMe.hasOwnProperty(item.testpackage) ? returnMe[item.testpackage] : {};\r\n        returnMe[item.testpackage][item.goaluuid] = item.result;\r\n    })\r\n\r\n    return returnMe;\r\n}\r\n\r\nconst failObtainResults = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const updateResult = (checklistuuid, target,goal,result) =>{\r\n    doUpdateResult(checklistuuid, target,goal,result, (evt)=>processUpdateResult(checklistuuid,evt), failUpdateResult)\r\n}\r\n\r\nconst processUpdateResult = (checklistuuid,evt) => {\r\n    obtainResults(checklistuuid)\r\n}\r\n\r\nconst failUpdateResult = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\n\r\nexport const saveChecklistGoal = (item) =>{\r\n    doSaveChecklistGoal(item, processObtainGoals, failSaveChecklistGoal)\r\n}\r\n\r\n\r\nconst failSaveChecklistGoal = (evt) => {\r\n    console.dir(evt);\r\n}","import axios from \"axios\";\r\nimport {apiURL} from \"../../utilities/utilityFunctions\";\r\n\r\nexport const doObtainChecklists = ( callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/\").then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainChecklistDetails = ( id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainTargets = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/targets/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainGoals = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/goals/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainResults = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/results/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doUpdateResult = (checklistuuid, target,goal,result, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/results/\" + checklistuuid,{goal:goal,target:target,result:result}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doSaveChecklistTarget = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/targets\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doUpdateChecklist = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doSaveChecklistGoal = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/goals\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\n"],"names":["updateSiteModelChecklist","status","type","payload","updateChecklist","property","value","_store$getState$siteM","checklist","store","getState","siteModelChecklist","currentChecklist","dispatch","connect","state","_store$getState$siteM2","_jsx","children","_jsxs","name","onChange","evt","currentTarget","description","checked","active","onClick","updateCheckList","Object","assign","findNum","checkWindow","checker","setInterval","_window$SITEMODEL","window","SITEMODEL","exists","windowSetup","clearInterval","item","doUpdateChecklist","processObtainChecklists","failUpdateChecklist","console","dir","saveChecklistTarget","doSaveChecklistTarget","processObtainTargets","failSaveChecklistTarget","makeCheckListInactive","id","obtainChecklists","doObtainChecklists","failObtainChecklists","allChecklists","lowerCaseKeys","data","obtainChecklistDetails","doObtainChecklistDetails","processObtainChecklistDetails","failObtainChecklistDetails","obtainTargets","doObtainTargets","failObtainTargets","currentChecklistTargets","obtainGoals","doObtainGoals","processObtainGoals","failObtainGoals","currentChecklistGoals","obtainResults","doObtainResults","processObtainResults","failObtainResults","currentChecklistResults","createResultDictionary","returnMe","forEach","testpackage","hasOwnProperty","goaluuid","result","updateResult","checklistuuid","target","goal","doUpdateResult","processUpdateResult","failUpdateResult","saveChecklistGoal","doSaveChecklistGoal","failSaveChecklistGoal","callBack","Fail","axios","apiURL","then","catch"],"sourceRoot":""}