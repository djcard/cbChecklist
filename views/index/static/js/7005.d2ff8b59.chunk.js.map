{"version":3,"file":"static/js/7005.d2ff8b59.chunk.js","mappings":"kMAAO,IAAMA,EAA2B,SAACC,GACrC,MAAO,CACHC,KAAK,8BACLC,QAAQF,EAEhB,C,2CCKA,UAV4B,SAAHG,GAA6B,IAAxBC,EAAMD,EAANC,OAAOC,EAAGF,EAAHE,IAAIC,EAAMH,EAANG,OACjCC,EAAUC,MAAMC,MAAM,KAAMD,MAAMJ,IAASM,KAAI,SAAUC,EAAGC,GAAK,OAAOA,CAAG,IAChF,OAAQC,EAAAA,EAAAA,MAAA,UAAQC,MAAOT,EAAKU,SAAU,SAACC,GAAOV,EAAOU,EAAIC,OAAOH,MAAM,EAAEI,SAAA,EACnEC,EAAAA,EAAAA,KAAA,UAAQL,MAAM,KACbP,EAAQG,KAAI,SAACU,GACV,OAAOD,EAAAA,EAAAA,KAAA,UAAQL,MAAOM,EAAKF,SAAEE,EAAK,GACtC,MAER,C,4FC4BA,UA7BmB,WACf,IAAIC,EAAYC,EAAAA,QAAMC,WAAWC,mBAAmBH,UAAYC,EAAAA,QAAMC,WAAWC,mBAAmBH,UAAY,CAAC,EACjHI,GAA+BC,EAAAA,EAAAA,UAASL,GAAUM,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAASF,EAAA,GAACG,EAAYH,EAAA,GACvBI,EAAsB,OAATF,QAAS,IAATA,GAAAA,EAAWG,SAAUb,EAAAA,EAAAA,KAAA,UAAQc,UAAW,2BAA4BC,QAAS,WAAKJ,EAAaK,OAAOC,OAAO,CAAC,EAAEP,EAAU,CAAC,SAAU,MAAUQ,EAAAA,EAAAA,qBAAoBR,EAAU,EAAEX,SAAC,SAAgB,KAEjN,OACIL,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAAD,SAAMW,EAAUS,gBAChBzB,EAAAA,EAAAA,MAAA,OAAAK,SAAA,CAAK,WACMC,EAAAA,EAAAA,KAAA,SAAOlB,KAAM,OAAQa,MAAOe,EAAUU,YAAaN,UAAU,eAC7DlB,SAAU,SAACC,GAAG,OAAGc,EAAaK,OAAOC,OAAO,CAAC,EAAEP,EAAU,CAAC,YAAcb,EAAIwB,cAAc1B,MAAMkB,SAAQ,IAAO,QAE1HnB,EAAAA,EAAAA,MAAA,OAAAK,SAAA,CAAK,iBACYC,EAAAA,EAAAA,KAAA,YAAUlB,KAAM,OAAQa,MAAOe,EAAUY,YAAaR,UAAU,eACtElB,SAAU,SAACC,GAAG,OAAGc,EAAaK,OAAOC,OAAO,CAAC,EAAEP,EAAU,CAAC,YAAcb,EAAIwB,cAAc1B,MAAMkB,SAAQ,IAAO,QAE1Hb,EAAAA,EAAAA,KAAA,OAAAD,UACAL,EAAAA,EAAAA,MAAA,OAAAK,SAAA,CAAK,YAAQC,EAAAA,EAAAA,KAAA,SAAOlB,KAAM,WAAYyC,QAASb,EAAUc,OAAQ5B,SAAU,SAACC,GAAG,OAAGc,EAAaK,OAAOC,OAAO,CAAC,EAAEP,EAAU,CAAC,OAASb,EAAIwB,cAAcE,QAAU,EAAI,EAAEV,SAAQ,IAAO,IAAI,UAEzLnB,EAAAA,EAAAA,MAAA,OAAAK,SAAA,CAAK,kBACaC,EAAAA,EAAAA,KAAA,SAAOlB,KAAK,OAAOa,MAAOe,EAAUe,aAAc7B,SAAU,SAAC8B,GAAUf,EAAaK,OAAOC,OAAO,CAAC,aAAeS,EAAOL,cAAc1B,OAAOe,EAAU,CAAC,SAAU,IAAO,QAG5LV,EAAAA,EAAAA,KAAA,OAAAD,SAAMa,MAIlB,C,+eCxBIe,EAAQ,EAECC,EAAc,WACvB,IAAIC,EAAUC,aAAY,WAAK,IAADC,GACP,QAAhBA,EAAAC,OAAOC,iBAAS,IAAAF,GAAhBA,EAAkBG,UAAsB,IAAVP,KAC7BxB,EAAAA,QAAMgC,UAASvD,EAAAA,EAAAA,0BAAyB,CAACwD,aAAY,KACrDC,cAAcR,IAElBF,GACJ,GAAE,IACN,EAEaW,EAAkB,SAACrC,IAC5BsC,EAAAA,EAAAA,mBAAkBtC,EAAMuC,EAAyBC,EACrD,EAMMA,EAAsB,SAAC5C,GACzB6C,QAAQC,IAAI9C,EAChB,EAEaqB,EAAsB,SAACjB,GAChCyC,QAAQC,IAAI1C,UACLA,EAAK2C,YACZC,EAAAA,EAAAA,uBAAsB5C,EAAM6C,EAAsBC,EACtD,EAMMA,EAA0B,SAAClD,GAC7B6C,QAAQC,IAAI9C,EAChB,EAEamD,EAAwB,SAACC,GAClCP,QAAQC,IAAI,kBAChB,EAEaO,EAAmB,YAC5BC,EAAAA,EAAAA,oBAAmBX,EAAyBY,EAChD,EAEMZ,EAA0B,SAAC3C,GAC7BM,EAAAA,QAAMgC,UAASvD,EAAAA,EAAAA,0BAAyB,CAACyE,eAAcC,EAAAA,EAAAA,eAAczD,EAAI0D,KAAKA,QAClF,EAEMH,EAAuB,SAACvD,GAC1B6C,QAAQC,IAAI9C,EAChB,EAEa2D,EAAyB,SAAEP,IACpCQ,EAAAA,EAAAA,0BAAyBR,EAAIS,EAA+BC,EAChE,EAEMD,EAAgC,SAAC7D,GACnCM,EAAAA,QAAMgC,UAASvD,EAAAA,EAAAA,0BAAyB,CAACgF,kBAAiBN,EAAAA,EAAAA,eAAczD,EAAI0D,KAAKA,QACrF,EAEMI,EAA6B,SAAC9D,GAChC6C,QAAQC,IAAI9C,EAChB,EAEagE,EAAgB,SAACZ,IAC1Ba,EAAAA,EAAAA,iBAAgBb,EAAIH,EAAsBiB,EAC9C,EAEMjB,EAAuB,SAACjD,GAC1BM,EAAAA,QAAMgC,UAASvD,EAAAA,EAAAA,0BAAyB,CAACoF,yBAAwBV,EAAAA,EAAAA,eAAczD,EAAI0D,KAAKA,QAC5F,EAEMQ,EAAoB,SAAClE,GACvB6C,QAAQC,IAAI9C,EAChB,EAEaoE,EAAc,SAAChB,IACxBiB,EAAAA,EAAAA,eAAcjB,EAAIkB,EAAoBC,EAC1C,EAEMD,EAAqB,SAACtE,GACxBM,EAAAA,QAAMgC,UAASvD,EAAAA,EAAAA,0BAAyB,CAACyF,uBAAsBf,EAAAA,EAAAA,eAAczD,EAAI0D,KAAKA,QAC1F,EAEMa,EAAkB,SAACvE,GACrB6C,QAAQC,IAAI9C,EAChB,EAEayE,EAAgB,SAACrB,IAC1BsB,EAAAA,EAAAA,iBAAgBtB,EAAIuB,EAAsBC,EAC9C,EAEMD,EAAuB,SAAC3E,GAC1BM,EAAAA,QAAMgC,UAASvD,EAAAA,EAAAA,0BAAyB,CAAC8F,wBAAwBC,GAAuBrB,EAAAA,EAAAA,eAAczD,EAAI0D,KAAKA,SACnH,EAEMoB,EAAyB,SAACpB,GAC5B,IAAIqB,EAAW,CAAC,EAMhB,OALArB,EAAKsB,SAAQ,SAAC5E,GACV2E,EAAS3E,EAAK6E,UAAYF,EAASG,eAAe9E,EAAK6E,UAAYF,EAAS3E,EAAK6E,UAAY,CAAC,EAC9FF,EAAS3E,EAAK6E,UAAU7E,EAAK+E,QAAU/E,EAAKgF,MAChD,IAEOL,CACX,EAEMH,EAAoB,SAAC5E,GACvB6C,QAAQC,IAAI9C,EAChB,EAEaqF,EAAe,SAACC,EAAerF,EAAOsF,EAAKH,IACpDI,EAAAA,EAAAA,gBAAeF,EAAerF,EAAOsF,EAAKH,GAAQ,SAACpF,GAAG,OAAGyF,EAAoBH,EAActF,EAAI,GAAE0F,EACrG,EAEMD,EAAsB,SAACH,EAActF,GACvCyE,EAAca,EAClB,EAEMI,EAAmB,SAAC1F,GACtB6C,QAAQC,IAAI9C,EAChB,EAGa2F,EAAoB,SAACvF,IAC9BwF,EAAAA,EAAAA,qBAAoBxF,EAAMkE,EAAoBuB,EAClD,EAGMA,EAAwB,SAAC7F,GAC3B6C,QAAQC,IAAI9C,EAChB,C,0aC3IasD,EAAqB,SAAEwC,EAASC,GAEzCC,IAAAA,KAAUC,EAAAA,EAAAA,UAAY,iBAAiBC,MAAK,SAAClG,GAAG,OAAG8F,EAAS9F,EAAI,IAAEmG,OAAM,SAACnG,GAAG,OAAG+F,EAAK/F,EAAI,GAC5F,EAEa4D,EAA2B,SAAER,EAAI0C,EAASC,GAEnDC,IAAAA,KAAUC,EAAAA,EAAAA,UAAY,gBAAkB7C,GAAI8C,MAAK,SAAClG,GAAG,OAAG8F,EAAS9F,EAAI,IAAEmG,OAAM,SAACnG,GAAG,OAAG+F,EAAK/F,EAAI,GACjG,EAEaiE,EAAkB,SAACb,EAAI0C,EAASC,GAEzCC,IAAAA,KAAUC,EAAAA,EAAAA,UAAY,wBAA0B7C,GAAI8C,MAAK,SAAClG,GAAG,OAAG8F,EAAS9F,EAAI,IAAEmG,OAAM,SAACnG,GAAG,OAAG+F,EAAK/F,EAAI,GACzG,EAEaqE,EAAgB,SAACjB,EAAI0C,EAASC,GAEvCC,IAAAA,KAAUC,EAAAA,EAAAA,UAAY,sBAAwB7C,GAAI8C,MAAK,SAAClG,GAAG,OAAG8F,EAAS9F,EAAI,IAAEmG,OAAM,SAACnG,GAAG,OAAG+F,EAAK/F,EAAI,GACvG,EAEa0E,EAAkB,SAACtB,EAAI0C,EAASC,GAEzCC,IAAAA,KAAUC,EAAAA,EAAAA,UAAY,wBAA0B7C,GAAI8C,MAAK,SAAClG,GAAG,OAAG8F,EAAS9F,EAAI,IAAEmG,OAAM,SAACnG,GAAG,OAAG+F,EAAK/F,EAAI,GACzG,EAEawF,EAAiB,SAACF,EAAerF,EAAOsF,EAAKH,EAAQU,EAASC,GAEvEC,IAAAA,MAAWC,EAAAA,EAAAA,UAAY,wBAA0BX,EAAc,CAACC,KAAKA,EAAKtF,OAAOA,EAAOmF,OAAOA,IAASc,MAAK,SAAClG,GAAG,OAAG8F,EAAS9F,EAAI,IAAEmG,OAAM,SAACnG,GAAG,OAAG+F,EAAK/F,EAAI,GAC7J,EAEagD,EAAwB,SAAC5C,EAAM0F,EAASC,GAEjDC,IAAAA,MAAWC,EAAAA,EAAAA,UAAY,uBAAuB,CAAC7F,KAAAA,IAAO8F,MAAK,SAAClG,GAAG,OAAG8F,EAAS9F,EAAI,IAAEmG,OAAM,SAACnG,GAAG,OAAG+F,EAAK/F,EAAI,GAC3G,EAEa0C,EAAoB,SAACtC,EAAM0F,EAASC,GAE7CC,IAAAA,MAAWC,EAAAA,EAAAA,UAAY,gBAAgB,CAAC7F,KAAAA,IAAO8F,MAAK,SAAClG,GAAG,OAAG8F,EAAS9F,EAAI,IAAEmG,OAAM,SAACnG,GAAG,OAAG+F,EAAK/F,EAAI,GACpG,EAEa4F,EAAsB,SAACxF,EAAM0F,EAASC,GAE/CC,IAAAA,MAAWC,EAAAA,EAAAA,UAAY,qBAAqB,CAAC7F,KAAAA,IAAO8F,MAAK,SAAClG,GAAG,OAAG8F,EAAS9F,EAAI,IAAEmG,OAAM,SAACnG,GAAG,OAAG+F,EAAK/F,EAAI,GACzG,C","sources":["actions/cbChecklist_Actions.js","components/cbChecklist/DisplayOrderChooser.js","components/cbChecklist/TargetForm.js","containers/cbChecklist/checkListMethods.js","services/cbChecklist/ApiServices.js"],"sourcesContent":["export const updateSiteModelChecklist = (status) =>{\r\n    return {\r\n        type:\"UPDATE_SITE_MODEL_CHECKLIST\",\r\n        payload:status\r\n    }\r\n};\r\n","const DisplayOrderChooser = ({length,val,action}) => {\r\n    let options = Array.apply(null, Array(length)).map(function (x, i) { return i; });\r\n   return  <select value={val} onChange={(evt)=>{action(evt.target.value)}}>\r\n        <option value=\"\"></option>\r\n        {options.map((item)=>{\r\n            return <option value={item}>{item+1}</option>\r\n        })}\r\n    </select>\r\n}\r\n\r\nexport default DisplayOrderChooser;","import {useState} from \"react\";\r\nimport {saveChecklistTarget} from \"../../containers/cbChecklist/checkListMethods\";\r\nimport store from \"../../store\";\r\nimport DisplayOrderChooser from \"./DisplayOrderChooser\";\r\n\r\n\r\n\r\nconst TargetForm = () => {\r\n    let newTarget = store.getState().siteModelChecklist.newTarget ? store.getState().siteModelChecklist.newTarget : {};\r\n    let [checkItem,setCheckItem] = useState(newTarget);\r\n    let saveButton = checkItem?.isDirty ? <button className={\"btn btn-sm btn-secondary\"} onClick={()=>{setCheckItem(Object.assign({},checkItem,{\"isDirty\":false})); saveChecklistTarget(checkItem)}}>Save</button> : null;\r\n\r\n    return (\r\n        <div>\r\n            <div>{checkItem.displayOrder}</div>\r\n            <div>\r\n                Label: <input type={\"text\"} value={checkItem.testpackage} className=\"form-control\"\r\n                       onChange={(evt)=>setCheckItem(Object.assign({},checkItem,{\"testpackage\":evt.currentTarget.value,isDirty:true}))}/>\r\n            </div>\r\n            <div>\r\n                Description: <textarea type={\"text\"} value={checkItem.description} className=\"form-control\"\r\n                       onChange={(evt)=>setCheckItem(Object.assign({},checkItem,{\"description\":evt.currentTarget.value,isDirty:true}))}/>\r\n            </div>\r\n            <div>\r\n            <div>Active: <input type={\"checkbox\"} checked={checkItem.active} onChange={(evt)=>setCheckItem(Object.assign({},checkItem,{\"active\":evt.currentTarget.checked ? 1 : 0,isDirty:true}))} /> </div>\r\n            </div>\r\n            <div>\r\n                Display Order:<input type=\"text\" value={checkItem.displayorder} onChange={(newVal)=>{setCheckItem(Object.assign({\"displayorder\":newVal.currentTarget.value},checkItem,{\"isDirty\":true}))}} />\r\n            </div>\r\n               \r\n            <div>{saveButton}</div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TargetForm;","import {\r\n    doObtainChecklistDetails,\r\n    doObtainChecklists,\r\n    doObtainGoals,\r\n    doObtainResults,\r\n    doObtainTargets, doSaveChecklistGoal, doSaveChecklistTarget, doUpdateChecklist, doUpdateResult\r\n} from \"../../services/cbChecklist/ApiServices\";\r\nimport store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\nimport {lowerCaseKeys} from \"../../utilities/utilityFunctions\";\r\nlet findNum=0;\r\n\r\nexport const checkWindow = () => {\r\n    let checker = setInterval(()=>{\r\n        if(window.SITEMODEL?.exists() || findNum===3){\r\n            store.dispatch(updateSiteModelChecklist({windowSetup:true}));\r\n            clearInterval(checker);\r\n        }\r\n        findNum++;\r\n    },3000);\r\n}\r\n\r\nexport const updateCheckList = (item) => {\r\n    doUpdateChecklist(item, processObtainChecklists, failUpdateChecklist);\r\n}\r\n\r\n/*const processUpdateChecklist = (evt)=>{\r\n    console.dir(evt);\r\n}*/\r\n\r\nconst failUpdateChecklist = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nexport const saveChecklistTarget = (item) => {\r\n    console.dir(item);\r\n    delete item.numOptions;\r\n    doSaveChecklistTarget(item, processObtainTargets, failSaveChecklistTarget);\r\n}\r\n\r\n/*const processSaveChecklistTarget = (evt)=>{\r\n    console.dir(evt);\r\n}*/\r\n\r\nconst failSaveChecklistTarget = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nexport const makeCheckListInactive = (id) => {\r\n    console.dir(\"Making inactive\");\r\n}\r\n\r\nexport const obtainChecklists = () =>{\r\n    doObtainChecklists(processObtainChecklists, failObtainChecklists)\r\n}\r\n\r\nconst processObtainChecklists = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({allChecklists:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainChecklists = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainChecklistDetails = ( id ) =>{\r\n    doObtainChecklistDetails(id, processObtainChecklistDetails, failObtainChecklistDetails)\r\n}\r\n\r\nconst processObtainChecklistDetails = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklist:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainChecklistDetails = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainTargets = (id) =>{\r\n    doObtainTargets(id, processObtainTargets, failObtainTargets)\r\n}\r\n\r\nconst processObtainTargets = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistTargets:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainTargets = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainGoals = (id) =>{\r\n    doObtainGoals(id, processObtainGoals, failObtainGoals)\r\n}\r\n\r\nconst processObtainGoals = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistGoals:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainGoals = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainResults = (id) =>{\r\n    doObtainResults(id, processObtainResults, failObtainResults)\r\n}\r\n\r\nconst processObtainResults = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistResults:createResultDictionary(lowerCaseKeys(evt.data.data))}))\r\n}\r\n\r\nconst createResultDictionary = (data) => {\r\n    let returnMe = {};\r\n    data.forEach((item)=>{\r\n        returnMe[item.targetid] = returnMe.hasOwnProperty(item.targetid) ? returnMe[item.targetid] : {};\r\n        returnMe[item.targetid][item.goalid] = item.result;\r\n    })\r\n\r\n    return returnMe;\r\n}\r\n\r\nconst failObtainResults = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const updateResult = (checklistuuid, target,goal,result) =>{\r\n    doUpdateResult(checklistuuid, target,goal,result, (evt)=>processUpdateResult(checklistuuid,evt), failUpdateResult)\r\n}\r\n\r\nconst processUpdateResult = (checklistuuid,evt) => {\r\n    obtainResults(checklistuuid)\r\n}\r\n\r\nconst failUpdateResult = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\n\r\nexport const saveChecklistGoal = (item) =>{\r\n    doSaveChecklistGoal(item, processObtainGoals, failSaveChecklistGoal)\r\n}\r\n\r\n\r\nconst failSaveChecklistGoal = (evt) => {\r\n    console.dir(evt);\r\n}","import axios from \"axios\";\r\nimport {apiURL} from \"../../utilities/utilityFunctions\";\r\n\r\nexport const doObtainChecklists = ( callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/\").then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainChecklistDetails = ( id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainTargets = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/targets/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainGoals = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/goals/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainResults = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/results/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doUpdateResult = (checklistuuid, target,goal,result, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/results/\" + checklistuuid,{goal:goal,target:target,result:result}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doSaveChecklistTarget = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/targets\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doUpdateChecklist = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doSaveChecklistGoal = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/goals\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\n"],"names":["updateSiteModelChecklist","status","type","payload","_ref","length","val","action","options","Array","apply","map","x","i","_jsxs","value","onChange","evt","target","children","_jsx","item","newTarget","store","getState","siteModelChecklist","_useState","useState","_useState2","_slicedToArray","checkItem","setCheckItem","saveButton","isDirty","className","onClick","Object","assign","saveChecklistTarget","displayOrder","testpackage","currentTarget","description","checked","active","displayorder","newVal","findNum","checkWindow","checker","setInterval","_window$SITEMODEL","window","SITEMODEL","exists","dispatch","windowSetup","clearInterval","updateCheckList","doUpdateChecklist","processObtainChecklists","failUpdateChecklist","console","dir","numOptions","doSaveChecklistTarget","processObtainTargets","failSaveChecklistTarget","makeCheckListInactive","id","obtainChecklists","doObtainChecklists","failObtainChecklists","allChecklists","lowerCaseKeys","data","obtainChecklistDetails","doObtainChecklistDetails","processObtainChecklistDetails","failObtainChecklistDetails","currentChecklist","obtainTargets","doObtainTargets","failObtainTargets","currentChecklistTargets","obtainGoals","doObtainGoals","processObtainGoals","failObtainGoals","currentChecklistGoals","obtainResults","doObtainResults","processObtainResults","failObtainResults","currentChecklistResults","createResultDictionary","returnMe","forEach","targetid","hasOwnProperty","goalid","result","updateResult","checklistuuid","goal","doUpdateResult","processUpdateResult","failUpdateResult","saveChecklistGoal","doSaveChecklistGoal","failSaveChecklistGoal","callBack","Fail","axios","apiURL","then","catch"],"sourceRoot":""}