{"version":3,"file":"static/js/8609.a2f5c3c7.chunk.js","mappings":"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","sources":["actions/cbChecklist_Actions.js","components/cbChecklist/MakeChecklistInactive.js","containers/cbChecklist/checkListMethods.js","services/cbChecklist/ApiServices.js"],"sourcesContent":["export const updateSiteModelChecklist = (status) =>{\r\n    return {\r\n        type:\"UPDATE_SITE_MODEL_CHECKLIST\",\r\n        payload:status\r\n    }\r\n};\r\n","import {makeCheckListInactive, updateCheckList} from \"../../containers/cbChecklist/checkListMethods\";\r\n\r\nconst MakeCheckListInactive = ({id}) => {\r\n    return <button onClick={()=>updateCheckList({id:id,active:0})} className={\"btn btn-danger\"}>Inactive</button>\r\n}\r\n\r\nexport default MakeCheckListInactive;","import {\r\n    doObtainChecklistDetails,\r\n    doObtainChecklists,\r\n    doObtainGoals,\r\n    doObtainResults,\r\n    doObtainTargets, doSaveChecklistGoal, doSaveChecklistItem, doSaveChecklistTarget, doUpdateChecklist, doUpdateResult\r\n} from \"../../services/cbChecklist/ApiServices\";\r\nimport store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\nimport {lowerCaseKeys} from \"../../utilities/utilityFunctions\";\r\nlet findNum=0;\r\n\r\nexport const checkWindow = () => {\r\n    let exists = false;\r\n    let checker = setInterval(()=>{\r\n        if(window.SITEMODEL?.exists() || findNum===3){\r\n            store.dispatch(updateSiteModelChecklist({windowSetup:true}));\r\n            clearInterval(checker);\r\n        }\r\n        findNum++;\r\n    },3000);\r\n}\r\n\r\nexport const updateCheckList = (item) => {\r\n    doUpdateChecklist(item, processObtainChecklists, failUpdateChecklist);\r\n}\r\n\r\nconst processUpdateChecklist = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nconst failUpdateChecklist = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nexport const saveChecklistTarget = (item) => {\r\n    doSaveChecklistTarget(item, processObtainTargets, failSaveChecklistTarget);\r\n}\r\n\r\nconst processSaveChecklistTarget = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nconst failSaveChecklistTarget = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nexport const makeCheckListInactive = (id) => {\r\n    console.dir(\"Making inactive\");\r\n}\r\n\r\nexport const obtainChecklists = () =>{\r\n    doObtainChecklists(processObtainChecklists, failObtainChecklists)\r\n}\r\n\r\nconst processObtainChecklists = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({allChecklists:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainChecklists = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainChecklistDetails = ( id ) =>{\r\n    doObtainChecklistDetails(id, processObtainChecklistDetails, failObtainChecklistDetails)\r\n}\r\n\r\nconst processObtainChecklistDetails = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklist:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainChecklistDetails = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainTargets = (id) =>{\r\n    doObtainTargets(id, processObtainTargets, failObtainTargets)\r\n}\r\n\r\nconst processObtainTargets = (evt) => {\r\n    console.dir(\"Processing target return\")\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistTargets:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainTargets = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainGoals = (id) =>{\r\n    doObtainGoals(id, processObtainGoals, failObtainGoals)\r\n}\r\n\r\nconst processObtainGoals = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistGoals:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainGoals = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainResults = (id) =>{\r\n    doObtainResults(id, processObtainResults, failObtainResults)\r\n}\r\n\r\nconst processObtainResults = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistResults:createResultDictionary(lowerCaseKeys(evt.data.data))}))\r\n}\r\n\r\nconst createResultDictionary = (data) => {\r\n    let returnMe = {};\r\n    data.forEach((item)=>{\r\n        returnMe[item.testpackage] = returnMe.hasOwnProperty(item.testpackage) ? returnMe[item.testpackage] : {};\r\n        returnMe[item.testpackage][item.goaluuid] = item.result;\r\n    })\r\n\r\n    return returnMe;\r\n}\r\n\r\nconst failObtainResults = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const updateResult = (checklistuuid, target,goal,result) =>{\r\n    doUpdateResult(checklistuuid, target,goal,result, (evt)=>processUpdateResult(checklistuuid,evt), failUpdateResult)\r\n}\r\n\r\nconst processUpdateResult = (checklistuuid,evt) => {\r\n    obtainResults(checklistuuid)\r\n}\r\n\r\nconst failUpdateResult = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\n\r\nexport const saveChecklistGoal = (item) =>{\r\n    doSaveChecklistGoal(item, processObtainGoals, failSaveChecklistGoal)\r\n}\r\n\r\n\r\nconst failSaveChecklistGoal = (evt) => {\r\n    console.dir(evt);\r\n}","import axios from \"axios\";\r\nimport {apiURL} from \"../../utilities/utilityFunctions\";\r\n\r\nexport const doObtainChecklists = ( callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/\").then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainChecklistDetails = ( id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainTargets = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/targets/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainGoals = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/goals/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainResults = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/results/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doUpdateResult = (checklistuuid, target,goal,result, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/results/\" + checklistuuid,{goal:goal,target:target,result:result}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doSaveChecklistTarget = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/targets\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doUpdateChecklist = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doSaveChecklistGoal = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/goals\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\n"],"names":["updateSiteModelChecklist","status","type","payload","_ref","id","_jsx","onClick","updateCheckList","active","className","children","findNum","checkWindow","checker","setInterval","_window$SITEMODEL","window","SITEMODEL","exists","store","dispatch","windowSetup","clearInterval","item","doUpdateChecklist","processObtainChecklists","failUpdateChecklist","evt","console","dir","saveChecklistTarget","doSaveChecklistTarget","processObtainTargets","failSaveChecklistTarget","makeCheckListInactive","obtainChecklists","doObtainChecklists","failObtainChecklists","allChecklists","lowerCaseKeys","data","obtainChecklistDetails","doObtainChecklistDetails","processObtainChecklistDetails","failObtainChecklistDetails","currentChecklist","obtainTargets","doObtainTargets","failObtainTargets","currentChecklistTargets","obtainGoals","doObtainGoals","processObtainGoals","failObtainGoals","currentChecklistGoals","obtainResults","doObtainResults","processObtainResults","failObtainResults","currentChecklistResults","createResultDictionary","returnMe","forEach","testpackage","hasOwnProperty","goaluuid","result","updateResult","checklistuuid","target","goal","doUpdateResult","processUpdateResult","failUpdateResult","saveChecklistGoal","doSaveChecklistGoal","failSaveChecklistGoal","callBack","Fail","axios","apiURL","then","catch"],"sourceRoot":""}