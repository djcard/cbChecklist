{"version":3,"file":"static/js/8681.80bee0b5.chunk.js","mappings":"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","sources":["actions/uiActions.js","reducers/tests/FoundationReducersTest.js"],"sourcesContent":["\r\n//Control Blocks\r\nexport const addToControlBlock = (status) =>{\r\n    return {\r\n        type:\"ADD_TO_CONTROL_BLOCK\",\r\n        payload:status\r\n    }\r\n};\r\n\r\nexport const removeFromControlBlock = (status) =>{\r\n    return {\r\n        type:\"REMOVE_FROM_CONTROL_BLOCK\",\r\n        payload:status\r\n    }\r\n};\r\n\r\n//Tabs\r\nexport const addTabGroup = (tabGroupData)=>{\r\n    return {\r\n        type:\"ADD_TAB_GROUP\",\r\n        payload:tabGroupData\r\n    }\r\n};\r\n\r\nexport const removeTabGroup = (tabGroupName)=>{\r\n    return {\r\n        type:\"REMOVE_TAB_GROUP\",\r\n        payload:tabGroupName\r\n    }\r\n};\r\n\r\nexport const addTabToGroup = (tabData) => {\r\n    return {\r\n        type:\"ADD_TAB_TO_GROUP\",\r\n        payload:tabData\r\n    }\r\n};\r\n\r\nexport const removeTabFromGroup = (groupName,keyName) => {\r\n    return {\r\n        type:\"REMOVE_TAB_FROM_GROUP\",\r\n        payload: {groupName:groupName,keyName:keyName}\r\n    }\r\n};\r\n\r\nexport const toggleTab = (groupName,key) => {\r\n    return {\r\n        type:\"TOGGLE_TAB\",\r\n        payload:{groupName:groupName,key:key}\r\n    }\r\n};\r\n\r\nexport const addTabPanelGroup = (groupName) =>{\r\n    return {\r\n        type:\"ADD_TAB_PANEL_GROUP\",\r\n        payload:groupName\r\n    }\r\n}\r\n\r\nexport const addControlSet = (controls) => {\r\n    return {\r\n        type:\"ADD_CONTROLS\",\r\n        payload:controls\r\n    }\r\n};","import React,{useEffect} from 'react';\r\nimport store from 'src/store';\r\nimport {updateTesting} from \"src/actions/testingActions\";\r\n\r\nimport {\r\n    addControlSet,\r\n    addTabGroup,\r\n    addTabToGroup, removeTabGroup, toggleTab,\r\n    removeTabFromGroup\r\n} from \"src/actions/uiActions\";\r\nimport {\r\n    updateDataStore, updateAppSettings\r\n} from \"src/actions/foundationActions\";\r\nimport {createTabGroupObject, createTabModel} from \"../../datamodels/foundation\";\r\nimport * as allActions from \"src/actions/foundationActions\";\r\n\r\nconst user = {\r\n    \"blarg\":\"dfgdfgfggf\"\r\n}\r\n\r\nconst fakeGroup=\"dfgdfghgfh\";\r\nconst fakeKey=\"dfhsfghdf\";\r\nconst fakeLabel=\"juvjvjvgj\";\r\nconst fakeKey2=\"dfhsfghdffhgfshdgfhdgf\";\r\nconst fakeLabel2=\"juvjvjvgjgfhdgfhdgfhdgfh\";\r\n\r\nconst FoundationReducersTest = () => {\r\n    useEffect(()=>{\r\n        store.dispatch(updateTesting({\r\n            user:user,\r\n            fakeGroup:fakeGroup,\r\n            fakeKey:fakeKey,\r\n            numTest:Object.keys(allActions).length\r\n        }))\r\n        store.dispatch(updateAppSettings(user));\r\n        store.dispatch(addControlSet(user));\r\n        store.dispatch(updateDataStore(user));\r\n        store.dispatch(addTabGroup(createTabGroupObject(fakeGroup)));\r\n        store.dispatch(addTabToGroup(createTabModel(fakeLabel,fakeGroup,fakeKey,true,true)));\r\n        store.dispatch(addTabToGroup(createTabModel(fakeLabel2,fakeGroup,fakeKey2,true,false)));\r\n        store.dispatch(toggleTab(fakeGroup,fakeKey));\r\n    },[])\r\n\r\n    let datstore=store.getState().datastore;\r\n    useEffect(()=>{\r\n        store.dispatch(updateTesting({dataStoreTest:store.getState().dataStore.blarg===user.blarg}));\r\n    },[datstore])\r\n    let medstore=store.getState().dataStore.mediaControls;\r\n    useEffect(()=>{\r\n        store.dispatch(updateTesting({mediaTest:store.getState().dataStore.mediaControls.blarg===user.blarg}));\r\n    },[medstore])\r\n\r\n    return (\r\n        <div id=\"foundredtest\">\r\n            <div>\r\n                <button onClick={()=>store.dispatch(removeTabGroup(fakeGroup))} id=\"removeTabGroup\">remove Tab Group</button>\r\n                <button onClick={()=>store.dispatch(removeTabFromGroup(fakeGroup,fakeKey))} id=\"removeTabFromGroup\">Remove Tab From Group</button>\r\n                <button onClick={()=>store.dispatch(toggleTab(fakeGroup,fakeKey2))} id=\"toggle\">Toggle</button>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n//<button onClick={()=>store.dispatch(logoutUser())} id=\"logoutuser\">Logout user</button>\r\n\r\nexport default FoundationReducersTest;\r\n"],"names":["addToControlBlock","status","type","payload","removeFromControlBlock","addTabGroup","tabGroupData","removeTabGroup","tabGroupName","addTabToGroup","tabData","removeTabFromGroup","groupName","keyName","toggleTab","key","addTabPanelGroup","addControlSet","controls","user","fakeGroup","fakeKey","fakeKey2","useEffect","store","dispatch","updateTesting","numTest","Object","keys","allActions","length","updateAppSettings","updateDataStore","createTabGroupObject","createTabModel","datstore","getState","datastore","dataStoreTest","dataStore","blarg","medstore","mediaControls","mediaTest","_jsx","id","children","_jsxs","onClick"],"sourceRoot":""}