{"version":3,"file":"static/js/8682.e3632129.chunk.js","mappings":"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","sources":["actions/cbChecklist_Actions.js","actions/uiActions.js","components/cbChecklist/Manage.js","components/cbChecklist/NewChecklistButton.js","components/supporting/Tab.js","components/supporting/TabBlock.js"],"sourcesContent":["export const updateSiteModelChecklist = (status) =>{\r\n    return {\r\n        type:\"UPDATE_SITE_MODEL_CHECKLIST\",\r\n        payload:status\r\n    }\r\n};\r\n","\r\n//Control Blocks\r\nexport const addToControlBlock = (status) =>{\r\n    return {\r\n        type:\"ADD_TO_CONTROL_BLOCK\",\r\n        payload:status\r\n    }\r\n};\r\n\r\nexport const removeFromControlBlock = (status) =>{\r\n    return {\r\n        type:\"REMOVE_FROM_CONTROL_BLOCK\",\r\n        payload:status\r\n    }\r\n};\r\n\r\n//Tabs\r\nexport const addTabGroup = (tabGroupData)=>{\r\n    return {\r\n        type:\"ADD_TAB_GROUP\",\r\n        payload:tabGroupData\r\n    }\r\n};\r\n\r\nexport const removeTabGroup = (tabGroupName)=>{\r\n    return {\r\n        type:\"REMOVE_TAB_GROUP\",\r\n        payload:tabGroupName\r\n    }\r\n};\r\n\r\nexport const addTabToGroup = (tabData) => {\r\n    return {\r\n        type:\"ADD_TAB_TO_GROUP\",\r\n        payload:tabData\r\n    }\r\n};\r\n\r\nexport const removeTabFromGroup = (groupName,keyName) => {\r\n    return {\r\n        type:\"REMOVE_TAB_FROM_GROUP\",\r\n        payload: {groupName:groupName,keyName:keyName}\r\n    }\r\n};\r\n\r\nexport const toggleTab = (groupName,key) => {\r\n    return {\r\n        type:\"TOGGLE_TAB\",\r\n        payload:{groupName:groupName,key:key}\r\n    }\r\n};\r\n\r\nexport const addTabPanelGroup = (groupName) =>{\r\n    return {\r\n        type:\"ADD_TAB_PANEL_GROUP\",\r\n        payload:groupName\r\n    }\r\n}\r\n\r\nexport const addControlSet = (controls) => {\r\n    return {\r\n        type:\"ADD_CONTROLS\",\r\n        payload:controls\r\n    }\r\n};","import {connect} from \"react-redux\";\r\nimport TabBlock from \"../supporting/TabBlock\";\r\n\r\nimport {renderPanels} from \"../../containers/foundation/foundationFunctions\";\r\nimport NewChecklistButton from \"./NewChecklistButton\";\r\nimport store from \"../../store\";\r\n\r\n\r\n\r\nconst Manage = () => {\r\n    let panelDetails = store.getState().tabStore?.manageTabs;\r\n    let panelData = panelDetails?.length ? renderPanels(panelDetails) : null;\r\n\r\n\r\n    return <div>\r\n        <div className={\"row\"}>\r\n            <div className={\"col-6\"}><h3>Manage</h3></div>\r\n            <div className={\"col-6\"} style={{textAlign:\"right\"}}><NewChecklistButton /></div>\r\n        </div>\r\n\r\n        <TabBlock tabGroup=\"manageTabs\"/>\r\n        {renderPanels(panelDetails)}\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        siteModelChecklist:state.siteModelChecklist,\r\n        dataStore:state.dataStore,\r\n        tabStore:state.tabStore\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(Manage);","import store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\n\r\nconst addChecklist = () => {\r\n  let allChecklists = store.getState().siteModelChecklist?.allChecklists ? store.getState().siteModelChecklist.allChecklists : [];\r\n  allChecklists.push(({active:1,name:\"\",description:\"\"}));\r\n        store.dispatch(updateSiteModelChecklist({allChecklists:allChecklists}));\r\n};\r\n\r\nconst NewChecklistButton = () => {\r\n    return <button onClick={()=>addChecklist()}>New Checklist</button>\r\n}\r\n\r\nexport default NewChecklistButton;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {toggleTab} from \"src/actions/uiActions\";\r\nimport store from 'src/store';\r\n\r\nconst Tab = (props) => {\r\n    let stateData = store.getState();\r\n    let tabGroupData=(stateData?.tabGroups.hasOwnProperty(props.groupName) ? stateData.tabGroups[props.groupName] : {});\r\n    let groupClass = props.isActiveTab ? tabGroupData.groupTabActiveClassName  : tabGroupData.groupTabClassName\r\n    let propsClassName = props.tabClass ? props.tabClass : \"\";\r\n    let activeClass = props.isActiveTab ? \"active\" : \"\";\r\n\r\n    return (\r\n            <li className={\"nav-item kimTab \" + groupClass + \" \" + propsClassName} style={Object.assign({},tabGroupData.groupTabStyle,props.tabStyle)}\r\n                 onClick={()=>{store.dispatch(toggleTab(props.groupName,props.tabKey))}}>\r\n                    <a className={\"nav-link kimTabLabel \" + activeClass}>{props.label}</a>\r\n            </li>\r\n        )\r\n};\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        tabGroups:state.tabGroups\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(Tab);\r\n","import React,{useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Tab from './Tab'\r\nimport store from 'src/store';\r\n\r\nconst renderTabs = (tabGroup) => {\r\n    let stateData =store.getState();\r\n    return (\r\n        stateData.tabStore.hasOwnProperty(tabGroup) ? stateData.tabStore[tabGroup].map((item)=>{\r\n            return <Tab label={item.label}\r\n                        groupName={item.groupName}\r\n                        key={item.key}\r\n                        tabVisible={item.tabVisible}\r\n                        tabClass={item.tabClass}\r\n                        tabStyle={item.tabStyle}\r\n                        tabKey={item.key}\r\n                        isActiveTab = {item.isActiveTab}\r\n            />\r\n        }) : null\r\n    )\r\n};\r\n\r\nconst style={};\r\n//\r\nconst TabBlock = (props) => {\r\n    useEffect(()=>{\r\n        let hldrs = document.getElementsByClassName(\"tabContentHldr\");\r\n        for(var i=0;i<hldrs.length;i++){\r\n            hldrs.item(i).style.borderTopLeftRadius = 0;\r\n            hldrs.item(i).style.borderTopRightRadius = 0;\r\n        }\r\n    })\r\n    return (\r\n        <nav className=\"nav nav-tabs tabBlock\" style={Object.assign({},style,{minWidth:props.minWidth ? props.minWidth : 125})}>\r\n            {renderTabs(props.tabGroup)}\r\n        </nav>);\r\n};\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        tabStore:state.tabStore\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(TabBlock);\r\n"],"names":["updateSiteModelChecklist","status","type","payload","addToControlBlock","removeFromControlBlock","addTabGroup","tabGroupData","removeTabGroup","tabGroupName","addTabToGroup","tabData","removeTabFromGroup","groupName","keyName","toggleTab","key","addTabPanelGroup","addControlSet","controls","connect","state","siteModelChecklist","dataStore","tabStore","_store$getState$tabSt","panelDetails","store","getState","manageTabs","length","renderPanels","_jsxs","children","className","_jsx","style","textAlign","NewChecklistButton","TabBlock","tabGroup","onClick","_store$getState$siteM","allChecklists","push","active","name","description","dispatch","addChecklist","tabGroups","props","stateData","hasOwnProperty","groupClass","isActiveTab","groupTabActiveClassName","groupTabClassName","propsClassName","tabClass","activeClass","Object","assign","groupTabStyle","tabStyle","tabKey","label","renderTabs","map","item","Tab","tabVisible","useEffect","hldrs","document","getElementsByClassName","i","borderTopLeftRadius","borderTopRightRadius","minWidth"],"sourceRoot":""}