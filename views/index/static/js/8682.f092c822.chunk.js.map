{"version":3,"file":"static/js/8682.f092c822.chunk.js","mappings":"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","sources":["actions/cbChecklist_Actions.js","actions/uiActions.js","components/cbChecklist/Checkbox.js","components/cbChecklist/ChecklistMonitor.js","components/cbChecklist/Choose.js","components/cbChecklist/ChooseRow.js","components/cbChecklist/CreateEditChildButton.js","components/cbChecklist/Details.js","components/cbChecklist/EditGoalRow.js","components/cbChecklist/EditTargetRow.js","components/cbChecklist/ExecuteChecklist.js","components/cbChecklist/Goals.js","components/cbChecklist/MakeChecklistInactive.js","components/cbChecklist/Manage.js","components/cbChecklist/NewChecklistButton.js","components/cbChecklist/OpenChecklist.js","components/cbChecklist/ReloadButton.js","components/cbChecklist/TargetRow.js","components/cbChecklist/Targets.js","components/icons/ArrowsRepeat.js","components/supporting/Tab.js","components/supporting/TabBlock.js","containers/cbChecklist/checkListMethods.js","services/cbChecklist/ApiServices.js"],"sourcesContent":["export const updateSiteModelChecklist = (status) =>{\r\n    return {\r\n        type:\"UPDATE_SITE_MODEL_CHECKLIST\",\r\n        payload:status\r\n    }\r\n};\r\n","\r\n//Control Blocks\r\nexport const addToControlBlock = (status) =>{\r\n    return {\r\n        type:\"ADD_TO_CONTROL_BLOCK\",\r\n        payload:status\r\n    }\r\n};\r\n\r\nexport const removeFromControlBlock = (status) =>{\r\n    return {\r\n        type:\"REMOVE_FROM_CONTROL_BLOCK\",\r\n        payload:status\r\n    }\r\n};\r\n\r\n//Tabs\r\nexport const addTabGroup = (tabGroupData)=>{\r\n    return {\r\n        type:\"ADD_TAB_GROUP\",\r\n        payload:tabGroupData\r\n    }\r\n};\r\n\r\nexport const removeTabGroup = (tabGroupName)=>{\r\n    return {\r\n        type:\"REMOVE_TAB_GROUP\",\r\n        payload:tabGroupName\r\n    }\r\n};\r\n\r\nexport const addTabToGroup = (tabData) => {\r\n    return {\r\n        type:\"ADD_TAB_TO_GROUP\",\r\n        payload:tabData\r\n    }\r\n};\r\n\r\nexport const removeTabFromGroup = (groupName,keyName) => {\r\n    return {\r\n        type:\"REMOVE_TAB_FROM_GROUP\",\r\n        payload: {groupName:groupName,keyName:keyName}\r\n    }\r\n};\r\n\r\nexport const toggleTab = (groupName,key) => {\r\n    return {\r\n        type:\"TOGGLE_TAB\",\r\n        payload:{groupName:groupName,key:key}\r\n    }\r\n};\r\n\r\nexport const addTabPanelGroup = (groupName) =>{\r\n    return {\r\n        type:\"ADD_TAB_PANEL_GROUP\",\r\n        payload:groupName\r\n    }\r\n}\r\n\r\nexport const addControlSet = (controls) => {\r\n    return {\r\n        type:\"ADD_CONTROLS\",\r\n        payload:controls\r\n    }\r\n};","import {updateResult} from \"../../containers/cbChecklist/checkListMethods\";\r\n\r\nconst setValue = (checklistuuid,target,goal,result) => {\r\n    updateResult(checklistuuid,target,goal,result ? 1 : 0);\r\n}\r\n\r\nconst Checkbox = ({checklistuuid,goal,target,result}) => {\r\n    return <input type=\"checkbox\" checked={result} onChange={(evt)=>setValue(checklistuuid,target,goal,evt.currentTarget.checked)} />\r\n}\r\n\r\nexport default Checkbox;","import {connect} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {\r\n    checkWindow,\r\n    obtainChecklists,\r\n    obtainGoals,\r\n    obtainResults,\r\n    obtainTargets\r\n} from \"../../containers/cbChecklist/checkListMethods\";\r\nimport store from \"../../store\";\r\nimport {addTabGroup, addTabToGroup} from \"../../actions/uiActions\";\r\nimport {createTabGroupObject,createTabModel} from \"../../datamodels/foundation\";\r\n\r\nconst ChecklistMonitor = () => {\r\n    useEffect(()=>{\r\n        if(!window.SITEMODEL) {\r\n            checkWindow();\r\n        }\r\n        store.dispatch(addTabGroup(createTabGroupObject(\"checkTabs\", \"tabMuted\", {}, \"\", {}, \"kimTabActive\")));\r\n        store.dispatch(addTabToGroup(createTabModel(\"Choose\", \"checkTabs\", \"choose\", true, true, {}, \"\")));\r\n        store.dispatch(addTabToGroup(createTabModel(\"Manage\", \"checkTabs\", \"manage\", true, false, {}, \"\")));\r\n        store.dispatch(addTabToGroup(createTabModel(\"Execute\", \"checkTabs\", \"execute\", true, false, {}, \"\")));\r\n\r\n        store.dispatch(addTabGroup(createTabGroupObject(\"manageTabs\", \"tabMuted\", {}, \"\", {}, \"kimTabActive\")));\r\n        store.dispatch(addTabToGroup(createTabModel(\"Details\", \"manageTabs\", \"details\", true, true, {}, \"\")));\r\n        store.dispatch(addTabToGroup(createTabModel(\"Targets\", \"manageTabs\", \"targets\", true, false, {}, \"\")));\r\n        store.dispatch(addTabToGroup(createTabModel(\"Goals\", \"manageTabs\", \"goals\", true, false, {}, \"\")));\r\n\r\n    },[]);\r\n\r\n    let windowSetup = store.getState().siteModelChecklist?.windowSetup;\r\n\r\n    useEffect(()=>{\r\n        if(windowSetup) {\r\n            obtainChecklists();\r\n        }\r\n    },[windowSetup])\r\n\r\n    let checklistId = store.getState().siteModelChecklist?.currentChecklist?.id;\r\n\r\n    useEffect(()=>{\r\n        if(checklistId) {\r\n            obtainTargets(checklistId);\r\n            obtainGoals(checklistId);\r\n            obtainResults(checklistId);\r\n        }\r\n    },[checklistId])\r\n\r\n    return <div style={{display:\"none\"}}>Monitor</div>\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        siteModelChecklist:state.siteModelChecklist\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(ChecklistMonitor);","import {connect} from \"react-redux\";\r\nimport store from \"../../store\";\r\nimport ChooseRow from \"./ChooseRow\";\r\nimport NewChecklistButton from \"./NewChecklistButton\";\r\n\r\nconst Choose = () => {\r\n    let allCheckLists = store.getState().siteModelChecklist?.allChecklists ? store.getState().siteModelChecklist.allChecklists : [];\r\n    return <div>\r\n        <div className={\"row\"}>\r\n            <div className={\"col-6\"}><h3>Choose</h3></div>\r\n            <div className={\"col-6\"} style={{textAlign:\"right\"}}><NewChecklistButton /></div>\r\n        </div>\r\n        <table className={\"table table-striped table-bordered\"}>\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>Name</th>\r\n                    <th></th>\r\n                    <th> </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {allCheckLists.map((item,idx)=>{\r\n                return <ChooseRow item={item} idx={idx} />\r\n            })}\r\n            </tbody>\r\n        </table>\r\n\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        siteModelChecklist:state.siteModelChecklist,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(Choose);","import OpenChecklist from \"./OpenChecklist\";\r\nimport MakeCheckListInactive from \"./MakeChecklistInactive\";\r\n\r\nconst ChooseRow = ({item,idx}) => {\r\n    return <tr>\r\n        <td>{idx+1}</td>\r\n        <td>{item.name}</td>\r\n        <td>{item.description}</td>\r\n        <td><OpenChecklist item={item} /></td>\r\n        <td><MakeCheckListInactive id={item.id}/> </td>\r\n    </tr>\r\n}\r\n\r\nexport default ChooseRow;","import store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\n\r\nconst addChild = (checklistuuid,parentid,displayOrder) => {\r\n    let allTargets = store.getState().siteModelChecklist?.currentChecklistTargets ? store.getState().siteModelChecklist?.currentChecklistTargets : [];\r\n    allTargets.push({checklistuuid:checklistuuid,displayOrder:displayOrder,parentid:parentid,isDirty:true});\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistTargets:allTargets}));\r\n}\r\n\r\nconst CreateEditChildButton = ({checklistuuid,parentid,displayOrder}) => {\r\n    return <button onClick={()=>addChild(checklistuuid,parentid,displayOrder)}> Add Child </button>\r\n}\r\n\r\nexport default CreateEditChildButton;","import {connect} from \"react-redux\";\r\nimport store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\nimport {updateCheckList} from \"../../containers/cbChecklist/checkListMethods\";\r\n\r\n\r\nconst updateChecklist = (property, value) => {\r\n    let checklist = store.getState().siteModelChecklist?.currentChecklist ? store.getState().siteModelChecklist.currentChecklist : {};\r\n    checklist[property]=value;\r\n    store.dispatch(updateSiteModelChecklist({currentChecklist:checklist}));\r\n}\r\nconst EditChecklistDetails = () => {\r\n    let checklist = store.getState().siteModelChecklist?.currentChecklist ? store.getState().siteModelChecklist.currentChecklist : {};\r\n    return <div>\r\n        <form>\r\n            <div>\r\n                Name: <input type={\"text\"} value={checklist.name} onChange={(evt)=>updateChecklist(\"name\", evt.currentTarget.value)} /><br/>\r\n                Description: <input type={\"text\"} value={checklist.description} onChange={(evt)=>updateChecklist(\"description\", evt.currentTarget.value)} /><br/>\r\n                Active <input type={\"checkbox\"} checked={checklist.active} onChange={(evt)=>updateChecklist(\"active\", evt.currentTarget.checked)} /><br/>\r\n                <button type=\"button\" onClick={()=>updateCheckList(Object.assign({},checklist))}>Save</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n\r\n    return {\r\n        siteModelChecklist:state.siteModelChecklist,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(EditChecklistDetails);","import {useState} from \"react\";\r\nimport {saveChecklistGoal} from \"../../containers/cbChecklist/checkListMethods\";\r\n\r\nconst EditGoalRow = ({item,idx}) => {\r\n    item[\"displayorder\"]=isNaN(item.displayorder) ? idx+1 : item.displayorder;\r\n    let [goal,setGoal] = useState(item);\r\n    let bgcolor = goal.hasOwnProperty(\"isDirty\") && goal.isDirty ? \"yellow\" : \"none\";\r\n\r\n    let saveButton = goal?.isDirty ? <button className={\"btn btn-sm btn-secondary\"} onClick={()=>{setGoal(Object.assign({},goal,{\"isDirty\":false})); saveChecklistGoal(goal)}}>Save</button> : null;\r\n\r\n    return <tr style={{backgroundColor:bgcolor}}>\r\n        <td>{idx+1}</td>\r\n        <td><input type={\"text\"} value={goal.label} onChange={(evt)=>setGoal(Object.assign({},goal,{\"label\":evt.currentTarget.value,isDirty:true}))} /></td>\r\n        <td><input type={\"checkbox\"} checked={goal.active} onChange={(evt)=>setGoal(Object.assign({},goal,{\"active\":evt.currentTarget.checked,isDirty:true}))} /> </td>\r\n        <td>{saveButton} </td>\r\n    </tr>\r\n}\r\n\r\nexport default EditGoalRow;","import {useEffect, useState} from \"react\";\r\nimport {doSaveChecklistItem} from \"../../services/cbChecklist/ApiServices\";\r\nimport {saveChecklistItem, saveChecklistTarget} from \"../../containers/cbChecklist/checkListMethods\";\r\nimport CreateEditChildButton from \"./CreateEditChildButton\";\r\nimport store from \"../../store\";\r\n\r\n\r\n\r\nconst EditTargetRow = ({item,idx,indent=0}) => {\r\n    item.displayorder = item.hasOwnProperty(\"displayorder\") && isNaN(item.displayorder) ? item.displayorder : idx+1;\r\n    let [checkItem,setCheckItem] = useState(item);\r\n    let bgcolor = checkItem.hasOwnProperty(\"isDirty\") && checkItem.isDirty ? \"yellow\" : \"none\";\r\n    let saveButton = checkItem?.isDirty ? <button className={\"btn btn-sm btn-secondary\"} onClick={()=>{setCheckItem(Object.assign({},checkItem,{\"isDirty\":false})); saveChecklistTarget(checkItem)}}>Save</button> : null;\r\n    let allTargets = store.getState().siteModelChecklist?.currentChecklistTargets ? store.getState().siteModelChecklist?.currentChecklistTargets : [];\r\n    let childs = allTargets.filter((target)=>{\r\n        return target.parentid===item.id;\r\n    });\r\n    let indentTypes = [\r\n      \"left\",\r\n      \"center\",\r\n      \"right\"\r\n    ];\r\n    return (\r\n        <>\r\n        <tr style={{backgroundColor:bgcolor}}>\r\n            <td style={{textAlign:indentTypes[indent]}}>{idx+1}</td>\r\n            <td>\r\n                <input type={\"text\"} value={checkItem.testpackage}\r\n                       onChange={(evt)=>setCheckItem(Object.assign({},checkItem,{\"testpackage\":evt.currentTarget.value,isDirty:true}))}\r\n                       style={{paddingLeft:(indent*10) + \"%\", width:\"100%\"}} />\r\n            </td>\r\n            <td>{saveButton}</td>\r\n            <td><CreateEditChildButton checklistuuid={item.checklistuuid} parentid={item.id} displayOrder={childs.length+1}  /></td>\r\n        </tr>\r\n            {childs.map((child,idx)=>{\r\n                return <EditTargetRow item={child} idx={idx} key={child.parentid + child.diplayOrder} indent={indent+1} />\r\n            })}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditTargetRow;","import store from \"../../store\";\r\nimport ChecklistMonitor from \"./ChecklistMonitor\";\r\nimport TargetRow from \"./TargetRow\";\r\nimport {connect} from \"react-redux\";\r\nimport ReloadButton from \"./ReloadButton\";\r\n\r\nconst ExecuteChecklist = () => {\r\n    let currentCheckList = store.getState().siteModelChecklist?.currentChecklist;\r\n    let targets = store.getState().siteModelChecklist?.currentChecklistTargets ? store.getState().siteModelChecklist?.currentChecklistTargets : [];\r\n    let goals = store.getState().siteModelChecklist?.currentChecklistGoals ? store.getState().siteModelChecklist.currentChecklistGoals : [];\r\n    let results = store.getState().siteModelChecklist?.currentChecklistResults ? store.getState().siteModelChecklist.currentChecklistResults : [];\r\n\r\n\r\n    return <div>\r\n        <div className={\"row\"}>\r\n            <div className={\"col-9\"}>\r\n            <h2>{currentCheckList?.name}</h2>\r\n            </div>\r\n            <div className={\"col-3\"}>\r\n                <ReloadButton />\r\n            </div>\r\n            </div>\r\n        <table className={\"table table-striped table-bordered\"}>\r\n            <thead>\r\n            <tr>\r\n                <th></th>\r\n                <th>Target</th>\r\n                {goals\r\n                    .filter((item)=>{\r\n                        return item.label?.length\r\n                    })\r\n                    .map((item)=>{\r\n                    return <td>{item.label}</td>\r\n                })}\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {targets\r\n                .filter((item)=>{return item.parentid===0})\r\n                .map((item)=>{\r\n                    return <TargetRow target={item} key={item.checklistuuid + item.testpackage} goals={goals} results={results} depth={0} />\r\n                })\r\n            }\r\n            </tbody>\r\n        </table>\r\n\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        siteModelChecklist:state.siteModelChecklist\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(ExecuteChecklist);","import {connect} from \"react-redux\";\r\nimport store from \"../../store\";\r\nimport EditGoalRow from \"./EditGoalRow\";\r\nimport {saveChecklistTarget} from \"../../containers/cbChecklist/checkListMethods\";\r\n\r\nconst Goals = () => {\r\n    let allGoals = store.getState().siteModelChecklist.currentChecklistGoals ? store.getState().siteModelChecklist.currentChecklistGoals : [];\r\n    let currentChecklist = store.getState().siteModelChecklist?.currentChecklist;\r\n    allGoals.push({checklistuuid:currentChecklist.id,active:1});\r\n\r\n\r\n\r\n    return <div>\r\n        <h4>Goals</h4>\r\n        <table className={\"table table-bordered\"}>\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>Goal</th>\r\n                    <th>Active</th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {allGoals.map((item,idx)=>{\r\n                return <EditGoalRow item={item} idx={idx} />\r\n            })}\r\n            </tbody>\r\n        </table>\r\n\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        siteModelChecklist:state.siteModelChecklist,\r\n        dataStore:state.dataStore,\r\n        tabStore:state.tabStore\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(Goals);","import {makeCheckListInactive, updateCheckList} from \"../../containers/cbChecklist/checkListMethods\";\r\n\r\nconst MakeCheckListInactive = ({id}) => {\r\n    return <button onClick={()=>updateCheckList({id:id,active:0})} className={\"btn btn-danger\"}>Inactive</button>\r\n}\r\n\r\nexport default MakeCheckListInactive;","import {connect} from \"react-redux\";\r\nimport Choose from \"./Choose\";\r\nimport ExecuteChecklist from \"./ExecuteChecklist\";\r\nimport TabBlock from \"../supporting/TabBlock\";\r\nimport Details from \"./Details\";\r\nimport Targets from \"./Targets\";\r\nimport Goals from \"./Goals\";\r\nimport {renderPanels} from \"../../containers/foundation/foundationFunctions\";\r\nimport NewChecklistButton from \"./NewChecklistButton\";\r\n\r\nconst panelDetails = [\r\n    {\r\n        groupName: \"manageTabs\",\r\n        key: \"details\",\r\n        content: <Details />\r\n    },\r\n    {\r\n        groupName: \"manageTabs\",\r\n        key: \"targets\",\r\n        content: <Targets />\r\n    },\r\n    {\r\n        groupName: \"manageTabs\",\r\n        key: \"goals\",\r\n        content: <Goals />\r\n    }\r\n]\r\n\r\nconst Manage = () => {\r\n    return <div>\r\n        <div className={\"row\"}>\r\n            <div className={\"col-6\"}><h3>Manage</h3></div>\r\n            <div className={\"col-6\"} style={{textAlign:\"right\"}}><NewChecklistButton /></div>\r\n        </div>\r\n\r\n        <TabBlock tabGroup=\"manageTabs\"/>\r\n        {renderPanels(panelDetails)}\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        siteModelChecklist:state.siteModelChecklist,\r\n        dataStore:state.dataStore,\r\n        tabStore:state.tabStore\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(Manage);","import store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\n\r\nconst addChecklist = () => {\r\n  let allChecklists = store.getState().siteModelChecklist?.allChecklists ? store.getState().siteModelChecklist.allChecklists : [];\r\n  allChecklists.push(({active:1,name:\"\",description:\"\"}));\r\n        store.dispatch(updateSiteModelChecklist({allChecklists:allChecklists}));\r\n};\r\n\r\nconst NewChecklistButton = () => {\r\n    return <button onClick={()=>addChecklist()}>New Checklist</button>\r\n}\r\n\r\nexport default NewChecklistButton;","import store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\n\r\nconst OpenChecklist = ({item}) => {\r\n    return <button onClick={()=>store.dispatch(updateSiteModelChecklist({currentChecklist:Object.assign({},item)}))} className={\"btn btn-info\"}>Open</button>\r\n}\r\n\r\nexport default OpenChecklist;","import ArrowsRepeat from \"../icons/ArrowsRepeat\";\r\nimport {obtainGoals, obtainResults, obtainTargets} from \"../../containers/cbChecklist/checkListMethods\";\r\nimport store from \"../../store\";\r\n\r\nconst reload = () => {\r\n    let checklistId = store.getState().siteModelChecklist?.currentChecklist.id;\r\n    obtainTargets(checklistId);\r\n    obtainGoals(checklistId);\r\n    obtainResults(checklistId);\r\n}\r\n\r\nconst ReloadButton = (props) => {\r\n    let classes = props.classes ? props.classes : \"btn btn-info\";\r\n    return <button onClick={()=>reload()} className={classes}><ArrowsRepeat /></button>\r\n}\r\n\r\nexport default ReloadButton;","import Checkbox from \"./Checkbox\";\r\nimport store from \"../../store\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nconst TargetRow = ({target,goals,results,depth}) => {\r\n    let [showChildren,setShowChildren] = useState(false);\r\n    let allTargets = store.getState().siteModelChecklist?.currentChecklistTargets ? store.getState().siteModelChecklist.currentChecklistTargets : [];\r\n    let childs = allTargets.filter((item)=>{\r\n        return item.parentid===target.id;\r\n    })\r\n    let indentAmount = 10*depth;\r\n\r\n    let showAllChildren = store.getState().siteModelChecklist.showAllChildren ? store.getState().siteModelChecklist.showAllChildren : false;\r\n\r\n    useEffect(()=>{\r\n       setShowChildren(showAllChildren);\r\n    },[showAllChildren])\r\n\r\n    return <><tr>\r\n        <td onClick={()=>setShowChildren(!showChildren)}>{childs.length ? showChildren ? \"-\" : \"+\" : null }</td>\r\n        <td style={{paddingLeft:indentAmount + \"%\"}}>{target?.testpackage}</td>\r\n        {goals\r\n            .filter((item)=>{\r\n                return item.label.length\r\n            })\r\n            .map((item)=>{\r\n            let displayValue = results[target?.id] && results[target?.id][item?.id] ? results[target?.id][item?.id] : 0;\r\n            return <td><Checkbox checklistuuid={target.checklistuuid} goal={item.id} target={target.id} result={displayValue} key={item.id + target.testpackage}/></td>\r\n        })}\r\n    </tr>\r\n\r\n    {childs.length && showChildren ? childs.map((item)=>{\r\n        return <TargetRow target={item} key={item.checklistuuid + item.testpackage} goals={goals} results={results} depth={depth+1} />\r\n    }) : null}\r\n        </>\r\n}\r\n\r\nexport default TargetRow;","import {connect} from \"react-redux\";\r\nimport store from \"../../store\";\r\nimport EditTargetRow from \"./EditTargetRow\";\r\n\r\nconst Targets = () => {\r\n    let targets = store.getState().siteModelChecklist?.currentChecklistTargets ? store.getState().siteModelChecklist?.currentChecklistTargets : [];\r\n    let currentChecklist = store.getState().siteModelChecklist?.currentChecklist;\r\n    targets.push({checklistuuid:currentChecklist.id,parentid:0,active:1});\r\n    return currentChecklist?.id ? <div>\r\n        <table className={\"table table-bordered\"}>\r\n            <thead>\r\n                <th></th>\r\n                <th>Name</th>\r\n                <th></th>\r\n            </thead>\r\n            <tbody>\r\n            {targets.filter((item)=>{\r\n               return item.parentid===0\r\n            }).map((item,idx)=>{\r\n                return <EditTargetRow item={item} idx={idx} key={item.checklistuuid + item.id} />\r\n            }) }\r\n\r\n            </tbody>\r\n        </table>\r\n    </div> : <div> Please Choose a checklist to view.</div>\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        siteModelChecklist:state.siteModelChecklist,\r\n        dataStore:state.dataStore,\r\n        tabStore:state.tabStore\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(Targets);","import React from 'react';\r\nconst ArrowsRepeat = (props) => {\r\n    let left = props.left ? props.left : 0;\r\n    let top = props.top ? props.top : 0;\r\n    let size = props.size ? props.size : 16;\r\n    let color = props.color ? props.color : 'currentColor'; // style={{transform:`translate(${left} ${top})`}}\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} fill={color} style={{transform:\"translate(\"+left+\"px, \"+top+\"px)\"}} className=\"bi bi-arrow-repeat\" viewBox=\"0 0 16 16\">\r\n          <path d=\"M11.534 7h3.932a.25.25 0 0 1 .192.41l-1.966 2.36a.25.25 0 0 1-.384 0l-1.966-2.36a.25.25 0 0 1 .192-.41zm-11 2h3.932a.25.25 0 0 0 .192-.41L2.692 6.23a.25.25 0 0 0-.384 0L.342 8.59A.25.25 0 0 0 .534 9z\"/>\r\n          <path fillRule=\"evenodd\" d=\"M8 3c-1.552 0-2.94.707-3.857 1.818a.5.5 0 1 1-.771-.636A6.002 6.002 0 0 1 13.917 7H12.9A5.002 5.002 0 0 0 8 3zM3.1 9a5.002 5.002 0 0 0 8.757 2.182.5.5 0 1 1 .771.636A6.002 6.002 0 0 1 2.083 9H3.1z\"/>\r\n        </svg>\r\n    )\r\n};\r\n\r\nexport default ArrowsRepeat;\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {toggleTab} from \"src/actions/uiActions\";\r\nimport store from 'src/store';\r\n\r\nconst Tab = (props) => {\r\n    let stateData = store.getState();\r\n    let tabGroupData=(stateData?.tabGroups.hasOwnProperty(props.groupName) ? stateData.tabGroups[props.groupName] : {});\r\n    let groupClass = props.isActiveTab ? tabGroupData.groupTabActiveClassName  : tabGroupData.groupTabClassName\r\n    let propsClassName = props.tabClass ? props.tabClass : \"\";\r\n    let activeClass = props.isActiveTab ? \"active\" : \"\";\r\n\r\n    return (\r\n            <li className={\"nav-item kimTab \" + groupClass + \" \" + propsClassName} style={Object.assign({},tabGroupData.groupTabStyle,props.tabStyle)}\r\n                 onClick={()=>{store.dispatch(toggleTab(props.groupName,props.tabKey))}}>\r\n                    <a className={\"nav-link kimTabLabel \" + activeClass}>{props.label}</a>\r\n            </li>\r\n        )\r\n};\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        tabGroups:state.tabGroups\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(Tab);\r\n","import React,{useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Tab from './Tab'\r\nimport store from 'src/store';\r\n\r\nconst renderTabs = (tabGroup) => {\r\n    let stateData =store.getState();\r\n    return (\r\n        stateData.tabStore.hasOwnProperty(tabGroup) ? stateData.tabStore[tabGroup].map((item)=>{\r\n            return <Tab label={item.label}\r\n                        groupName={item.groupName}\r\n                        key={item.key}\r\n                        tabVisible={item.tabVisible}\r\n                        tabClass={item.tabClass}\r\n                        tabStyle={item.tabStyle}\r\n                        tabKey={item.key}\r\n                        isActiveTab = {item.isActiveTab}\r\n            />\r\n        }) : null\r\n    )\r\n};\r\n\r\nconst style={};\r\n//\r\nconst TabBlock = (props) => {\r\n    useEffect(()=>{\r\n        let hldrs = document.getElementsByClassName(\"tabContentHldr\");\r\n        for(var i=0;i<hldrs.length;i++){\r\n            hldrs.item(i).style.borderTopLeftRadius = 0;\r\n            hldrs.item(i).style.borderTopRightRadius = 0;\r\n        }\r\n    })\r\n    return (\r\n        <nav className=\"nav tabBlock\" style={Object.assign({},style,{minWidth:props.minWidth ? props.minWidth : 125})}>\r\n            {renderTabs(props.tabGroup)}\r\n        </nav>);\r\n};\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        tabStore:state.tabStore\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(TabBlock);\r\n","import {\r\n    doObtainChecklistDetails,\r\n    doObtainChecklists,\r\n    doObtainGoals,\r\n    doObtainResults,\r\n    doObtainTargets, doSaveChecklistGoal, doSaveChecklistItem, doSaveChecklistTarget, doUpdateChecklist, doUpdateResult\r\n} from \"../../services/cbChecklist/ApiServices\";\r\nimport store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\nimport {lowerCaseKeys} from \"../../utilities/utilityFunctions\";\r\nlet findNum=0;\r\n\r\nexport const checkWindow = () => {\r\n    let exists = false;\r\n    let checker = setInterval(()=>{\r\n        if(window.SITEMODEL?.exists() || findNum===3){\r\n            store.dispatch(updateSiteModelChecklist({windowSetup:true}));\r\n            clearInterval(checker);\r\n        }\r\n        findNum++;\r\n    },3000);\r\n}\r\n\r\nexport const updateCheckList = (item) => {\r\n    doUpdateChecklist(item, processObtainChecklists, failUpdateChecklist);\r\n}\r\n\r\nconst processUpdateChecklist = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nconst failUpdateChecklist = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nexport const saveChecklistTarget = (item) => {\r\n    doSaveChecklistTarget(item, processObtainTargets, failSaveChecklistTarget);\r\n}\r\n\r\nconst processSaveChecklistTarget = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nconst failSaveChecklistTarget = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nexport const makeCheckListInactive = (id) => {\r\n    console.dir(\"Making inactive\");\r\n}\r\n\r\nexport const obtainChecklists = () =>{\r\n    doObtainChecklists(processObtainChecklists, failObtainChecklists)\r\n}\r\n\r\nconst processObtainChecklists = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({allChecklists:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainChecklists = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainChecklistDetails = ( id ) =>{\r\n    doObtainChecklistDetails(id, processObtainChecklistDetails, failObtainChecklistDetails)\r\n}\r\n\r\nconst processObtainChecklistDetails = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklist:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainChecklistDetails = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainTargets = (id) =>{\r\n    doObtainTargets(id, processObtainTargets, failObtainTargets)\r\n}\r\n\r\nconst processObtainTargets = (evt) => {\r\n    console.dir(\"Processing target return\")\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistTargets:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainTargets = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainGoals = (id) =>{\r\n    doObtainGoals(id, processObtainGoals, failObtainGoals)\r\n}\r\n\r\nconst processObtainGoals = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistGoals:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainGoals = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainResults = (id) =>{\r\n    doObtainResults(id, processObtainResults, failObtainResults)\r\n}\r\n\r\nconst processObtainResults = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistResults:createResultDictionary(lowerCaseKeys(evt.data.data))}))\r\n}\r\n\r\nconst createResultDictionary = (data) => {\r\n    let returnMe = {};\r\n    data.forEach((item)=>{\r\n        returnMe[item.testpackage] = returnMe.hasOwnProperty(item.testpackage) ? returnMe[item.testpackage] : {};\r\n        returnMe[item.testpackage][item.goaluuid] = item.result;\r\n    })\r\n\r\n    return returnMe;\r\n}\r\n\r\nconst failObtainResults = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const updateResult = (checklistuuid, target,goal,result) =>{\r\n    doUpdateResult(checklistuuid, target,goal,result, (evt)=>processUpdateResult(checklistuuid,evt), failUpdateResult)\r\n}\r\n\r\nconst processUpdateResult = (checklistuuid,evt) => {\r\n    obtainResults(checklistuuid)\r\n}\r\n\r\nconst failUpdateResult = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\n\r\nexport const saveChecklistGoal = (item) =>{\r\n    doSaveChecklistGoal(item, processObtainGoals, failSaveChecklistGoal)\r\n}\r\n\r\n\r\nconst failSaveChecklistGoal = (evt) => {\r\n    console.dir(evt);\r\n}","import axios from \"axios\";\r\nimport {apiURL} from \"../../utilities/utilityFunctions\";\r\n\r\nexport const doObtainChecklists = ( callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/\").then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainChecklistDetails = ( id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainTargets = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/targets/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainGoals = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/goals/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainResults = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/results/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doUpdateResult = (checklistuuid, target,goal,result, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/results/\" + checklistuuid,{goal:goal,target:target,result:result}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doSaveChecklistTarget = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/targets\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doUpdateChecklist = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doSaveChecklistGoal = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/goals\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\n"],"names":["updateSiteModelChecklist","status","type","payload","addToControlBlock","removeFromControlBlock","addTabGroup","tabGroupData","removeTabGroup","tabGroupName","addTabToGroup","tabData","removeTabFromGroup","groupName","keyName","toggleTab","key","addTabPanelGroup","addControlSet","controls","_ref","checklistuuid","goal","target","result","_jsx","checked","onChange","evt","updateResult","setValue","currentTarget","connect","state","siteModelChecklist","_store$getState$siteM","_store$getState$siteM2","_store$getState$siteM3","useEffect","window","SITEMODEL","checkWindow","store","dispatch","createTabGroupObject","createTabModel","windowSetup","getState","obtainChecklists","checklistId","currentChecklist","id","obtainTargets","obtainGoals","obtainResults","style","display","children","allCheckLists","allChecklists","_jsxs","className","textAlign","NewChecklistButton","map","item","idx","ChooseRow","name","description","OpenChecklist","MakeCheckListInactive","parentid","displayOrder","onClick","allTargets","currentChecklistTargets","push","isDirty","addChild","updateChecklist","property","value","checklist","active","updateCheckList","Object","assign","isNaN","displayorder","_useState","useState","_useState2","_slicedToArray","setGoal","bgcolor","hasOwnProperty","saveButton","saveChecklistGoal","backgroundColor","label","EditTargetRow","_ref$indent","indent","checkItem","setCheckItem","saveChecklistTarget","childs","filter","_Fragment","testpackage","paddingLeft","width","CreateEditChildButton","length","child","diplayOrder","_store$getState$siteM4","_store$getState$siteM5","currentCheckList","targets","goals","currentChecklistGoals","results","currentChecklistResults","ReloadButton","_item$label","TargetRow","depth","dataStore","tabStore","allGoals","EditGoalRow","panelDetails","content","Details","Targets","Goals","TabBlock","tabGroup","renderPanels","addChecklist","props","classes","reload","ArrowsRepeat","showChildren","setShowChildren","indentAmount","showAllChildren","displayValue","Checkbox","left","top","size","color","xmlns","height","fill","transform","viewBox","d","fillRule","tabGroups","stateData","groupClass","isActiveTab","groupTabActiveClassName","groupTabClassName","propsClassName","tabClass","activeClass","groupTabStyle","tabStyle","tabKey","renderTabs","Tab","tabVisible","hldrs","document","getElementsByClassName","i","borderTopLeftRadius","borderTopRightRadius","minWidth","findNum","checker","setInterval","_window$SITEMODEL","exists","clearInterval","doUpdateChecklist","processObtainChecklists","failUpdateChecklist","console","dir","doSaveChecklistTarget","processObtainTargets","failSaveChecklistTarget","makeCheckListInactive","doObtainChecklists","failObtainChecklists","lowerCaseKeys","data","obtainChecklistDetails","doObtainChecklistDetails","processObtainChecklistDetails","failObtainChecklistDetails","doObtainTargets","failObtainTargets","doObtainGoals","processObtainGoals","failObtainGoals","doObtainResults","processObtainResults","failObtainResults","createResultDictionary","returnMe","forEach","goaluuid","doUpdateResult","processUpdateResult","failUpdateResult","doSaveChecklistGoal","failSaveChecklistGoal","callBack","Fail","axios","apiURL","then","catch"],"sourceRoot":""}