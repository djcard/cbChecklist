{"version":3,"file":"static/js/899.936e9052.chunk.js","mappings":"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","sources":["actions/cbChecklist_Actions.js","actions/uiActions.js","components/cbChecklist/ChecklistMonitor.js","containers/cbChecklist/checkListMethods.js","services/cbChecklist/ApiServices.js"],"sourcesContent":["export const updateSiteModelChecklist = (status) =>{\r\n    return {\r\n        type:\"UPDATE_SITE_MODEL_CHECKLIST\",\r\n        payload:status\r\n    }\r\n};\r\n","\r\n//Control Blocks\r\nexport const addToControlBlock = (status) =>{\r\n    return {\r\n        type:\"ADD_TO_CONTROL_BLOCK\",\r\n        payload:status\r\n    }\r\n};\r\n\r\nexport const removeFromControlBlock = (status) =>{\r\n    return {\r\n        type:\"REMOVE_FROM_CONTROL_BLOCK\",\r\n        payload:status\r\n    }\r\n};\r\n\r\n//Tabs\r\nexport const addTabGroup = (tabGroupData)=>{\r\n    return {\r\n        type:\"ADD_TAB_GROUP\",\r\n        payload:tabGroupData\r\n    }\r\n};\r\n\r\nexport const removeTabGroup = (tabGroupName)=>{\r\n    return {\r\n        type:\"REMOVE_TAB_GROUP\",\r\n        payload:tabGroupName\r\n    }\r\n};\r\n\r\nexport const addTabToGroup = (tabData) => {\r\n    return {\r\n        type:\"ADD_TAB_TO_GROUP\",\r\n        payload:tabData\r\n    }\r\n};\r\n\r\nexport const removeTabFromGroup = (groupName,keyName) => {\r\n    return {\r\n        type:\"REMOVE_TAB_FROM_GROUP\",\r\n        payload: {groupName:groupName,keyName:keyName}\r\n    }\r\n};\r\n\r\nexport const toggleTab = (groupName,key) => {\r\n    return {\r\n        type:\"TOGGLE_TAB\",\r\n        payload:{groupName:groupName,key:key}\r\n    }\r\n};\r\n\r\nexport const addTabPanelGroup = (groupName) =>{\r\n    return {\r\n        type:\"ADD_TAB_PANEL_GROUP\",\r\n        payload:groupName\r\n    }\r\n}\r\n\r\nexport const addControlSet = (controls) => {\r\n    return {\r\n        type:\"ADD_CONTROLS\",\r\n        payload:controls\r\n    }\r\n};","import {connect} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {\r\n    checkWindow,\r\n    obtainChecklists,\r\n    obtainGoals,\r\n    obtainResults,\r\n    obtainTargets\r\n} from \"../../containers/cbChecklist/checkListMethods\";\r\nimport store from \"../../store\";\r\nimport {addTabGroup, addTabToGroup} from \"../../actions/uiActions\";\r\nimport {createTabGroupObject,createTabModel} from \"../../datamodels/foundation\";\r\n\r\nconst ChecklistMonitor = () => {\r\n    useEffect(()=>{\r\n        if(!window.SITEMODEL) {\r\n            checkWindow();\r\n        }\r\n        store.dispatch(addTabGroup(createTabGroupObject(\"checkTabs\", \"tabMuted\", {}, \"\", {}, \"kimTabActive\")));\r\n        store.dispatch(addTabToGroup(createTabModel(\"Choose\", \"checkTabs\", \"choose\", true, true, {}, \"\")));\r\n        store.dispatch(addTabToGroup(createTabModel(\"Manage\", \"checkTabs\", \"manage\", true, false, {}, \"\")));\r\n        store.dispatch(addTabToGroup(createTabModel(\"Execute\", \"checkTabs\", \"execute\", true, false, {}, \"\")));\r\n\r\n        store.dispatch(addTabGroup(createTabGroupObject(\"manageTabs\", \"tabMuted\", {}, \"\", {}, \"kimTabActive\")));\r\n        store.dispatch(addTabToGroup(createTabModel(\"Details\", \"manageTabs\", \"details\", true, true, {}, \"\")));\r\n        store.dispatch(addTabToGroup(createTabModel(\"Targets\", \"manageTabs\", \"targets\", true, false, {}, \"\")));\r\n        store.dispatch(addTabToGroup(createTabModel(\"Goals\", \"manageTabs\", \"goals\", true, false, {}, \"\")));\r\n\r\n    },[]);\r\n\r\n    let windowSetup = store.getState().siteModelChecklist?.windowSetup;\r\n\r\n    useEffect(()=>{\r\n        if(windowSetup) {\r\n            obtainChecklists();\r\n        }\r\n    },[windowSetup])\r\n\r\n    let checklistId = store.getState().siteModelChecklist?.currentChecklist?.id;\r\n\r\n    useEffect(()=>{\r\n        if(checklistId) {\r\n            obtainTargets(checklistId);\r\n            obtainGoals(checklistId);\r\n            obtainResults(checklistId);\r\n        }\r\n    },[checklistId])\r\n\r\n    return <div style={{display:\"none\"}}>Monitor</div>\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        siteModelChecklist:state.siteModelChecklist\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(ChecklistMonitor);","import {\r\n    doObtainChecklistDetails,\r\n    doObtainChecklists,\r\n    doObtainGoals,\r\n    doObtainResults,\r\n    doObtainTargets, doSaveChecklistGoal, doSaveChecklistItem, doSaveChecklistTarget, doUpdateChecklist, doUpdateResult\r\n} from \"../../services/cbChecklist/ApiServices\";\r\nimport store from \"../../store\";\r\nimport {updateSiteModelChecklist} from \"../../actions/cbChecklist_Actions\";\r\nimport {lowerCaseKeys} from \"../../utilities/utilityFunctions\";\r\nlet findNum=0;\r\n\r\nexport const checkWindow = () => {\r\n    let exists = false;\r\n    let checker = setInterval(()=>{\r\n        if(window.SITEMODEL?.exists() || findNum===3){\r\n            store.dispatch(updateSiteModelChecklist({windowSetup:true}));\r\n            clearInterval(checker);\r\n        }\r\n        findNum++;\r\n    },3000);\r\n}\r\n\r\nexport const updateCheckList = (item) => {\r\n    doUpdateChecklist(item, processObtainChecklists, failUpdateChecklist);\r\n}\r\n\r\nconst processUpdateChecklist = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nconst failUpdateChecklist = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nexport const saveChecklistTarget = (item) => {\r\n    doSaveChecklistTarget(item, processObtainTargets, failSaveChecklistTarget);\r\n}\r\n\r\nconst processSaveChecklistTarget = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nconst failSaveChecklistTarget = (evt)=>{\r\n    console.dir(evt);\r\n}\r\n\r\nexport const makeCheckListInactive = (id) => {\r\n    console.dir(\"Making inactive\");\r\n}\r\n\r\nexport const obtainChecklists = () =>{\r\n    doObtainChecklists(processObtainChecklists, failObtainChecklists)\r\n}\r\n\r\nconst processObtainChecklists = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({allChecklists:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainChecklists = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainChecklistDetails = ( id ) =>{\r\n    doObtainChecklistDetails(id, processObtainChecklistDetails, failObtainChecklistDetails)\r\n}\r\n\r\nconst processObtainChecklistDetails = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklist:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainChecklistDetails = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainTargets = (id) =>{\r\n    doObtainTargets(id, processObtainTargets, failObtainTargets)\r\n}\r\n\r\nconst processObtainTargets = (evt) => {\r\n    console.dir(\"Processing target return\")\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistTargets:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainTargets = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainGoals = (id) =>{\r\n    doObtainGoals(id, processObtainGoals, failObtainGoals)\r\n}\r\n\r\nconst processObtainGoals = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistGoals:lowerCaseKeys(evt.data.data)}))\r\n}\r\n\r\nconst failObtainGoals = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const obtainResults = (id) =>{\r\n    doObtainResults(id, processObtainResults, failObtainResults)\r\n}\r\n\r\nconst processObtainResults = (evt) => {\r\n    store.dispatch(updateSiteModelChecklist({currentChecklistResults:createResultDictionary(lowerCaseKeys(evt.data.data))}))\r\n}\r\n\r\nconst createResultDictionary = (data) => {\r\n    let returnMe = {};\r\n    data.forEach((item)=>{\r\n        returnMe[item.testpackage] = returnMe.hasOwnProperty(item.testpackage) ? returnMe[item.testpackage] : {};\r\n        returnMe[item.testpackage][item.goaluuid] = item.result;\r\n    })\r\n\r\n    return returnMe;\r\n}\r\n\r\nconst failObtainResults = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\nexport const updateResult = (checklistuuid, target,goal,result) =>{\r\n    doUpdateResult(checklistuuid, target,goal,result, (evt)=>processUpdateResult(checklistuuid,evt), failUpdateResult)\r\n}\r\n\r\nconst processUpdateResult = (checklistuuid,evt) => {\r\n    obtainResults(checklistuuid)\r\n}\r\n\r\nconst failUpdateResult = (evt) => {\r\n    console.dir(evt);\r\n}\r\n\r\n\r\nexport const saveChecklistGoal = (item) =>{\r\n    doSaveChecklistGoal(item, processObtainGoals, failSaveChecklistGoal)\r\n}\r\n\r\n\r\nconst failSaveChecklistGoal = (evt) => {\r\n    console.dir(evt);\r\n}","import axios from \"axios\";\r\nimport {apiURL} from \"../../utilities/utilityFunctions\";\r\n\r\nexport const doObtainChecklists = ( callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/\").then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainChecklistDetails = ( id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainTargets = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/targets/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainGoals = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/goals/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doObtainResults = (id, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.get(apiURL() +  \"/cbChecklist/results/\" + id).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doUpdateResult = (checklistuuid, target,goal,result, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/results/\" + checklistuuid,{goal:goal,target:target,result:result}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doSaveChecklistTarget = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/targets\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doUpdateChecklist = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\nexport const doSaveChecklistGoal = (item, callBack,Fail) => {\r\n    //{headers:{\"x-auth-token\":getToke(),\"x-refresh-token\":getRefrehToken(),\"appCode\":\"cc\"}}\r\n    axios.post(apiURL() +  \"/cbChecklist/goals\",{item}).then((evt)=>callBack(evt)).catch((evt)=>Fail(evt));\r\n};\r\n\r\n"],"names":["updateSiteModelChecklist","status","type","payload","addToControlBlock","removeFromControlBlock","addTabGroup","tabGroupData","removeTabGroup","tabGroupName","addTabToGroup","tabData","removeTabFromGroup","groupName","keyName","toggleTab","key","addTabPanelGroup","addControlSet","controls","connect","state","siteModelChecklist","_store$getState$siteM","_store$getState$siteM2","_store$getState$siteM3","useEffect","window","SITEMODEL","checkWindow","store","dispatch","createTabGroupObject","createTabModel","windowSetup","getState","obtainChecklists","checklistId","currentChecklist","id","obtainTargets","obtainGoals","obtainResults","_jsx","style","display","children","findNum","checker","setInterval","_window$SITEMODEL","exists","clearInterval","updateCheckList","item","doUpdateChecklist","processObtainChecklists","failUpdateChecklist","evt","console","dir","saveChecklistTarget","doSaveChecklistTarget","processObtainTargets","failSaveChecklistTarget","makeCheckListInactive","doObtainChecklists","failObtainChecklists","allChecklists","lowerCaseKeys","data","obtainChecklistDetails","doObtainChecklistDetails","processObtainChecklistDetails","failObtainChecklistDetails","doObtainTargets","failObtainTargets","currentChecklistTargets","doObtainGoals","processObtainGoals","failObtainGoals","currentChecklistGoals","doObtainResults","processObtainResults","failObtainResults","currentChecklistResults","createResultDictionary","returnMe","forEach","testpackage","hasOwnProperty","goaluuid","result","updateResult","checklistuuid","target","goal","doUpdateResult","processUpdateResult","failUpdateResult","saveChecklistGoal","doSaveChecklistGoal","failSaveChecklistGoal","callBack","Fail","axios","apiURL","then","catch"],"sourceRoot":""}