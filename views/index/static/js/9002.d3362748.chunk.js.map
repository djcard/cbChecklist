{"version":3,"file":"static/js/9002.d3362748.chunk.js","mappings":"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","sources":["KIM/utilities/FormBuilder.js","utilities/FormBuilder.js"],"sourcesContent":["import Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport React from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nexport const bootstrapHorizontalText = (layout,value) =>{\r\n    return (\r\n        <Form.Group as={Row} key={layout.id}>\r\n            <Form.Label column sm={3}>\r\n                {layout.label}\r\n            </Form.Label>\r\n            <Col sm={9}>\r\n                <Form.Control key={layout.id} id={layout.id} type={layout.controltype} placeholder={layout.placeholder} value={value} onChange={layout.onChange} onKeyPress={layout.onKeyPress} autoComplete={layout.autocomplete}/>\r\n            </Col>\r\n        </Form.Group>\r\n    )\r\n};\r\n\r\nexport const bootstrapHorizontalButton = (layout,value) =>{\r\n    return (\r\n        <Form.Group as={Row} key={layout.id}>\r\n            <Form.Label column sm={2}>\r\n                &nbsp;\r\n            </Form.Label>\r\n            <Col sm={10}>\r\n                <Button onClick={layout.onClick} key={\"button\"+layout.label}>{layout.label}</Button>\r\n            </Col>\r\n        </Form.Group>\r\n    )\r\n};\r\n\r\nconst renderSelectOptions = (options) => {\r\n    return options?.map((item)=>{\r\n        return (<option value={item.value} key={item.value}>{item.label}</option>)\r\n    })\r\n};\r\n\r\nexport const bootstrapHorizontalSelect = (layout,value) =>{\r\n    return (\r\n        <Form.Group as={Row} key={layout.id}>\r\n            <Form.Label column sm={2}>\r\n                {layout.label}\r\n            </Form.Label>\r\n            <Col sm={10}>\r\n                <Form.Control as=\"select\" custom id={layout.id} value={value} onChange={layout.onChange}>\r\n                    <option value=\"\" key=\"blankGroup\"></option>\r\n                    {renderSelectOptions(layout.options)}\r\n                </Form.Control>\r\n            </Col>\r\n        </Form.Group>\r\n    )\r\n};\r\n\r\nexport const bootstrapHorizontalTextArea = (layout,value) => {\r\n    return(<Form.Group controlId={layout.id} key={layout.id}>\r\n        <Form.Label>{layout.label}</Form.Label>\r\n        <Form.Control as=\"textarea\" rows=\"3\" value={value} onChange={layout.onChange} />\r\n    </Form.Group>)\r\n};\r\n\r\nexport const bootstrapHorizontalCheckBox = (layout,value) => {\r\n    return(<Form.Check\r\n        type=\"checkbox\"\r\n        id={layout.id}\r\n        label={layout.label}\r\n        checked={value}\r\n        onChange={layout.onChange}\r\n        key={layout.id}\r\n    />)\r\n};\r\n\r\nexport const hidden = (layout,value)=>{\r\n    return <input type=\"hidden\" id={layout.id} value={layout.value} />\r\n};\r\n","import * as KimFormBuilder from 'src/KIM/utilities/FormBuilder';\r\n\r\nconst FormBuilder = (layout,value)=>{\r\n    if(KimFormBuilder[layout.styletype]) {\r\n        return KimFormBuilder[layout.styletype](layout, value);\r\n    }\r\n    else{\r\n        console.dir(\"No such function \" + layout.styletype);\r\n    }\r\n};\r\n\r\nexport default FormBuilder\r\n"],"names":["bootstrapHorizontalText","layout","value","_jsxs","Form","Group","as","Row","children","_jsx","Label","column","sm","label","Col","Control","id","type","controltype","placeholder","onChange","onKeyPress","autoComplete","autocomplete","bootstrapHorizontalButton","Button","onClick","bootstrapHorizontalSelect","custom","options","map","item","bootstrapHorizontalTextArea","controlId","rows","bootstrapHorizontalCheckBox","Check","checked","hidden","KimFormBuilder","styletype","console","dir"],"sourceRoot":""}