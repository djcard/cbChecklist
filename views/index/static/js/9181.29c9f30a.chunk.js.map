{"version":3,"file":"static/js/9181.29c9f30a.chunk.js","mappings":"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","sources":["containers/testing/testingFunctions.js","utilities/tests/UtilityFunctionsTest.js"],"sourcesContent":["import store from \"src/store\";\r\nimport {updateTesting} from \"src/actions/testingActions\";\r\n\r\nexport const functionRun = (name)=>{\r\n    let allCounts = store.getState().testing?.counts ? store.getState().testing.counts : {};\r\n    let count = allCounts.hasOwnProperty(name) ? allCounts[name] : 0;\r\n    allCounts[name]=count+1;\r\n    store.dispatch(updateTesting({counts:allCounts}));\r\n};\r\n","import React,{useEffect} from 'react';\r\nimport {\r\n    apiURL, closeModal,\r\n    contentURL,\r\n    createDictionary,\r\n    gridMaker,\r\n    helpURL, hideSpinner,\r\n    lowerCaseKeys,\r\n    makeAppTopMod,\r\n    parseInitials,\r\n    randNum,\r\n    showSpinner,\r\n    gridMakerTable, openModal, loadNewMod, obtainURLParam, determineScreenOrientation\r\n} from \"../utilityFunctions\";\r\nimport {updateTesting} from \"src/actions/testingActions\";\r\nimport store from 'src/store';\r\nimport * as allUtes from \"../utilityFunctions\";\r\n\r\nimport {functionRun} from \"../../containers/testing/testingFunctions\";\r\n\r\n\r\nconst lower1 = {\r\n    \"KEY1\":\"hello\",\r\n    \"KEY2\":{\r\n        \"INSIDE1\":\"yo\"\r\n    },\r\n    \"KEY4\":[\r\n        {\"BECAUSE\":\"I am here\"}\r\n    ]\r\n};\r\n\r\nconst dictionaryData = [\r\n    {\r\n        name:\"Mister\",\r\n        rank:\"Major\",\r\n        serialNumber:\"5551212\"\r\n    },\r\n    {\r\n        name:\"Master\",\r\n        rank:\"Sgt\",\r\n        serialNumber:\"8675309\"\r\n    },\r\n    {\r\n        name:\"Miss\",\r\n        rank:\"General\",\r\n        serialNumber:\"101010\"\r\n    }\r\n];\r\nconst token=\"ghjghghghg\";\r\nconst innerhtml=\"blargy,blargy\";\r\n\r\nconst loadnewModTest = (...args) => {\r\n    functionRun(\"loadNew\");\r\n    console.dir(args[0]);\r\n    store.dispatch(updateTesting({loadMod:args[0]}));\r\n}\r\n\r\nconst UtilityFunctionsTest = () => {\r\n    useEffect(()=>{\r\n        closeModal();\r\n        closeModal(\"blarg\");\r\n        hideSpinner();\r\n        makeAppTopMod(\"utilities/tests/TestComponent\");\r\n        store.dispatch(updateTesting({\r\n            numberElements:Object.keys(allUtes).length,\r\n            apiurlrandom:apiURL(\"blarg\"),\r\n            apiurlexist:apiURL(),\r\n            contenturlrandom:contentURL(\"blarg\"),\r\n            contenturlexist:contentURL(),\r\n            dictionary1key:createDictionary(dictionaryData,\"name\"),\r\n            dictionary2key:createDictionary(dictionaryData,\"name\",\"rank\"),\r\n            dictionarymissingkey:createDictionary(dictionaryData,\"howdy\"),\r\n            dictionaryData:dictionaryData,\r\n            grid1:gridMaker(1),\r\n            grid2:gridMaker(2),\r\n            grid3:gridMaker(3),\r\n            grid4:gridMaker(4),\r\n            grid5:gridMaker(5),\r\n            grid6:gridMaker(6),\r\n            gridTable1:gridMakerTable(1),\r\n            gridTable2:gridMakerTable(2),\r\n            gridTable3:gridMakerTable(3),\r\n            helpurlrandom:helpURL(\"blarg\"),\r\n            helpurlexist:helpURL(),\r\n            initialsBase1:\"ST\",parseInitials:parseInitials(\"Steven Townsend\"),\r\n            initialsBase2:\"SCJT\",parseInitials2:parseInitials(\"Steven Christine Jeremy Townsend\"),\r\n            lowerCaseKeyTest:lowerCaseKeys(lower1),\r\n            randnum1:randNum(1,99),\r\n            randnum2:randNum(1,99),\r\n            innerHTML:innerhtml,\r\n            userToken:token,\r\n            urlparam:obtainURLParam(\"randLoad\")\r\n        }));\r\n\r\n        loadNewMod(\"utilities/tests/TestComponent\",(mod)=>loadnewModTest(mod.default))\r\n\r\n\r\n    },[]);\r\n\r\n    return (\r\n        <div id=\"utilityFunctionTest\">\r\n            <div>\r\n                <button id=\"showSpinner\" onClick={()=>showSpinner()}>Show Spinner</button>\r\n                <button id=\"hideSpinner\" onClick={()=>hideSpinner()}>Hide Spinner</button>\r\n                <button id=\"openModal1\" onClick={()=>openModal(\"utilities/tests/TestComponent\",\"first Title\",\"firstFooter\")}>open Modal</button>\r\n\r\n                <button id=\"testLandscape\" onClick={()=>determineScreenOrientation(200,100)}>Test Horizontal</button>\r\n                <button id=\"testPortrait\" onClick={()=>determineScreenOrientation(100,200)}>Test Horizontal</button>\r\n\r\n                <div id=\"testdiv\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default UtilityFunctionsTest;\r\n"],"names":["functionRun","name","_store$getState$testi","allCounts","store","getState","testing","counts","count","hasOwnProperty","dispatch","updateTesting","lower1","dictionaryData","rank","serialNumber","useEffect","closeModal","hideSpinner","makeAppTopMod","numberElements","Object","keys","allUtes","length","apiurlrandom","apiURL","apiurlexist","contenturlrandom","contentURL","contenturlexist","dictionary1key","createDictionary","dictionary2key","dictionarymissingkey","grid1","gridMaker","grid2","grid3","grid4","grid5","grid6","gridTable1","gridMakerTable","gridTable2","gridTable3","helpurlrandom","helpURL","helpurlexist","initialsBase1","parseInitials","initialsBase2","parseInitials2","lowerCaseKeyTest","lowerCaseKeys","randnum1","randNum","randnum2","innerHTML","userToken","urlparam","obtainURLParam","loadNewMod","mod","console","dir","arguments","undefined","loadMod","loadnewModTest","default","_jsx","id","children","_jsxs","onClick","showSpinner","openModal","determineScreenOrientation"],"sourceRoot":""}